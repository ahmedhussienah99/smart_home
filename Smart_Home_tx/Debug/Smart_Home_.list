
Smart_Home_.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000208c  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000120  08002198  08002198  00012198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  080022b8  080022b8  000122b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080022bc  080022bc  000122bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  000122c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000003c  20000000  080022c0  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000080  2000003c  080022c0  0002003c  2**0
                  ALLOC
  8 .ARM.attributes 00000029  00000000  00000000  000122c0  2**0
                  CONTENTS, READONLY
  9 .debug_info   00001cb8  00000000  00000000  000122e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00000967  00000000  00000000  00013fa1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000002b8  00000000  00000000  00014908  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  00014bc0  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000154b  00000000  00000000  00014dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0000090c  00000000  00000000  0001631b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      0000007c  00000000  00000000  00016c27  2**0
                  CONTENTS, READONLY
 16 .debug_frame  000007e4  00000000  00000000  00016ca4  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .stabstr      0000003f  00000000  00000000  00017488  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000000 	.word	0x20000000
 8000128:	00000000 	.word	0x00000000
 800012c:	08002180 	.word	0x08002180

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000004 	.word	0x20000004
 8000148:	08002180 	.word	0x08002180

0800014c <MGPIO_VidSetPinDirection>:

#include"GPIO_INTERFACE.h"
#include"GPIO_REG.h"


void MGPIO_VidSetPinDirection( u8 Copy_u8Port , u8 Copy_u8Pin , u8 u8Copy_u8Mode ){
 800014c:	b480      	push	{r7}
 800014e:	b083      	sub	sp, #12
 8000150:	af00      	add	r7, sp, #0
 8000152:	4603      	mov	r3, r0
 8000154:	71fb      	strb	r3, [r7, #7]
 8000156:	460b      	mov	r3, r1
 8000158:	71bb      	strb	r3, [r7, #6]
 800015a:	4613      	mov	r3, r2
 800015c:	717b      	strb	r3, [r7, #5]

	switch(Copy_u8Port){
 800015e:	79fb      	ldrb	r3, [r7, #7]
 8000160:	2b01      	cmp	r3, #1
 8000162:	d03a      	beq.n	80001da <MGPIO_VidSetPinDirection+0x8e>
 8000164:	2b02      	cmp	r3, #2
 8000166:	d06d      	beq.n	8000244 <MGPIO_VidSetPinDirection+0xf8>
 8000168:	2b00      	cmp	r3, #0
 800016a:	d000      	beq.n	800016e <MGPIO_VidSetPinDirection+0x22>
			MGPIOC->CRH &= ~ ( ( 0b1111 )    << ( Copy_u8Pin * 4 ) );
			MGPIOC->CRH |= ( u8Copy_u8Mode ) << ( Copy_u8Pin * 4 )  ;
		}

		break;
	default :break;
 800016c:	e0a4      	b.n	80002b8 <MGPIO_VidSetPinDirection+0x16c>
		if(Copy_u8Pin <= 7 ){//low
 800016e:	79bb      	ldrb	r3, [r7, #6]
 8000170:	2b07      	cmp	r3, #7
 8000172:	d815      	bhi.n	80001a0 <MGPIO_VidSetPinDirection+0x54>
			MGPIOA->CRL &= ~ ( ( 0b1111 )    << ( Copy_u8Pin * 4 ));// R M W
 8000174:	4953      	ldr	r1, [pc, #332]	; (80002c4 <MGPIO_VidSetPinDirection+0x178>)
 8000176:	4b53      	ldr	r3, [pc, #332]	; (80002c4 <MGPIO_VidSetPinDirection+0x178>)
 8000178:	681b      	ldr	r3, [r3, #0]
 800017a:	79ba      	ldrb	r2, [r7, #6]
 800017c:	0092      	lsls	r2, r2, #2
 800017e:	200f      	movs	r0, #15
 8000180:	fa00 f202 	lsl.w	r2, r0, r2
 8000184:	43d2      	mvns	r2, r2
 8000186:	4013      	ands	r3, r2
 8000188:	600b      	str	r3, [r1, #0]
			MGPIOA->CRL |= ( u8Copy_u8Mode ) << ( Copy_u8Pin * 4 );
 800018a:	484e      	ldr	r0, [pc, #312]	; (80002c4 <MGPIO_VidSetPinDirection+0x178>)
 800018c:	4b4d      	ldr	r3, [pc, #308]	; (80002c4 <MGPIO_VidSetPinDirection+0x178>)
 800018e:	681b      	ldr	r3, [r3, #0]
 8000190:	7979      	ldrb	r1, [r7, #5]
 8000192:	79ba      	ldrb	r2, [r7, #6]
 8000194:	0092      	lsls	r2, r2, #2
 8000196:	fa01 f202 	lsl.w	r2, r1, r2
 800019a:	4313      	orrs	r3, r2
 800019c:	6003      	str	r3, [r0, #0]
		break;
 800019e:	e086      	b.n	80002ae <MGPIO_VidSetPinDirection+0x162>
		}else if(Copy_u8Pin <=15 ){//high
 80001a0:	79bb      	ldrb	r3, [r7, #6]
 80001a2:	2b0f      	cmp	r3, #15
 80001a4:	f200 8083 	bhi.w	80002ae <MGPIO_VidSetPinDirection+0x162>
			Copy_u8Pin = Copy_u8Pin - 8;
 80001a8:	79bb      	ldrb	r3, [r7, #6]
 80001aa:	3b08      	subs	r3, #8
 80001ac:	71bb      	strb	r3, [r7, #6]
			MGPIOA->CRH &= ~ ( ( 0b1111 )    << ( Copy_u8Pin * 4 ) );
 80001ae:	4945      	ldr	r1, [pc, #276]	; (80002c4 <MGPIO_VidSetPinDirection+0x178>)
 80001b0:	4b44      	ldr	r3, [pc, #272]	; (80002c4 <MGPIO_VidSetPinDirection+0x178>)
 80001b2:	685b      	ldr	r3, [r3, #4]
 80001b4:	79ba      	ldrb	r2, [r7, #6]
 80001b6:	0092      	lsls	r2, r2, #2
 80001b8:	200f      	movs	r0, #15
 80001ba:	fa00 f202 	lsl.w	r2, r0, r2
 80001be:	43d2      	mvns	r2, r2
 80001c0:	4013      	ands	r3, r2
 80001c2:	604b      	str	r3, [r1, #4]
			MGPIOA->CRH |= ( u8Copy_u8Mode ) << ( Copy_u8Pin * 4 );
 80001c4:	483f      	ldr	r0, [pc, #252]	; (80002c4 <MGPIO_VidSetPinDirection+0x178>)
 80001c6:	4b3f      	ldr	r3, [pc, #252]	; (80002c4 <MGPIO_VidSetPinDirection+0x178>)
 80001c8:	685b      	ldr	r3, [r3, #4]
 80001ca:	7979      	ldrb	r1, [r7, #5]
 80001cc:	79ba      	ldrb	r2, [r7, #6]
 80001ce:	0092      	lsls	r2, r2, #2
 80001d0:	fa01 f202 	lsl.w	r2, r1, r2
 80001d4:	4313      	orrs	r3, r2
 80001d6:	6043      	str	r3, [r0, #4]
		break;
 80001d8:	e069      	b.n	80002ae <MGPIO_VidSetPinDirection+0x162>
		if(Copy_u8Pin <= 7 ){//low
 80001da:	79bb      	ldrb	r3, [r7, #6]
 80001dc:	2b07      	cmp	r3, #7
 80001de:	d815      	bhi.n	800020c <MGPIO_VidSetPinDirection+0xc0>
			MGPIOB->CRL &= ~ ( ( 0b1111 )    << ( Copy_u8Pin * 4 ) );// R M W
 80001e0:	4939      	ldr	r1, [pc, #228]	; (80002c8 <MGPIO_VidSetPinDirection+0x17c>)
 80001e2:	4b39      	ldr	r3, [pc, #228]	; (80002c8 <MGPIO_VidSetPinDirection+0x17c>)
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	79ba      	ldrb	r2, [r7, #6]
 80001e8:	0092      	lsls	r2, r2, #2
 80001ea:	200f      	movs	r0, #15
 80001ec:	fa00 f202 	lsl.w	r2, r0, r2
 80001f0:	43d2      	mvns	r2, r2
 80001f2:	4013      	ands	r3, r2
 80001f4:	600b      	str	r3, [r1, #0]
			MGPIOB->CRL |= ( u8Copy_u8Mode ) << ( Copy_u8Pin * 4 )  ;
 80001f6:	4834      	ldr	r0, [pc, #208]	; (80002c8 <MGPIO_VidSetPinDirection+0x17c>)
 80001f8:	4b33      	ldr	r3, [pc, #204]	; (80002c8 <MGPIO_VidSetPinDirection+0x17c>)
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	7979      	ldrb	r1, [r7, #5]
 80001fe:	79ba      	ldrb	r2, [r7, #6]
 8000200:	0092      	lsls	r2, r2, #2
 8000202:	fa01 f202 	lsl.w	r2, r1, r2
 8000206:	4313      	orrs	r3, r2
 8000208:	6003      	str	r3, [r0, #0]
		break;
 800020a:	e052      	b.n	80002b2 <MGPIO_VidSetPinDirection+0x166>
		}else if(Copy_u8Pin <=15 ){//high
 800020c:	79bb      	ldrb	r3, [r7, #6]
 800020e:	2b0f      	cmp	r3, #15
 8000210:	d84f      	bhi.n	80002b2 <MGPIO_VidSetPinDirection+0x166>
			Copy_u8Pin = Copy_u8Pin - 8;
 8000212:	79bb      	ldrb	r3, [r7, #6]
 8000214:	3b08      	subs	r3, #8
 8000216:	71bb      	strb	r3, [r7, #6]
			MGPIOB->CRH &= ~ ( ( 0b1111 )    << ( Copy_u8Pin * 4 ) );
 8000218:	492b      	ldr	r1, [pc, #172]	; (80002c8 <MGPIO_VidSetPinDirection+0x17c>)
 800021a:	4b2b      	ldr	r3, [pc, #172]	; (80002c8 <MGPIO_VidSetPinDirection+0x17c>)
 800021c:	685b      	ldr	r3, [r3, #4]
 800021e:	79ba      	ldrb	r2, [r7, #6]
 8000220:	0092      	lsls	r2, r2, #2
 8000222:	200f      	movs	r0, #15
 8000224:	fa00 f202 	lsl.w	r2, r0, r2
 8000228:	43d2      	mvns	r2, r2
 800022a:	4013      	ands	r3, r2
 800022c:	604b      	str	r3, [r1, #4]
			MGPIOB->CRH |= ( u8Copy_u8Mode ) << ( Copy_u8Pin * 4 )  ;
 800022e:	4826      	ldr	r0, [pc, #152]	; (80002c8 <MGPIO_VidSetPinDirection+0x17c>)
 8000230:	4b25      	ldr	r3, [pc, #148]	; (80002c8 <MGPIO_VidSetPinDirection+0x17c>)
 8000232:	685b      	ldr	r3, [r3, #4]
 8000234:	7979      	ldrb	r1, [r7, #5]
 8000236:	79ba      	ldrb	r2, [r7, #6]
 8000238:	0092      	lsls	r2, r2, #2
 800023a:	fa01 f202 	lsl.w	r2, r1, r2
 800023e:	4313      	orrs	r3, r2
 8000240:	6043      	str	r3, [r0, #4]
		break;
 8000242:	e036      	b.n	80002b2 <MGPIO_VidSetPinDirection+0x166>
		if(Copy_u8Pin <= 7 ){//low
 8000244:	79bb      	ldrb	r3, [r7, #6]
 8000246:	2b07      	cmp	r3, #7
 8000248:	d815      	bhi.n	8000276 <MGPIO_VidSetPinDirection+0x12a>
			MGPIOC->CRL &= ~ ( ( 0b1111 )    << ( Copy_u8Pin * 4 ) );// R M W
 800024a:	4920      	ldr	r1, [pc, #128]	; (80002cc <MGPIO_VidSetPinDirection+0x180>)
 800024c:	4b1f      	ldr	r3, [pc, #124]	; (80002cc <MGPIO_VidSetPinDirection+0x180>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	79ba      	ldrb	r2, [r7, #6]
 8000252:	0092      	lsls	r2, r2, #2
 8000254:	200f      	movs	r0, #15
 8000256:	fa00 f202 	lsl.w	r2, r0, r2
 800025a:	43d2      	mvns	r2, r2
 800025c:	4013      	ands	r3, r2
 800025e:	600b      	str	r3, [r1, #0]
			MGPIOC->CRL |= ( u8Copy_u8Mode ) << ( Copy_u8Pin * 4 )  ;
 8000260:	481a      	ldr	r0, [pc, #104]	; (80002cc <MGPIO_VidSetPinDirection+0x180>)
 8000262:	4b1a      	ldr	r3, [pc, #104]	; (80002cc <MGPIO_VidSetPinDirection+0x180>)
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	7979      	ldrb	r1, [r7, #5]
 8000268:	79ba      	ldrb	r2, [r7, #6]
 800026a:	0092      	lsls	r2, r2, #2
 800026c:	fa01 f202 	lsl.w	r2, r1, r2
 8000270:	4313      	orrs	r3, r2
 8000272:	6003      	str	r3, [r0, #0]
		break;
 8000274:	e01f      	b.n	80002b6 <MGPIO_VidSetPinDirection+0x16a>
		}else if(Copy_u8Pin <=15 ){//high
 8000276:	79bb      	ldrb	r3, [r7, #6]
 8000278:	2b0f      	cmp	r3, #15
 800027a:	d81c      	bhi.n	80002b6 <MGPIO_VidSetPinDirection+0x16a>
			Copy_u8Pin = Copy_u8Pin - 8;
 800027c:	79bb      	ldrb	r3, [r7, #6]
 800027e:	3b08      	subs	r3, #8
 8000280:	71bb      	strb	r3, [r7, #6]
			MGPIOC->CRH &= ~ ( ( 0b1111 )    << ( Copy_u8Pin * 4 ) );
 8000282:	4912      	ldr	r1, [pc, #72]	; (80002cc <MGPIO_VidSetPinDirection+0x180>)
 8000284:	4b11      	ldr	r3, [pc, #68]	; (80002cc <MGPIO_VidSetPinDirection+0x180>)
 8000286:	685b      	ldr	r3, [r3, #4]
 8000288:	79ba      	ldrb	r2, [r7, #6]
 800028a:	0092      	lsls	r2, r2, #2
 800028c:	200f      	movs	r0, #15
 800028e:	fa00 f202 	lsl.w	r2, r0, r2
 8000292:	43d2      	mvns	r2, r2
 8000294:	4013      	ands	r3, r2
 8000296:	604b      	str	r3, [r1, #4]
			MGPIOC->CRH |= ( u8Copy_u8Mode ) << ( Copy_u8Pin * 4 )  ;
 8000298:	480c      	ldr	r0, [pc, #48]	; (80002cc <MGPIO_VidSetPinDirection+0x180>)
 800029a:	4b0c      	ldr	r3, [pc, #48]	; (80002cc <MGPIO_VidSetPinDirection+0x180>)
 800029c:	685b      	ldr	r3, [r3, #4]
 800029e:	7979      	ldrb	r1, [r7, #5]
 80002a0:	79ba      	ldrb	r2, [r7, #6]
 80002a2:	0092      	lsls	r2, r2, #2
 80002a4:	fa01 f202 	lsl.w	r2, r1, r2
 80002a8:	4313      	orrs	r3, r2
 80002aa:	6043      	str	r3, [r0, #4]
		break;
 80002ac:	e003      	b.n	80002b6 <MGPIO_VidSetPinDirection+0x16a>
		break;
 80002ae:	bf00      	nop
 80002b0:	e002      	b.n	80002b8 <MGPIO_VidSetPinDirection+0x16c>
		break;
 80002b2:	bf00      	nop
 80002b4:	e000      	b.n	80002b8 <MGPIO_VidSetPinDirection+0x16c>
		break;
 80002b6:	bf00      	nop
	}

}
 80002b8:	bf00      	nop
 80002ba:	370c      	adds	r7, #12
 80002bc:	46bd      	mov	sp, r7
 80002be:	bc80      	pop	{r7}
 80002c0:	4770      	bx	lr
 80002c2:	bf00      	nop
 80002c4:	40010800 	.word	0x40010800
 80002c8:	40010c00 	.word	0x40010c00
 80002cc:	40011000 	.word	0x40011000

080002d0 <MGPIO_VidSetPinValue>:

void MGPIO_VidSetPinValue( u8 Copy_u8Port , u8 Copy_u8Pin , u8 u8Copy_u8Value ){
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	4603      	mov	r3, r0
 80002d8:	71fb      	strb	r3, [r7, #7]
 80002da:	460b      	mov	r3, r1
 80002dc:	71bb      	strb	r3, [r7, #6]
 80002de:	4613      	mov	r3, r2
 80002e0:	717b      	strb	r3, [r7, #5]

	switch(Copy_u8Port){
 80002e2:	79fb      	ldrb	r3, [r7, #7]
 80002e4:	2b01      	cmp	r3, #1
 80002e6:	d01f      	beq.n	8000328 <MGPIO_VidSetPinValue+0x58>
 80002e8:	2b02      	cmp	r3, #2
 80002ea:	d038      	beq.n	800035e <MGPIO_VidSetPinValue+0x8e>
 80002ec:	2b00      	cmp	r3, #0
 80002ee:	d000      	beq.n	80002f2 <MGPIO_VidSetPinValue+0x22>

		break;

	}

}
 80002f0:	e055      	b.n	800039e <MGPIO_VidSetPinValue+0xce>
		if( u8Copy_u8Value == HIGH ){
 80002f2:	797b      	ldrb	r3, [r7, #5]
 80002f4:	2b01      	cmp	r3, #1
 80002f6:	d109      	bne.n	800030c <MGPIO_VidSetPinValue+0x3c>
			SET_BIT( MGPIOA->ODR , Copy_u8Pin );
 80002f8:	492b      	ldr	r1, [pc, #172]	; (80003a8 <MGPIO_VidSetPinValue+0xd8>)
 80002fa:	4b2b      	ldr	r3, [pc, #172]	; (80003a8 <MGPIO_VidSetPinValue+0xd8>)
 80002fc:	68db      	ldr	r3, [r3, #12]
 80002fe:	79ba      	ldrb	r2, [r7, #6]
 8000300:	2001      	movs	r0, #1
 8000302:	fa00 f202 	lsl.w	r2, r0, r2
 8000306:	4313      	orrs	r3, r2
 8000308:	60cb      	str	r3, [r1, #12]
		break;
 800030a:	e043      	b.n	8000394 <MGPIO_VidSetPinValue+0xc4>
		}else if( u8Copy_u8Value == LOW ){
 800030c:	797b      	ldrb	r3, [r7, #5]
 800030e:	2b00      	cmp	r3, #0
 8000310:	d140      	bne.n	8000394 <MGPIO_VidSetPinValue+0xc4>
			CLR_BIT( MGPIOA->ODR , Copy_u8Pin );
 8000312:	4925      	ldr	r1, [pc, #148]	; (80003a8 <MGPIO_VidSetPinValue+0xd8>)
 8000314:	4b24      	ldr	r3, [pc, #144]	; (80003a8 <MGPIO_VidSetPinValue+0xd8>)
 8000316:	68db      	ldr	r3, [r3, #12]
 8000318:	79ba      	ldrb	r2, [r7, #6]
 800031a:	2001      	movs	r0, #1
 800031c:	fa00 f202 	lsl.w	r2, r0, r2
 8000320:	43d2      	mvns	r2, r2
 8000322:	4013      	ands	r3, r2
 8000324:	60cb      	str	r3, [r1, #12]
		break;
 8000326:	e035      	b.n	8000394 <MGPIO_VidSetPinValue+0xc4>
		if( u8Copy_u8Value == HIGH ){
 8000328:	797b      	ldrb	r3, [r7, #5]
 800032a:	2b01      	cmp	r3, #1
 800032c:	d109      	bne.n	8000342 <MGPIO_VidSetPinValue+0x72>
			SET_BIT( MGPIOB->ODR , Copy_u8Pin );
 800032e:	491f      	ldr	r1, [pc, #124]	; (80003ac <MGPIO_VidSetPinValue+0xdc>)
 8000330:	4b1e      	ldr	r3, [pc, #120]	; (80003ac <MGPIO_VidSetPinValue+0xdc>)
 8000332:	68db      	ldr	r3, [r3, #12]
 8000334:	79ba      	ldrb	r2, [r7, #6]
 8000336:	2001      	movs	r0, #1
 8000338:	fa00 f202 	lsl.w	r2, r0, r2
 800033c:	4313      	orrs	r3, r2
 800033e:	60cb      	str	r3, [r1, #12]
		break;
 8000340:	e02a      	b.n	8000398 <MGPIO_VidSetPinValue+0xc8>
		}else if( u8Copy_u8Value == LOW ){
 8000342:	797b      	ldrb	r3, [r7, #5]
 8000344:	2b00      	cmp	r3, #0
 8000346:	d127      	bne.n	8000398 <MGPIO_VidSetPinValue+0xc8>
			CLR_BIT( MGPIOB->ODR , Copy_u8Pin );
 8000348:	4918      	ldr	r1, [pc, #96]	; (80003ac <MGPIO_VidSetPinValue+0xdc>)
 800034a:	4b18      	ldr	r3, [pc, #96]	; (80003ac <MGPIO_VidSetPinValue+0xdc>)
 800034c:	68db      	ldr	r3, [r3, #12]
 800034e:	79ba      	ldrb	r2, [r7, #6]
 8000350:	2001      	movs	r0, #1
 8000352:	fa00 f202 	lsl.w	r2, r0, r2
 8000356:	43d2      	mvns	r2, r2
 8000358:	4013      	ands	r3, r2
 800035a:	60cb      	str	r3, [r1, #12]
		break;
 800035c:	e01c      	b.n	8000398 <MGPIO_VidSetPinValue+0xc8>
		if( u8Copy_u8Value == HIGH ){
 800035e:	797b      	ldrb	r3, [r7, #5]
 8000360:	2b01      	cmp	r3, #1
 8000362:	d109      	bne.n	8000378 <MGPIO_VidSetPinValue+0xa8>
			SET_BIT( MGPIOC->ODR , Copy_u8Pin );
 8000364:	4912      	ldr	r1, [pc, #72]	; (80003b0 <MGPIO_VidSetPinValue+0xe0>)
 8000366:	4b12      	ldr	r3, [pc, #72]	; (80003b0 <MGPIO_VidSetPinValue+0xe0>)
 8000368:	68db      	ldr	r3, [r3, #12]
 800036a:	79ba      	ldrb	r2, [r7, #6]
 800036c:	2001      	movs	r0, #1
 800036e:	fa00 f202 	lsl.w	r2, r0, r2
 8000372:	4313      	orrs	r3, r2
 8000374:	60cb      	str	r3, [r1, #12]
		break;
 8000376:	e011      	b.n	800039c <MGPIO_VidSetPinValue+0xcc>
		}else if( u8Copy_u8Value == LOW ){
 8000378:	797b      	ldrb	r3, [r7, #5]
 800037a:	2b00      	cmp	r3, #0
 800037c:	d10e      	bne.n	800039c <MGPIO_VidSetPinValue+0xcc>
			CLR_BIT( MGPIOC->ODR , Copy_u8Pin );
 800037e:	490c      	ldr	r1, [pc, #48]	; (80003b0 <MGPIO_VidSetPinValue+0xe0>)
 8000380:	4b0b      	ldr	r3, [pc, #44]	; (80003b0 <MGPIO_VidSetPinValue+0xe0>)
 8000382:	68db      	ldr	r3, [r3, #12]
 8000384:	79ba      	ldrb	r2, [r7, #6]
 8000386:	2001      	movs	r0, #1
 8000388:	fa00 f202 	lsl.w	r2, r0, r2
 800038c:	43d2      	mvns	r2, r2
 800038e:	4013      	ands	r3, r2
 8000390:	60cb      	str	r3, [r1, #12]
		break;
 8000392:	e003      	b.n	800039c <MGPIO_VidSetPinValue+0xcc>
		break;
 8000394:	bf00      	nop
 8000396:	e002      	b.n	800039e <MGPIO_VidSetPinValue+0xce>
		break;
 8000398:	bf00      	nop
 800039a:	e000      	b.n	800039e <MGPIO_VidSetPinValue+0xce>
		break;
 800039c:	bf00      	nop
}
 800039e:	bf00      	nop
 80003a0:	370c      	adds	r7, #12
 80003a2:	46bd      	mov	sp, r7
 80003a4:	bc80      	pop	{r7}
 80003a6:	4770      	bx	lr
 80003a8:	40010800 	.word	0x40010800
 80003ac:	40010c00 	.word	0x40010c00
 80003b0:	40011000 	.word	0x40011000

080003b4 <MGPIO_u8GetPinValue>:

u8   MGPIO_u8GetPinValue( u8 Copy_u8Port , u8 Copy_u8Pin ){
 80003b4:	b480      	push	{r7}
 80003b6:	b085      	sub	sp, #20
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	4603      	mov	r3, r0
 80003bc:	460a      	mov	r2, r1
 80003be:	71fb      	strb	r3, [r7, #7]
 80003c0:	4613      	mov	r3, r2
 80003c2:	71bb      	strb	r3, [r7, #6]

	u8 LOC_u8Result = 0 ;
 80003c4:	2300      	movs	r3, #0
 80003c6:	73fb      	strb	r3, [r7, #15]

	switch(Copy_u8Port){
 80003c8:	79fb      	ldrb	r3, [r7, #7]
 80003ca:	2b01      	cmp	r3, #1
 80003cc:	d00d      	beq.n	80003ea <MGPIO_u8GetPinValue+0x36>
 80003ce:	2b02      	cmp	r3, #2
 80003d0:	d015      	beq.n	80003fe <MGPIO_u8GetPinValue+0x4a>
 80003d2:	2b00      	cmp	r3, #0
 80003d4:	d11d      	bne.n	8000412 <MGPIO_u8GetPinValue+0x5e>
	case GPIOA:

		LOC_u8Result = GET_BIT( MGPIOA->IDR , Copy_u8Pin );
 80003d6:	4b12      	ldr	r3, [pc, #72]	; (8000420 <MGPIO_u8GetPinValue+0x6c>)
 80003d8:	689a      	ldr	r2, [r3, #8]
 80003da:	79bb      	ldrb	r3, [r7, #6]
 80003dc:	fa22 f303 	lsr.w	r3, r2, r3
 80003e0:	b2db      	uxtb	r3, r3
 80003e2:	f003 0301 	and.w	r3, r3, #1
 80003e6:	73fb      	strb	r3, [r7, #15]

		break;
 80003e8:	e013      	b.n	8000412 <MGPIO_u8GetPinValue+0x5e>
	case GPIOB:

		LOC_u8Result = GET_BIT( MGPIOB->IDR , Copy_u8Pin );
 80003ea:	4b0e      	ldr	r3, [pc, #56]	; (8000424 <MGPIO_u8GetPinValue+0x70>)
 80003ec:	689a      	ldr	r2, [r3, #8]
 80003ee:	79bb      	ldrb	r3, [r7, #6]
 80003f0:	fa22 f303 	lsr.w	r3, r2, r3
 80003f4:	b2db      	uxtb	r3, r3
 80003f6:	f003 0301 	and.w	r3, r3, #1
 80003fa:	73fb      	strb	r3, [r7, #15]

		break;
 80003fc:	e009      	b.n	8000412 <MGPIO_u8GetPinValue+0x5e>
	case GPIOC:

		LOC_u8Result = GET_BIT( MGPIOB->IDR , Copy_u8Pin );
 80003fe:	4b09      	ldr	r3, [pc, #36]	; (8000424 <MGPIO_u8GetPinValue+0x70>)
 8000400:	689a      	ldr	r2, [r3, #8]
 8000402:	79bb      	ldrb	r3, [r7, #6]
 8000404:	fa22 f303 	lsr.w	r3, r2, r3
 8000408:	b2db      	uxtb	r3, r3
 800040a:	f003 0301 	and.w	r3, r3, #1
 800040e:	73fb      	strb	r3, [r7, #15]

		break;
 8000410:	bf00      	nop

	}

	return LOC_u8Result;
 8000412:	7bfb      	ldrb	r3, [r7, #15]

}
 8000414:	4618      	mov	r0, r3
 8000416:	3714      	adds	r7, #20
 8000418:	46bd      	mov	sp, r7
 800041a:	bc80      	pop	{r7}
 800041c:	4770      	bx	lr
 800041e:	bf00      	nop
 8000420:	40010800 	.word	0x40010800
 8000424:	40010c00 	.word	0x40010c00

08000428 <MGPIO_VidSetPortValue>:

	}

}

void MGPIO_VidSetPortValue( u8 Copy_u8Port , u8 Copy_u8Position , u16 Copy_u8Value ){
 8000428:	b480      	push	{r7}
 800042a:	b083      	sub	sp, #12
 800042c:	af00      	add	r7, sp, #0
 800042e:	4603      	mov	r3, r0
 8000430:	71fb      	strb	r3, [r7, #7]
 8000432:	460b      	mov	r3, r1
 8000434:	71bb      	strb	r3, [r7, #6]
 8000436:	4613      	mov	r3, r2
 8000438:	80bb      	strh	r3, [r7, #4]

	switch( Copy_u8Port ){
 800043a:	79fb      	ldrb	r3, [r7, #7]
 800043c:	2b01      	cmp	r3, #1
 800043e:	d01c      	beq.n	800047a <MGPIO_VidSetPortValue+0x52>
 8000440:	2b02      	cmp	r3, #2
 8000442:	d032      	beq.n	80004aa <MGPIO_VidSetPortValue+0x82>
 8000444:	2b00      	cmp	r3, #0
 8000446:	d000      	beq.n	800044a <MGPIO_VidSetPortValue+0x22>

		break;

	}

}
 8000448:	e04c      	b.n	80004e4 <MGPIO_VidSetPortValue+0xbc>
		if      ( Copy_u8Position == LOW  ){ MGPIOA->ODR = (MGPIOA->ODR & 0xFF00 ) | ( (u8)Copy_u8Value ) ; }
 800044a:	79bb      	ldrb	r3, [r7, #6]
 800044c:	2b00      	cmp	r3, #0
 800044e:	d109      	bne.n	8000464 <MGPIO_VidSetPortValue+0x3c>
 8000450:	4a27      	ldr	r2, [pc, #156]	; (80004f0 <MGPIO_VidSetPortValue+0xc8>)
 8000452:	4b27      	ldr	r3, [pc, #156]	; (80004f0 <MGPIO_VidSetPortValue+0xc8>)
 8000454:	68db      	ldr	r3, [r3, #12]
 8000456:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 800045a:	88b9      	ldrh	r1, [r7, #4]
 800045c:	b2c9      	uxtb	r1, r1
 800045e:	430b      	orrs	r3, r1
 8000460:	60d3      	str	r3, [r2, #12]
		break;
 8000462:	e03a      	b.n	80004da <MGPIO_VidSetPortValue+0xb2>
		else if ( Copy_u8Position == HIGH ){ MGPIOA->ODR = (MGPIOA->ODR & 0x00FF ) | (     Copy_u8Value ) ; }
 8000464:	79bb      	ldrb	r3, [r7, #6]
 8000466:	2b01      	cmp	r3, #1
 8000468:	d137      	bne.n	80004da <MGPIO_VidSetPortValue+0xb2>
 800046a:	4921      	ldr	r1, [pc, #132]	; (80004f0 <MGPIO_VidSetPortValue+0xc8>)
 800046c:	4b20      	ldr	r3, [pc, #128]	; (80004f0 <MGPIO_VidSetPortValue+0xc8>)
 800046e:	68db      	ldr	r3, [r3, #12]
 8000470:	b2da      	uxtb	r2, r3
 8000472:	88bb      	ldrh	r3, [r7, #4]
 8000474:	4313      	orrs	r3, r2
 8000476:	60cb      	str	r3, [r1, #12]
		break;
 8000478:	e02f      	b.n	80004da <MGPIO_VidSetPortValue+0xb2>
		if      ( Copy_u8Position == LOW  ){ MGPIOB->ODR = (MGPIOB->ODR & 0xFF00 ) | ( (u8)Copy_u8Value ) ; }
 800047a:	79bb      	ldrb	r3, [r7, #6]
 800047c:	2b00      	cmp	r3, #0
 800047e:	d109      	bne.n	8000494 <MGPIO_VidSetPortValue+0x6c>
 8000480:	4a1c      	ldr	r2, [pc, #112]	; (80004f4 <MGPIO_VidSetPortValue+0xcc>)
 8000482:	4b1c      	ldr	r3, [pc, #112]	; (80004f4 <MGPIO_VidSetPortValue+0xcc>)
 8000484:	68db      	ldr	r3, [r3, #12]
 8000486:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 800048a:	88b9      	ldrh	r1, [r7, #4]
 800048c:	b2c9      	uxtb	r1, r1
 800048e:	430b      	orrs	r3, r1
 8000490:	60d3      	str	r3, [r2, #12]
		break;
 8000492:	e024      	b.n	80004de <MGPIO_VidSetPortValue+0xb6>
		else if ( Copy_u8Position == HIGH ){ MGPIOB->ODR = (MGPIOB->ODR & 0x00FF ) | (     Copy_u8Value ) ; }
 8000494:	79bb      	ldrb	r3, [r7, #6]
 8000496:	2b01      	cmp	r3, #1
 8000498:	d121      	bne.n	80004de <MGPIO_VidSetPortValue+0xb6>
 800049a:	4916      	ldr	r1, [pc, #88]	; (80004f4 <MGPIO_VidSetPortValue+0xcc>)
 800049c:	4b15      	ldr	r3, [pc, #84]	; (80004f4 <MGPIO_VidSetPortValue+0xcc>)
 800049e:	68db      	ldr	r3, [r3, #12]
 80004a0:	b2da      	uxtb	r2, r3
 80004a2:	88bb      	ldrh	r3, [r7, #4]
 80004a4:	4313      	orrs	r3, r2
 80004a6:	60cb      	str	r3, [r1, #12]
		break;
 80004a8:	e019      	b.n	80004de <MGPIO_VidSetPortValue+0xb6>
		if      ( Copy_u8Position == LOW  ){ MGPIOC->ODR = (MGPIOC->ODR & 0xFF00 ) | ( (u8)Copy_u8Value ) ; }
 80004aa:	79bb      	ldrb	r3, [r7, #6]
 80004ac:	2b00      	cmp	r3, #0
 80004ae:	d109      	bne.n	80004c4 <MGPIO_VidSetPortValue+0x9c>
 80004b0:	4a11      	ldr	r2, [pc, #68]	; (80004f8 <MGPIO_VidSetPortValue+0xd0>)
 80004b2:	4b11      	ldr	r3, [pc, #68]	; (80004f8 <MGPIO_VidSetPortValue+0xd0>)
 80004b4:	68db      	ldr	r3, [r3, #12]
 80004b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80004ba:	88b9      	ldrh	r1, [r7, #4]
 80004bc:	b2c9      	uxtb	r1, r1
 80004be:	430b      	orrs	r3, r1
 80004c0:	60d3      	str	r3, [r2, #12]
		break;
 80004c2:	e00e      	b.n	80004e2 <MGPIO_VidSetPortValue+0xba>
		else if ( Copy_u8Position == HIGH ){ MGPIOC->ODR = (MGPIOC->ODR & 0x00FF ) | (     Copy_u8Value ) ; }
 80004c4:	79bb      	ldrb	r3, [r7, #6]
 80004c6:	2b01      	cmp	r3, #1
 80004c8:	d10b      	bne.n	80004e2 <MGPIO_VidSetPortValue+0xba>
 80004ca:	490b      	ldr	r1, [pc, #44]	; (80004f8 <MGPIO_VidSetPortValue+0xd0>)
 80004cc:	4b0a      	ldr	r3, [pc, #40]	; (80004f8 <MGPIO_VidSetPortValue+0xd0>)
 80004ce:	68db      	ldr	r3, [r3, #12]
 80004d0:	b2da      	uxtb	r2, r3
 80004d2:	88bb      	ldrh	r3, [r7, #4]
 80004d4:	4313      	orrs	r3, r2
 80004d6:	60cb      	str	r3, [r1, #12]
		break;
 80004d8:	e003      	b.n	80004e2 <MGPIO_VidSetPortValue+0xba>
		break;
 80004da:	bf00      	nop
 80004dc:	e002      	b.n	80004e4 <MGPIO_VidSetPortValue+0xbc>
		break;
 80004de:	bf00      	nop
 80004e0:	e000      	b.n	80004e4 <MGPIO_VidSetPortValue+0xbc>
		break;
 80004e2:	bf00      	nop
}
 80004e4:	bf00      	nop
 80004e6:	370c      	adds	r7, #12
 80004e8:	46bd      	mov	sp, r7
 80004ea:	bc80      	pop	{r7}
 80004ec:	4770      	bx	lr
 80004ee:	bf00      	nop
 80004f0:	40010800 	.word	0x40010800
 80004f4:	40010c00 	.word	0x40010c00
 80004f8:	40011000 	.word	0x40011000

080004fc <HKEYPAD_VidDelay>:
#include"LCD_INTERFACE.h"

#define NOTPRESSED  0xff

void HKEYPAD_VidDelay (void)
{
 80004fc:	b480      	push	{r7}
 80004fe:	b083      	sub	sp, #12
 8000500:	af00      	add	r7, sp, #0
	for(u8 i = 0 ; i < 100; i++ )
 8000502:	2300      	movs	r3, #0
 8000504:	71fb      	strb	r3, [r7, #7]
 8000506:	e00c      	b.n	8000522 <HKEYPAD_VidDelay+0x26>
	{
		for(u8 j = 0 ; j < 100 ; j++ )
 8000508:	2300      	movs	r3, #0
 800050a:	71bb      	strb	r3, [r7, #6]
 800050c:	e003      	b.n	8000516 <HKEYPAD_VidDelay+0x1a>
		{
			asm("NOP");
 800050e:	bf00      	nop
		for(u8 j = 0 ; j < 100 ; j++ )
 8000510:	79bb      	ldrb	r3, [r7, #6]
 8000512:	3301      	adds	r3, #1
 8000514:	71bb      	strb	r3, [r7, #6]
 8000516:	79bb      	ldrb	r3, [r7, #6]
 8000518:	2b63      	cmp	r3, #99	; 0x63
 800051a:	d9f8      	bls.n	800050e <HKEYPAD_VidDelay+0x12>
	for(u8 i = 0 ; i < 100; i++ )
 800051c:	79fb      	ldrb	r3, [r7, #7]
 800051e:	3301      	adds	r3, #1
 8000520:	71fb      	strb	r3, [r7, #7]
 8000522:	79fb      	ldrb	r3, [r7, #7]
 8000524:	2b63      	cmp	r3, #99	; 0x63
 8000526:	d9ef      	bls.n	8000508 <HKEYPAD_VidDelay+0xc>
		}
	}
}
 8000528:	bf00      	nop
 800052a:	370c      	adds	r7, #12
 800052c:	46bd      	mov	sp, r7
 800052e:	bc80      	pop	{r7}
 8000530:	4770      	bx	lr

08000532 <HKEYPAD_VidInit>:

void HKEYPAD_VidInit(){
 8000532:	b580      	push	{r7, lr}
 8000534:	af00      	add	r7, sp, #0

//pins of colums will output 1
MGPIO_VidSetPinDirection(HKEYPAD_PORT,C0,INPUT_PULLUP_PULLDOWN);
 8000536:	2208      	movs	r2, #8
 8000538:	210c      	movs	r1, #12
 800053a:	2001      	movs	r0, #1
 800053c:	f7ff fe06 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(HKEYPAD_PORT,C1,INPUT_PULLUP_PULLDOWN);
 8000540:	2208      	movs	r2, #8
 8000542:	210d      	movs	r1, #13
 8000544:	2001      	movs	r0, #1
 8000546:	f7ff fe01 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(HKEYPAD_PORT,C2,INPUT_PULLUP_PULLDOWN);
 800054a:	2208      	movs	r2, #8
 800054c:	210e      	movs	r1, #14
 800054e:	2001      	movs	r0, #1
 8000550:	f7ff fdfc 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(HKEYPAD_PORT,C3,INPUT_PULLUP_PULLDOWN);
 8000554:	2208      	movs	r2, #8
 8000556:	210f      	movs	r1, #15
 8000558:	2001      	movs	r0, #1
 800055a:	f7ff fdf7 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinValue(HKEYPAD_PORT,C0,1);// DO IT PULL UP TO SENSITIVE TO LOW
 800055e:	2201      	movs	r2, #1
 8000560:	210c      	movs	r1, #12
 8000562:	2001      	movs	r0, #1
 8000564:	f7ff feb4 	bl	80002d0 <MGPIO_VidSetPinValue>
MGPIO_VidSetPinValue(HKEYPAD_PORT,C1,1);
 8000568:	2201      	movs	r2, #1
 800056a:	210d      	movs	r1, #13
 800056c:	2001      	movs	r0, #1
 800056e:	f7ff feaf 	bl	80002d0 <MGPIO_VidSetPinValue>
MGPIO_VidSetPinValue(HKEYPAD_PORT,C2,1);
 8000572:	2201      	movs	r2, #1
 8000574:	210e      	movs	r1, #14
 8000576:	2001      	movs	r0, #1
 8000578:	f7ff feaa 	bl	80002d0 <MGPIO_VidSetPinValue>
MGPIO_VidSetPinValue(HKEYPAD_PORT,C3,1);
 800057c:	2201      	movs	r2, #1
 800057e:	210f      	movs	r1, #15
 8000580:	2001      	movs	r0, #1
 8000582:	f7ff fea5 	bl	80002d0 <MGPIO_VidSetPinValue>
MGPIO_VidSetPinDirection(HKEYPAD_PORT,R0,OUTPUT_SPEED_2MHZ_PP);
 8000586:	2202      	movs	r2, #2
 8000588:	2108      	movs	r1, #8
 800058a:	2001      	movs	r0, #1
 800058c:	f7ff fdde 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(HKEYPAD_PORT,R1,OUTPUT_SPEED_2MHZ_PP);
 8000590:	2202      	movs	r2, #2
 8000592:	2109      	movs	r1, #9
 8000594:	2001      	movs	r0, #1
 8000596:	f7ff fdd9 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(HKEYPAD_PORT,R2,OUTPUT_SPEED_2MHZ_PP);
 800059a:	2202      	movs	r2, #2
 800059c:	210a      	movs	r1, #10
 800059e:	2001      	movs	r0, #1
 80005a0:	f7ff fdd4 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(HKEYPAD_PORT,R3,OUTPUT_SPEED_2MHZ_PP);
 80005a4:	2202      	movs	r2, #2
 80005a6:	210b      	movs	r1, #11
 80005a8:	2001      	movs	r0, #1
 80005aa:	f7ff fdcf 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinValue(HKEYPAD_PORT,R0,1);
 80005ae:	2201      	movs	r2, #1
 80005b0:	2108      	movs	r1, #8
 80005b2:	2001      	movs	r0, #1
 80005b4:	f7ff fe8c 	bl	80002d0 <MGPIO_VidSetPinValue>
		 MGPIO_VidSetPinValue(HKEYPAD_PORT,R1,1);
 80005b8:	2201      	movs	r2, #1
 80005ba:	2109      	movs	r1, #9
 80005bc:	2001      	movs	r0, #1
 80005be:	f7ff fe87 	bl	80002d0 <MGPIO_VidSetPinValue>
		 MGPIO_VidSetPinValue(HKEYPAD_PORT,R2,1);
 80005c2:	2201      	movs	r2, #1
 80005c4:	210a      	movs	r1, #10
 80005c6:	2001      	movs	r0, #1
 80005c8:	f7ff fe82 	bl	80002d0 <MGPIO_VidSetPinValue>
		 MGPIO_VidSetPinValue(HKEYPAD_PORT,R3,1);
 80005cc:	2201      	movs	r2, #1
 80005ce:	210b      	movs	r1, #11
 80005d0:	2001      	movs	r0, #1
 80005d2:	f7ff fe7d 	bl	80002d0 <MGPIO_VidSetPinValue>



	}
 80005d6:	bf00      	nop
 80005d8:	bd80      	pop	{r7, pc}
	...

080005dc <HkEYPAD_u8GetPress>:
char HkEYPAD_u8GetPress(){
 80005dc:	b590      	push	{r4, r7, lr}
 80005de:	b089      	sub	sp, #36	; 0x24
 80005e0:	af00      	add	r7, sp, #0
	char arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
 80005e2:	4b2e      	ldr	r3, [pc, #184]	; (800069c <HkEYPAD_u8GetPress+0xc0>)
 80005e4:	1d3c      	adds	r4, r7, #4
 80005e6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80005e8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	 int row,coloumn,x;
	 char returnval=NOTPRESSED;
 80005ec:	23ff      	movs	r3, #255	; 0xff
 80005ee:	77fb      	strb	r3, [r7, #31]
	 int i,j;
	 for(i=0;i<4;i++)
 80005f0:	2300      	movs	r3, #0
 80005f2:	61bb      	str	r3, [r7, #24]
 80005f4:	e049      	b.n	800068a <HkEYPAD_u8GetPress+0xae>
	 {
		 //HKEYPAD_VidDelay();
		MGPIO_VidSetPinValue(HKEYPAD_PORT,(i+8),0);
 80005f6:	69bb      	ldr	r3, [r7, #24]
 80005f8:	b2db      	uxtb	r3, r3
 80005fa:	3308      	adds	r3, #8
 80005fc:	b2db      	uxtb	r3, r3
 80005fe:	2200      	movs	r2, #0
 8000600:	4619      	mov	r1, r3
 8000602:	2001      	movs	r0, #1
 8000604:	f7ff fe64 	bl	80002d0 <MGPIO_VidSetPinValue>
		//HKEYPAD_VidDelay();
		// HKEYPAD_VidDelay();

	for(j=0;j<4;j++)
 8000608:	2300      	movs	r3, #0
 800060a:	617b      	str	r3, [r7, #20]
 800060c:	e02e      	b.n	800066c <HkEYPAD_u8GetPress+0x90>
	{
	 if(MGPIO_u8GetPinValue(HKEYPAD_PORT,(j+12))==0){
 800060e:	697b      	ldr	r3, [r7, #20]
 8000610:	b2db      	uxtb	r3, r3
 8000612:	330c      	adds	r3, #12
 8000614:	b2db      	uxtb	r3, r3
 8000616:	4619      	mov	r1, r3
 8000618:	2001      	movs	r0, #1
 800061a:	f7ff fecb 	bl	80003b4 <MGPIO_u8GetPinValue>
 800061e:	4603      	mov	r3, r0
 8000620:	2b00      	cmp	r3, #0
 8000622:	d120      	bne.n	8000666 <HkEYPAD_u8GetPress+0x8a>

		  returnval=arr[i][j];
 8000624:	69bb      	ldr	r3, [r7, #24]
 8000626:	009b      	lsls	r3, r3, #2
 8000628:	f107 0220 	add.w	r2, r7, #32
 800062c:	441a      	add	r2, r3
 800062e:	697b      	ldr	r3, [r7, #20]
 8000630:	4413      	add	r3, r2
 8000632:	3b1c      	subs	r3, #28
 8000634:	781b      	ldrb	r3, [r3, #0]
 8000636:	77fb      	strb	r3, [r7, #31]
			 while(MGPIO_u8GetPinValue(HKEYPAD_PORT,(j+12))==0);
 8000638:	bf00      	nop
 800063a:	697b      	ldr	r3, [r7, #20]
 800063c:	b2db      	uxtb	r3, r3
 800063e:	330c      	adds	r3, #12
 8000640:	b2db      	uxtb	r3, r3
 8000642:	4619      	mov	r1, r3
 8000644:	2001      	movs	r0, #1
 8000646:	f7ff feb5 	bl	80003b4 <MGPIO_u8GetPinValue>
 800064a:	4603      	mov	r3, r0
 800064c:	2b00      	cmp	r3, #0
 800064e:	d0f4      	beq.n	800063a <HkEYPAD_u8GetPress+0x5e>
			 HKEYPAD_VidDelay();
 8000650:	f7ff ff54 	bl	80004fc <HKEYPAD_VidDelay>
			// HKEYPAD_VidDelay();
				MGPIO_VidSetPinValue(HKEYPAD_PORT,(j+12),1);
 8000654:	697b      	ldr	r3, [r7, #20]
 8000656:	b2db      	uxtb	r3, r3
 8000658:	330c      	adds	r3, #12
 800065a:	b2db      	uxtb	r3, r3
 800065c:	2201      	movs	r2, #1
 800065e:	4619      	mov	r1, r3
 8000660:	2001      	movs	r0, #1
 8000662:	f7ff fe35 	bl	80002d0 <MGPIO_VidSetPinValue>
	for(j=0;j<4;j++)
 8000666:	697b      	ldr	r3, [r7, #20]
 8000668:	3301      	adds	r3, #1
 800066a:	617b      	str	r3, [r7, #20]
 800066c:	697b      	ldr	r3, [r7, #20]
 800066e:	2b03      	cmp	r3, #3
 8000670:	ddcd      	ble.n	800060e <HkEYPAD_u8GetPress+0x32>
	 }
	// HKEYPAD_VidDelay();
	}
		MGPIO_VidSetPinValue(HKEYPAD_PORT,(i+8),1);
 8000672:	69bb      	ldr	r3, [r7, #24]
 8000674:	b2db      	uxtb	r3, r3
 8000676:	3308      	adds	r3, #8
 8000678:	b2db      	uxtb	r3, r3
 800067a:	2201      	movs	r2, #1
 800067c:	4619      	mov	r1, r3
 800067e:	2001      	movs	r0, #1
 8000680:	f7ff fe26 	bl	80002d0 <MGPIO_VidSetPinValue>
	 for(i=0;i<4;i++)
 8000684:	69bb      	ldr	r3, [r7, #24]
 8000686:	3301      	adds	r3, #1
 8000688:	61bb      	str	r3, [r7, #24]
 800068a:	69bb      	ldr	r3, [r7, #24]
 800068c:	2b03      	cmp	r3, #3
 800068e:	ddb2      	ble.n	80005f6 <HkEYPAD_u8GetPress+0x1a>

	 }



	  return returnval ;
 8000690:	7ffb      	ldrb	r3, [r7, #31]
	  }
 8000692:	4618      	mov	r0, r3
 8000694:	3724      	adds	r7, #36	; 0x24
 8000696:	46bd      	mov	sp, r7
 8000698:	bd90      	pop	{r4, r7, pc}
 800069a:	bf00      	nop
 800069c:	08002198 	.word	0x08002198

080006a0 <HLCD_VidDelay>:
#include"GPIO_INTERFACE.h"
#include"LCD_INTERFACE.h"
#include"LCD_CONFIG.h"

void HLCD_VidDelay (void)
{
 80006a0:	b480      	push	{r7}
 80006a2:	b083      	sub	sp, #12
 80006a4:	af00      	add	r7, sp, #0
	for(u8 i = 0 ; i < 100 ; i++ )
 80006a6:	2300      	movs	r3, #0
 80006a8:	71fb      	strb	r3, [r7, #7]
 80006aa:	e00c      	b.n	80006c6 <HLCD_VidDelay+0x26>
	{
		for(u8 j = 0 ; j < 100 ; j++ )
 80006ac:	2300      	movs	r3, #0
 80006ae:	71bb      	strb	r3, [r7, #6]
 80006b0:	e003      	b.n	80006ba <HLCD_VidDelay+0x1a>
		{
			asm("NOP");
 80006b2:	bf00      	nop
		for(u8 j = 0 ; j < 100 ; j++ )
 80006b4:	79bb      	ldrb	r3, [r7, #6]
 80006b6:	3301      	adds	r3, #1
 80006b8:	71bb      	strb	r3, [r7, #6]
 80006ba:	79bb      	ldrb	r3, [r7, #6]
 80006bc:	2b63      	cmp	r3, #99	; 0x63
 80006be:	d9f8      	bls.n	80006b2 <HLCD_VidDelay+0x12>
	for(u8 i = 0 ; i < 100 ; i++ )
 80006c0:	79fb      	ldrb	r3, [r7, #7]
 80006c2:	3301      	adds	r3, #1
 80006c4:	71fb      	strb	r3, [r7, #7]
 80006c6:	79fb      	ldrb	r3, [r7, #7]
 80006c8:	2b63      	cmp	r3, #99	; 0x63
 80006ca:	d9ef      	bls.n	80006ac <HLCD_VidDelay+0xc>
		}
	}
}
 80006cc:	bf00      	nop
 80006ce:	370c      	adds	r7, #12
 80006d0:	46bd      	mov	sp, r7
 80006d2:	bc80      	pop	{r7}
 80006d4:	4770      	bx	lr

080006d6 <main_VidDelay>:
void main_VidDelay (void)
{
 80006d6:	b480      	push	{r7}
 80006d8:	b083      	sub	sp, #12
 80006da:	af00      	add	r7, sp, #0
	for(u8 i = 0 ; i < 250 ; i++ )
 80006dc:	2300      	movs	r3, #0
 80006de:	71fb      	strb	r3, [r7, #7]
 80006e0:	e00c      	b.n	80006fc <main_VidDelay+0x26>
	{
		for(u8 j = 0 ; j < 250 ; j++ )
 80006e2:	2300      	movs	r3, #0
 80006e4:	71bb      	strb	r3, [r7, #6]
 80006e6:	e003      	b.n	80006f0 <main_VidDelay+0x1a>
		{
			asm("NOP");
 80006e8:	bf00      	nop
		for(u8 j = 0 ; j < 250 ; j++ )
 80006ea:	79bb      	ldrb	r3, [r7, #6]
 80006ec:	3301      	adds	r3, #1
 80006ee:	71bb      	strb	r3, [r7, #6]
 80006f0:	79bb      	ldrb	r3, [r7, #6]
 80006f2:	2bf9      	cmp	r3, #249	; 0xf9
 80006f4:	d9f8      	bls.n	80006e8 <main_VidDelay+0x12>
	for(u8 i = 0 ; i < 250 ; i++ )
 80006f6:	79fb      	ldrb	r3, [r7, #7]
 80006f8:	3301      	adds	r3, #1
 80006fa:	71fb      	strb	r3, [r7, #7]
 80006fc:	79fb      	ldrb	r3, [r7, #7]
 80006fe:	2bf9      	cmp	r3, #249	; 0xf9
 8000700:	d9ef      	bls.n	80006e2 <main_VidDelay+0xc>
		}
	}
}
 8000702:	bf00      	nop
 8000704:	370c      	adds	r7, #12
 8000706:	46bd      	mov	sp, r7
 8000708:	bc80      	pop	{r7}
 800070a:	4770      	bx	lr

0800070c <HLCD_VidWriteCommond>:
MGPIO_VidSetPinValue(Control_Port,PIN_EN,1);//2--PIN EN

}*/
//###############################

void HLCD_VidWriteCommond(u8 Copy_u8Commond){
 800070c:	b580      	push	{r7, lr}
 800070e:	b082      	sub	sp, #8
 8000710:	af00      	add	r7, sp, #0
 8000712:	4603      	mov	r3, r0
 8000714:	71fb      	strb	r3, [r7, #7]

MGPIO_VidSetPinValue(Control_Port,PIN_RS,0); //RS 0 TO COMMOND
 8000716:	2200      	movs	r2, #0
 8000718:	210c      	movs	r1, #12
 800071a:	2000      	movs	r0, #0
 800071c:	f7ff fdd8 	bl	80002d0 <MGPIO_VidSetPinValue>
/*MGPIO_VidSetPinValue(Control_Port,PIN_EN,1);//2--PIN EN
HLCD_VidDelay();
MGPIO_VidSetPinValue(Control_Port,PIN_EN,0);//2--PIN EN
HLCD_VidDelay();*/
MGPIO_VidSetPortValue(Data_Port,LOW,Copy_u8Commond);
 8000720:	79fb      	ldrb	r3, [r7, #7]
 8000722:	b29b      	uxth	r3, r3
 8000724:	461a      	mov	r2, r3
 8000726:	2100      	movs	r1, #0
 8000728:	2000      	movs	r0, #0
 800072a:	f7ff fe7d 	bl	8000428 <MGPIO_VidSetPortValue>
MGPIO_VidSetPinValue(Control_Port,PIN_EN,1);//2--PIN EN
 800072e:	2201      	movs	r2, #1
 8000730:	210b      	movs	r1, #11
 8000732:	2000      	movs	r0, #0
 8000734:	f7ff fdcc 	bl	80002d0 <MGPIO_VidSetPinValue>
HLCD_VidDelay();
 8000738:	f7ff ffb2 	bl	80006a0 <HLCD_VidDelay>
MGPIO_VidSetPinValue(Control_Port,PIN_EN,0);//2--PIN EN
 800073c:	2200      	movs	r2, #0
 800073e:	210b      	movs	r1, #11
 8000740:	2000      	movs	r0, #0
 8000742:	f7ff fdc5 	bl	80002d0 <MGPIO_VidSetPinValue>
HLCD_VidDelay();
 8000746:	f7ff ffab 	bl	80006a0 <HLCD_VidDelay>
MGPIO_VidSetPinValue(Control_Port,PIN_EN,1);//2--PIN EN
 800074a:	2201      	movs	r2, #1
 800074c:	210b      	movs	r1, #11
 800074e:	2000      	movs	r0, #0
 8000750:	f7ff fdbe 	bl	80002d0 <MGPIO_VidSetPinValue>

//Vid HLCD_VidSetFallingEdge();

}
 8000754:	bf00      	nop
 8000756:	3708      	adds	r7, #8
 8000758:	46bd      	mov	sp, r7
 800075a:	bd80      	pop	{r7, pc}

0800075c <HLCD_VidInit>:

void HLCD_VidInit(void){
 800075c:	b580      	push	{r7, lr}
 800075e:	af00      	add	r7, sp, #0

// 8BITS OF DATA
MGPIO_VidSetPinDirection(Data_Port,0,OUTPUT_SPEED_2MHZ_PP);
 8000760:	2202      	movs	r2, #2
 8000762:	2100      	movs	r1, #0
 8000764:	2000      	movs	r0, #0
 8000766:	f7ff fcf1 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(Data_Port,1,OUTPUT_SPEED_2MHZ_PP);
 800076a:	2202      	movs	r2, #2
 800076c:	2101      	movs	r1, #1
 800076e:	2000      	movs	r0, #0
 8000770:	f7ff fcec 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(Data_Port,2,OUTPUT_SPEED_2MHZ_PP);
 8000774:	2202      	movs	r2, #2
 8000776:	2102      	movs	r1, #2
 8000778:	2000      	movs	r0, #0
 800077a:	f7ff fce7 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(Data_Port,3,OUTPUT_SPEED_2MHZ_PP);
 800077e:	2202      	movs	r2, #2
 8000780:	2103      	movs	r1, #3
 8000782:	2000      	movs	r0, #0
 8000784:	f7ff fce2 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(Data_Port,4,OUTPUT_SPEED_2MHZ_PP);
 8000788:	2202      	movs	r2, #2
 800078a:	2104      	movs	r1, #4
 800078c:	2000      	movs	r0, #0
 800078e:	f7ff fcdd 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(Data_Port,5,OUTPUT_SPEED_2MHZ_PP);
 8000792:	2202      	movs	r2, #2
 8000794:	2105      	movs	r1, #5
 8000796:	2000      	movs	r0, #0
 8000798:	f7ff fcd8 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(Data_Port,6,OUTPUT_SPEED_2MHZ_PP);
 800079c:	2202      	movs	r2, #2
 800079e:	2106      	movs	r1, #6
 80007a0:	2000      	movs	r0, #0
 80007a2:	f7ff fcd3 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(Data_Port,7,OUTPUT_SPEED_2MHZ_PP);
 80007a6:	2202      	movs	r2, #2
 80007a8:	2107      	movs	r1, #7
 80007aa:	2000      	movs	r0, #0
 80007ac:	f7ff fcce 	bl	800014c <MGPIO_VidSetPinDirection>

MGPIO_VidSetPinDirection(Control_Port,PIN_RW,OUTPUT_SPEED_2MHZ_PP);//RW
 80007b0:	2202      	movs	r2, #2
 80007b2:	210a      	movs	r1, #10
 80007b4:	2000      	movs	r0, #0
 80007b6:	f7ff fcc9 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(Control_Port,PIN_RS,OUTPUT_SPEED_2MHZ_PP);//RS
 80007ba:	2202      	movs	r2, #2
 80007bc:	210c      	movs	r1, #12
 80007be:	2000      	movs	r0, #0
 80007c0:	f7ff fcc4 	bl	800014c <MGPIO_VidSetPinDirection>
MGPIO_VidSetPinDirection(Control_Port,PIN_EN,OUTPUT_SPEED_2MHZ_PP);//EN
 80007c4:	2202      	movs	r2, #2
 80007c6:	210b      	movs	r1, #11
 80007c8:	2000      	movs	r0, #0
 80007ca:	f7ff fcbf 	bl	800014c <MGPIO_VidSetPinDirection>

MGPIO_VidSetPinValue(Control_Port,PIN_RW,0);
 80007ce:	2200      	movs	r2, #0
 80007d0:	210a      	movs	r1, #10
 80007d2:	2000      	movs	r0, #0
 80007d4:	f7ff fd7c 	bl	80002d0 <MGPIO_VidSetPinValue>
HLCD_VidDelay();
 80007d8:	f7ff ff62 	bl	80006a0 <HLCD_VidDelay>
HLCD_VidWriteCommond(0b00111000); //FUNCTION SET 0X38
 80007dc:	2038      	movs	r0, #56	; 0x38
 80007de:	f7ff ff95 	bl	800070c <HLCD_VidWriteCommond>
HLCD_VidDelay();
 80007e2:	f7ff ff5d 	bl	80006a0 <HLCD_VidDelay>

HLCD_VidWriteCommond(0b00001111);//DISPLAY ON/OFF
 80007e6:	200f      	movs	r0, #15
 80007e8:	f7ff ff90 	bl	800070c <HLCD_VidWriteCommond>
HLCD_VidDelay();
 80007ec:	f7ff ff58 	bl	80006a0 <HLCD_VidDelay>

HLCD_VidWriteCommond(0b00000001);//DISPLAY CLEAR 0X01
 80007f0:	2001      	movs	r0, #1
 80007f2:	f7ff ff8b 	bl	800070c <HLCD_VidWriteCommond>
HLCD_VidDelay();
 80007f6:	f7ff ff53 	bl	80006a0 <HLCD_VidDelay>

HLCD_VidWriteCommond(0b00000110);//ENTRYMODE 0X06
 80007fa:	2006      	movs	r0, #6
 80007fc:	f7ff ff86 	bl	800070c <HLCD_VidWriteCommond>
HLCD_VidDelay();
 8000800:	f7ff ff4e 	bl	80006a0 <HLCD_VidDelay>

}
 8000804:	bf00      	nop
 8000806:	bd80      	pop	{r7, pc}

08000808 <HLCD_VidWriteChar>:


//########################################
void HLCD_VidWriteChar(u8 Copy_u8Char){
 8000808:	b580      	push	{r7, lr}
 800080a:	b082      	sub	sp, #8
 800080c:	af00      	add	r7, sp, #0
 800080e:	4603      	mov	r3, r0
 8000810:	71fb      	strb	r3, [r7, #7]

MGPIO_VidSetPinValue(Control_Port,PIN_RS,1); //RS 1 to data
 8000812:	2201      	movs	r2, #1
 8000814:	210c      	movs	r1, #12
 8000816:	2000      	movs	r0, #0
 8000818:	f7ff fd5a 	bl	80002d0 <MGPIO_VidSetPinValue>
/*MGPIO_VidSetPinValue(Control_Port,PIN_EN,1);//2--PIN EN
HLCD_VidDelay();
MGPIO_VidSetPinValue(Control_Port,PIN_EN,0);//2--PIN EN
HLCD_VidDelay();*/
MGPIO_VidSetPortValue(Data_Port,LOW,Copy_u8Char);
 800081c:	79fb      	ldrb	r3, [r7, #7]
 800081e:	b29b      	uxth	r3, r3
 8000820:	461a      	mov	r2, r3
 8000822:	2100      	movs	r1, #0
 8000824:	2000      	movs	r0, #0
 8000826:	f7ff fdff 	bl	8000428 <MGPIO_VidSetPortValue>
MGPIO_VidSetPinValue(Control_Port,PIN_EN,1);//2--PIN EN
 800082a:	2201      	movs	r2, #1
 800082c:	210b      	movs	r1, #11
 800082e:	2000      	movs	r0, #0
 8000830:	f7ff fd4e 	bl	80002d0 <MGPIO_VidSetPinValue>
HLCD_VidDelay();
 8000834:	f7ff ff34 	bl	80006a0 <HLCD_VidDelay>
MGPIO_VidSetPinValue(Control_Port,PIN_EN,0);//2--PIN EN
 8000838:	2200      	movs	r2, #0
 800083a:	210b      	movs	r1, #11
 800083c:	2000      	movs	r0, #0
 800083e:	f7ff fd47 	bl	80002d0 <MGPIO_VidSetPinValue>
HLCD_VidDelay();
 8000842:	f7ff ff2d 	bl	80006a0 <HLCD_VidDelay>
MGPIO_VidSetPinValue(Control_Port,PIN_EN,1);//2--PIN EN
 8000846:	2201      	movs	r2, #1
 8000848:	210b      	movs	r1, #11
 800084a:	2000      	movs	r0, #0
 800084c:	f7ff fd40 	bl	80002d0 <MGPIO_VidSetPinValue>
/*Vid HLCD_VidSetFallingEdge();
HLCD_VidDelay();*/

}
 8000850:	bf00      	nop
 8000852:	3708      	adds	r7, #8
 8000854:	46bd      	mov	sp, r7
 8000856:	bd80      	pop	{r7, pc}

08000858 <HLCD_VidWriteString>:


void HLCD_VidWriteString(u8 *Copy_u8String){
 8000858:	b580      	push	{r7, lr}
 800085a:	b082      	sub	sp, #8
 800085c:	af00      	add	r7, sp, #0
 800085e:	6078      	str	r0, [r7, #4]

    while(((*Copy_u8String)!=0)){
 8000860:	e007      	b.n	8000872 <HLCD_VidWriteString+0x1a>
        HLCD_VidWriteChar(*Copy_u8String);
 8000862:	687b      	ldr	r3, [r7, #4]
 8000864:	781b      	ldrb	r3, [r3, #0]
 8000866:	4618      	mov	r0, r3
 8000868:	f7ff ffce 	bl	8000808 <HLCD_VidWriteChar>
        Copy_u8String++;
 800086c:	687b      	ldr	r3, [r7, #4]
 800086e:	3301      	adds	r3, #1
 8000870:	607b      	str	r3, [r7, #4]
    while(((*Copy_u8String)!=0)){
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	781b      	ldrb	r3, [r3, #0]
 8000876:	2b00      	cmp	r3, #0
 8000878:	d1f3      	bne.n	8000862 <HLCD_VidWriteString+0xa>
    }
}
 800087a:	bf00      	nop
 800087c:	3708      	adds	r7, #8
 800087e:	46bd      	mov	sp, r7
 8000880:	bd80      	pop	{r7, pc}

08000882 <HLCD_VidClearScreen>:

void HLCD_VidClearScreen(){
 8000882:	b580      	push	{r7, lr}
 8000884:	af00      	add	r7, sp, #0
    HLCD_VidWriteCommond (0x01);		/* clear display */
 8000886:	2001      	movs	r0, #1
 8000888:	f7ff ff40 	bl	800070c <HLCD_VidWriteCommond>
	HLCD_VidWriteCommond (0x02);		/* cursor at home position */
 800088c:	2002      	movs	r0, #2
 800088e:	f7ff ff3d 	bl	800070c <HLCD_VidWriteCommond>
}
 8000892:	bf00      	nop
 8000894:	bd80      	pop	{r7, pc}

08000896 <HLCD_VidShift>:

void HLCD_VidShift (u8 X,u8 Y)
{
 8000896:	b580      	push	{r7, lr}
 8000898:	b082      	sub	sp, #8
 800089a:	af00      	add	r7, sp, #0
 800089c:	4603      	mov	r3, r0
 800089e:	460a      	mov	r2, r1
 80008a0:	71fb      	strb	r3, [r7, #7]
 80008a2:	4613      	mov	r3, r2
 80008a4:	71bb      	strb	r3, [r7, #6]
	  2*16 LCD
			    {80 81 ... 8F}   0X80 = 128  :Force cursor to beginning of the first line
			    {C0 C1 ... CF}   0XC0 = 192  :Force cursor to beginning of the SECOND line

	*/
	if (((X>0) && (X<=16)))           // x from 1 to 16 , y : 1 or 2
 80008a6:	79fb      	ldrb	r3, [r7, #7]
 80008a8:	2b00      	cmp	r3, #0
 80008aa:	d016      	beq.n	80008da <HLCD_VidShift+0x44>
 80008ac:	79fb      	ldrb	r3, [r7, #7]
 80008ae:	2b10      	cmp	r3, #16
 80008b0:	d813      	bhi.n	80008da <HLCD_VidShift+0x44>

			switch(Y)
 80008b2:	79bb      	ldrb	r3, [r7, #6]
 80008b4:	2b01      	cmp	r3, #1
 80008b6:	d002      	beq.n	80008be <HLCD_VidShift+0x28>
 80008b8:	2b02      	cmp	r3, #2
 80008ba:	d007      	beq.n	80008cc <HLCD_VidShift+0x36>
					HLCD_VidWriteCommond(X+127);
				break;
				case 2:
					HLCD_VidWriteCommond(X+191);
				break;
				default:    break;
 80008bc:	e00d      	b.n	80008da <HLCD_VidShift+0x44>
					HLCD_VidWriteCommond(X+127);
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	337f      	adds	r3, #127	; 0x7f
 80008c2:	b2db      	uxtb	r3, r3
 80008c4:	4618      	mov	r0, r3
 80008c6:	f7ff ff21 	bl	800070c <HLCD_VidWriteCommond>
				break;
 80008ca:	e006      	b.n	80008da <HLCD_VidShift+0x44>
					HLCD_VidWriteCommond(X+191);
 80008cc:	79fb      	ldrb	r3, [r7, #7]
 80008ce:	3b41      	subs	r3, #65	; 0x41
 80008d0:	b2db      	uxtb	r3, r3
 80008d2:	4618      	mov	r0, r3
 80008d4:	f7ff ff1a 	bl	800070c <HLCD_VidWriteCommond>
				break;
 80008d8:	bf00      	nop
			}

}
 80008da:	bf00      	nop
 80008dc:	3708      	adds	r7, #8
 80008de:	46bd      	mov	sp, r7
 80008e0:	bd80      	pop	{r7, pc}
	...

080008e4 <MRCC_VidInit>:
#include"RCC_CONFG.h"
#include"ERROR_STATUS.h"
#include"RCC_PRIVATE.h"
#include"RCC_REG.h"

void MRCC_VidInit( void ){
 80008e4:	b480      	push	{r7}
 80008e6:	b083      	sub	sp, #12
 80008e8:	af00      	add	r7, sp, #0

	u32 LOC_u32TimeOut = 0;
 80008ea:	2300      	movs	r3, #0
 80008ec:	607b      	str	r3, [r7, #4]

	#elif CLOCK_TYPE == HSE

		/* BIT 1:0 -> Choose Between HSI OR HSE OR PLL */
		/* HSE Selected As A System Clock */
		SET_BIT( MRCC->CFGR , 0  );
 80008ee:	4a16      	ldr	r2, [pc, #88]	; (8000948 <MRCC_VidInit+0x64>)
 80008f0:	4b15      	ldr	r3, [pc, #84]	; (8000948 <MRCC_VidInit+0x64>)
 80008f2:	685b      	ldr	r3, [r3, #4]
 80008f4:	f043 0301 	orr.w	r3, r3, #1
 80008f8:	6053      	str	r3, [r2, #4]
		CLR_BIT( MRCC->CFGR , 1  );
 80008fa:	4a13      	ldr	r2, [pc, #76]	; (8000948 <MRCC_VidInit+0x64>)
 80008fc:	4b12      	ldr	r3, [pc, #72]	; (8000948 <MRCC_VidInit+0x64>)
 80008fe:	685b      	ldr	r3, [r3, #4]
 8000900:	f023 0302 	bic.w	r3, r3, #2
 8000904:	6053      	str	r3, [r2, #4]
		/* Bit 16 -> Enable The HSE Clock */
		SET_BIT( MRCC->CR   , 16 );
 8000906:	4a10      	ldr	r2, [pc, #64]	; (8000948 <MRCC_VidInit+0x64>)
 8000908:	4b0f      	ldr	r3, [pc, #60]	; (8000948 <MRCC_VidInit+0x64>)
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000910:	6013      	str	r3, [r2, #0]
		/* Bit 17 -> Checking While The HSE Clock Is Stable */
		while( ( ( GET_BIT( MRCC->CR , 17 ) ) == 0 ) && ( LOC_u32TimeOut < 100000 ) ){ LOC_u32TimeOut++; }
 8000912:	e002      	b.n	800091a <MRCC_VidInit+0x36>
 8000914:	687b      	ldr	r3, [r7, #4]
 8000916:	3301      	adds	r3, #1
 8000918:	607b      	str	r3, [r7, #4]
 800091a:	4b0b      	ldr	r3, [pc, #44]	; (8000948 <MRCC_VidInit+0x64>)
 800091c:	681b      	ldr	r3, [r3, #0]
 800091e:	0c5b      	lsrs	r3, r3, #17
 8000920:	f003 0301 	and.w	r3, r3, #1
 8000924:	2b00      	cmp	r3, #0
 8000926:	d103      	bne.n	8000930 <MRCC_VidInit+0x4c>
 8000928:	687b      	ldr	r3, [r7, #4]
 800092a:	4a08      	ldr	r2, [pc, #32]	; (800094c <MRCC_VidInit+0x68>)
 800092c:	4293      	cmp	r3, r2
 800092e:	d9f1      	bls.n	8000914 <MRCC_VidInit+0x30>

		SET_BIT( MRCC->CR , 19 );

	#elif CLOCK_SECURITY_SYSTEM == DISABLE_CLOCK_SECURITY_SYSTEM

		CLR_BIT( MRCC->CR , 19 );
 8000930:	4a05      	ldr	r2, [pc, #20]	; (8000948 <MRCC_VidInit+0x64>)
 8000932:	4b05      	ldr	r3, [pc, #20]	; (8000948 <MRCC_VidInit+0x64>)
 8000934:	681b      	ldr	r3, [r3, #0]
 8000936:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 800093a:	6013      	str	r3, [r2, #0]

		#warning " Wrong Clock Security System Configuration Choice "

	#endif

}
 800093c:	bf00      	nop
 800093e:	370c      	adds	r7, #12
 8000940:	46bd      	mov	sp, r7
 8000942:	bc80      	pop	{r7}
 8000944:	4770      	bx	lr
 8000946:	bf00      	nop
 8000948:	40021000 	.word	0x40021000
 800094c:	0001869f 	.word	0x0001869f

08000950 <MRCC_VidEnablePeripheralClock>:

void MRCC_VidEnablePeripheralClock( u8 Copy_u8PeripheralBus , u8 Copy_u8Peripheral ){
 8000950:	b480      	push	{r7}
 8000952:	b083      	sub	sp, #12
 8000954:	af00      	add	r7, sp, #0
 8000956:	4603      	mov	r3, r0
 8000958:	460a      	mov	r2, r1
 800095a:	71fb      	strb	r3, [r7, #7]
 800095c:	4613      	mov	r3, r2
 800095e:	71bb      	strb	r3, [r7, #6]


		switch( Copy_u8PeripheralBus ){
 8000960:	79fb      	ldrb	r3, [r7, #7]
 8000962:	2b01      	cmp	r3, #1
 8000964:	d00e      	beq.n	8000984 <MRCC_VidEnablePeripheralClock+0x34>
 8000966:	2b02      	cmp	r3, #2
 8000968:	d016      	beq.n	8000998 <MRCC_VidEnablePeripheralClock+0x48>
 800096a:	2b00      	cmp	r3, #0
 800096c:	d000      	beq.n	8000970 <MRCC_VidEnablePeripheralClock+0x20>
			case APB2_BUS : SET_BIT( MRCC->APB2ENR , Copy_u8Peripheral ); break;

		}


}
 800096e:	e01d      	b.n	80009ac <MRCC_VidEnablePeripheralClock+0x5c>
			case AHB_BUS  : SET_BIT( MRCC->AHBENR  , Copy_u8Peripheral ); break;
 8000970:	4911      	ldr	r1, [pc, #68]	; (80009b8 <MRCC_VidEnablePeripheralClock+0x68>)
 8000972:	4b11      	ldr	r3, [pc, #68]	; (80009b8 <MRCC_VidEnablePeripheralClock+0x68>)
 8000974:	695b      	ldr	r3, [r3, #20]
 8000976:	79ba      	ldrb	r2, [r7, #6]
 8000978:	2001      	movs	r0, #1
 800097a:	fa00 f202 	lsl.w	r2, r0, r2
 800097e:	4313      	orrs	r3, r2
 8000980:	614b      	str	r3, [r1, #20]
 8000982:	e013      	b.n	80009ac <MRCC_VidEnablePeripheralClock+0x5c>
			case APB1_BUS :	SET_BIT( MRCC->APB1ENR , Copy_u8Peripheral ); break;
 8000984:	490c      	ldr	r1, [pc, #48]	; (80009b8 <MRCC_VidEnablePeripheralClock+0x68>)
 8000986:	4b0c      	ldr	r3, [pc, #48]	; (80009b8 <MRCC_VidEnablePeripheralClock+0x68>)
 8000988:	69db      	ldr	r3, [r3, #28]
 800098a:	79ba      	ldrb	r2, [r7, #6]
 800098c:	2001      	movs	r0, #1
 800098e:	fa00 f202 	lsl.w	r2, r0, r2
 8000992:	4313      	orrs	r3, r2
 8000994:	61cb      	str	r3, [r1, #28]
 8000996:	e009      	b.n	80009ac <MRCC_VidEnablePeripheralClock+0x5c>
			case APB2_BUS : SET_BIT( MRCC->APB2ENR , Copy_u8Peripheral ); break;
 8000998:	4907      	ldr	r1, [pc, #28]	; (80009b8 <MRCC_VidEnablePeripheralClock+0x68>)
 800099a:	4b07      	ldr	r3, [pc, #28]	; (80009b8 <MRCC_VidEnablePeripheralClock+0x68>)
 800099c:	699b      	ldr	r3, [r3, #24]
 800099e:	79ba      	ldrb	r2, [r7, #6]
 80009a0:	2001      	movs	r0, #1
 80009a2:	fa00 f202 	lsl.w	r2, r0, r2
 80009a6:	4313      	orrs	r3, r2
 80009a8:	618b      	str	r3, [r1, #24]
 80009aa:	bf00      	nop
}
 80009ac:	bf00      	nop
 80009ae:	370c      	adds	r7, #12
 80009b0:	46bd      	mov	sp, r7
 80009b2:	bc80      	pop	{r7}
 80009b4:	4770      	bx	lr
 80009b6:	bf00      	nop
 80009b8:	40021000 	.word	0x40021000

080009bc <SPI1_IRQHandler>:

	MSPI1_CallBack = ptr;

}

void SPI1_IRQHandler(void){
 80009bc:	b580      	push	{r7, lr}
 80009be:	af00      	add	r7, sp, #0

	MSPI1_CallBack();
 80009c0:	4b02      	ldr	r3, [pc, #8]	; (80009cc <SPI1_IRQHandler+0x10>)
 80009c2:	681b      	ldr	r3, [r3, #0]
 80009c4:	4798      	blx	r3

}
 80009c6:	bf00      	nop
 80009c8:	bd80      	pop	{r7, pc}
 80009ca:	bf00      	nop
 80009cc:	2000001c 	.word	0x2000001c

080009d0 <SysTick_Handler>:
#include"SYSTICK_INTERFACE.h"
#include"SYSTICK_REG.h"

void ( * MSTK_CallBack ) ( void );

void SysTick_Handler(void){
 80009d0:	b580      	push	{r7, lr}
 80009d2:	af00      	add	r7, sp, #0

	MSTK_CallBack();
 80009d4:	4b02      	ldr	r3, [pc, #8]	; (80009e0 <SysTick_Handler+0x10>)
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4798      	blx	r3

}
 80009da:	bf00      	nop
 80009dc:	bd80      	pop	{r7, pc}
 80009de:	bf00      	nop
 80009e0:	20000020 	.word	0x20000020

080009e4 <MUSART_VidInit>:

//#define THRESHOLD_VALUE  9000000UL

void (*MUSART1_CallBack)(void);

void MUSART_VidInit ( void ){
 80009e4:	b480      	push	{r7}
 80009e6:	b083      	sub	sp, #12
 80009e8:	af00      	add	r7, sp, #0

	u32 LOC_u64Mantissa = ( F_CPU ) / ( 16 * USART1_BAUD_RATE ) ;
 80009ea:	2334      	movs	r3, #52	; 0x34
 80009ec:	607b      	str	r3, [r7, #4]

	u32 LOC_u64Fraction = ( ( ( F_CPU * 100 ) / ( 16 * USART1_BAUD_RATE )  ) % 100 ) * 16 ;
 80009ee:	2380      	movs	r3, #128	; 0x80
 80009f0:	603b      	str	r3, [r7, #0]

	if( LOC_u64Fraction > 1500 ){ LOC_u64Mantissa += 1 ; LOC_u64Fraction  = 0 ; }
 80009f2:	683b      	ldr	r3, [r7, #0]
 80009f4:	f240 52dc 	movw	r2, #1500	; 0x5dc
 80009f8:	4293      	cmp	r3, r2
 80009fa:	d904      	bls.n	8000a06 <MUSART_VidInit+0x22>
 80009fc:	687b      	ldr	r3, [r7, #4]
 80009fe:	3301      	adds	r3, #1
 8000a00:	607b      	str	r3, [r7, #4]
 8000a02:	2300      	movs	r3, #0
 8000a04:	603b      	str	r3, [r7, #0]

	#if USART1_STATUS == USART1_ENABLE

		MUSART1 -> SR = 0 ;
 8000a06:	4b27      	ldr	r3, [pc, #156]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a08:	2200      	movs	r2, #0
 8000a0a:	601a      	str	r2, [r3, #0]

		#if   USART1_WORD_LENGTH == _8BIT_WORD_LENGTH

					CLR_BIT( MUSART1 -> CR1 , 12 );
 8000a0c:	4a25      	ldr	r2, [pc, #148]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a0e:	4b25      	ldr	r3, [pc, #148]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a10:	68db      	ldr	r3, [r3, #12]
 8000a12:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000a16:	60d3      	str	r3, [r2, #12]

		#endif

		#if   USART1_PARITY == PARITY_DISABLE

					CLR_BIT( MUSART1 -> CR1 , 10 );
 8000a18:	4a22      	ldr	r2, [pc, #136]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a1a:	4b22      	ldr	r3, [pc, #136]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a1c:	68db      	ldr	r3, [r3, #12]
 8000a1e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000a22:	60d3      	str	r3, [r2, #12]

		#endif

		#if  USART1_INTERRUPT == INT_DISABLE

					CLR_BIT( MUSART1 -> CR1 , 5 );
 8000a24:	4a1f      	ldr	r2, [pc, #124]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a26:	4b1f      	ldr	r3, [pc, #124]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a28:	68db      	ldr	r3, [r3, #12]
 8000a2a:	f023 0320 	bic.w	r3, r3, #32
 8000a2e:	60d3      	str	r3, [r2, #12]
					CLR_BIT( MUSART1 -> CR1 , 6 );
 8000a30:	4a1c      	ldr	r2, [pc, #112]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a32:	4b1c      	ldr	r3, [pc, #112]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a34:	68db      	ldr	r3, [r3, #12]
 8000a36:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000a3a:	60d3      	str	r3, [r2, #12]
					CLR_BIT( MUSART1 -> CR1 , 7 );
 8000a3c:	4a19      	ldr	r2, [pc, #100]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a3e:	4b19      	ldr	r3, [pc, #100]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a40:	68db      	ldr	r3, [r3, #12]
 8000a42:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000a46:	60d3      	str	r3, [r2, #12]

		#endif

		#if   USART1_TRANSMITTER == TRANSMITTER_ENABLE

					SET_BIT( MUSART1 -> CR1 , 3 );
 8000a48:	4a16      	ldr	r2, [pc, #88]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a4a:	4b16      	ldr	r3, [pc, #88]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a4c:	68db      	ldr	r3, [r3, #12]
 8000a4e:	f043 0308 	orr.w	r3, r3, #8
 8000a52:	60d3      	str	r3, [r2, #12]

		#endif

		#if   USART1_RECEIVER == RECEIVER_ENABLE

					SET_BIT( MUSART1 -> CR1 , 2 );
 8000a54:	4a13      	ldr	r2, [pc, #76]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a56:	4b13      	ldr	r3, [pc, #76]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a58:	68db      	ldr	r3, [r3, #12]
 8000a5a:	f043 0304 	orr.w	r3, r3, #4
 8000a5e:	60d3      	str	r3, [r2, #12]

		#endif

		#if   USART1_STOP_BITS == ONE_STOP_BIT

					CLR_BIT( MUSART1 -> CR2 , 12 ); CLR_BIT( MUSART1 -> CR2 , 13 );
 8000a60:	4a10      	ldr	r2, [pc, #64]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a62:	4b10      	ldr	r3, [pc, #64]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a64:	691b      	ldr	r3, [r3, #16]
 8000a66:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000a6a:	6113      	str	r3, [r2, #16]
 8000a6c:	4a0d      	ldr	r2, [pc, #52]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a6e:	4b0d      	ldr	r3, [pc, #52]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a70:	691b      	ldr	r3, [r3, #16]
 8000a72:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000a76:	6113      	str	r3, [r2, #16]
					SET_BIT( MUSART1 -> CR2 , 12 ); SET_BIT( MUSART1 -> CR2 , 13 );


		#endif

		MUSART1 -> BRR = ( LOC_u64Mantissa << 4  ) | ( LOC_u64Fraction / 100 ) ;
 8000a78:	490a      	ldr	r1, [pc, #40]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a7a:	687b      	ldr	r3, [r7, #4]
 8000a7c:	011a      	lsls	r2, r3, #4
 8000a7e:	683b      	ldr	r3, [r7, #0]
 8000a80:	4809      	ldr	r0, [pc, #36]	; (8000aa8 <MUSART_VidInit+0xc4>)
 8000a82:	fba0 0303 	umull	r0, r3, r0, r3
 8000a86:	095b      	lsrs	r3, r3, #5
 8000a88:	4313      	orrs	r3, r2
 8000a8a:	608b      	str	r3, [r1, #8]
		SET_BIT( MUSART1 -> CR1 , 13 );
 8000a8c:	4a05      	ldr	r2, [pc, #20]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a8e:	4b05      	ldr	r3, [pc, #20]	; (8000aa4 <MUSART_VidInit+0xc0>)
 8000a90:	68db      	ldr	r3, [r3, #12]
 8000a92:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000a96:	60d3      	str	r3, [r2, #12]
	#elif USART1_STATUS == USART1_DISABLE
		CLR_BIT( MUSART1 -> CR1 , 0 );

	#endif

}
 8000a98:	bf00      	nop
 8000a9a:	370c      	adds	r7, #12
 8000a9c:	46bd      	mov	sp, r7
 8000a9e:	bc80      	pop	{r7}
 8000aa0:	4770      	bx	lr
 8000aa2:	bf00      	nop
 8000aa4:	40013800 	.word	0x40013800
 8000aa8:	51eb851f 	.word	0x51eb851f

08000aac <MUSART1_VidSendCharSync>:


void MUSART1_VidSendCharSync ( u8 Copy_u8Char ){
 8000aac:	b480      	push	{r7}
 8000aae:	b083      	sub	sp, #12
 8000ab0:	af00      	add	r7, sp, #0
 8000ab2:	4603      	mov	r3, r0
 8000ab4:	71fb      	strb	r3, [r7, #7]

	MUSART1 -> DR = Copy_u8Char ;
 8000ab6:	4a08      	ldr	r2, [pc, #32]	; (8000ad8 <MUSART1_VidSendCharSync+0x2c>)
 8000ab8:	79fb      	ldrb	r3, [r7, #7]
 8000aba:	6053      	str	r3, [r2, #4]
	while( GET_BIT( MUSART1 -> SR , 6 ) == 0 );
 8000abc:	bf00      	nop
 8000abe:	4b06      	ldr	r3, [pc, #24]	; (8000ad8 <MUSART1_VidSendCharSync+0x2c>)
 8000ac0:	681b      	ldr	r3, [r3, #0]
 8000ac2:	099b      	lsrs	r3, r3, #6
 8000ac4:	f003 0301 	and.w	r3, r3, #1
 8000ac8:	2b00      	cmp	r3, #0
 8000aca:	d0f8      	beq.n	8000abe <MUSART1_VidSendCharSync+0x12>


	//CLR_BIT( MUSART1 -> SR , 6 );

}
 8000acc:	bf00      	nop
 8000ace:	370c      	adds	r7, #12
 8000ad0:	46bd      	mov	sp, r7
 8000ad2:	bc80      	pop	{r7}
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop
 8000ad8:	40013800 	.word	0x40013800

08000adc <USART1_IRQHandler>:

	MUSART1_CallBack = ptr ;

}

void USART1_IRQHandler(void){
 8000adc:	b580      	push	{r7, lr}
 8000ade:	af00      	add	r7, sp, #0

	MUSART1 -> SR = 0 ;
 8000ae0:	4b03      	ldr	r3, [pc, #12]	; (8000af0 <USART1_IRQHandler+0x14>)
 8000ae2:	2200      	movs	r2, #0
 8000ae4:	601a      	str	r2, [r3, #0]
	MUSART1_CallBack();
 8000ae6:	4b03      	ldr	r3, [pc, #12]	; (8000af4 <USART1_IRQHandler+0x18>)
 8000ae8:	681b      	ldr	r3, [r3, #0]
 8000aea:	4798      	blx	r3

}
 8000aec:	bf00      	nop
 8000aee:	bd80      	pop	{r7, pc}
 8000af0:	40013800 	.word	0x40013800
 8000af4:	20000038 	.word	0x20000038

08000af8 <main>:
#include "GPIO_INTERFACE.h"
#include "SPI_INTERFACE.h"
#include "LCD_INTERFACE.h"
#include "KEYPAD_INTERFACE.h"

int main ( void ){
 8000af8:	b580      	push	{r7, lr}
 8000afa:	b082      	sub	sp, #8
 8000afc:	af00      	add	r7, sp, #0
	u8 LOC_u8NewData;
	char x=0xff;
 8000afe:	23ff      	movs	r3, #255	; 0xff
 8000b00:	71bb      	strb	r3, [r7, #6]
	MRCC_VidInit();
 8000b02:	f7ff feef 	bl	80008e4 <MRCC_VidInit>
	MRCC_VidEnablePeripheralClock( APB2_BUS , GPIOA_RCC );
 8000b06:	2102      	movs	r1, #2
 8000b08:	2002      	movs	r0, #2
 8000b0a:	f7ff ff21 	bl	8000950 <MRCC_VidEnablePeripheralClock>
	MRCC_VidEnablePeripheralClock( APB2_BUS , GPIOB_RCC );
 8000b0e:	2103      	movs	r1, #3
 8000b10:	2002      	movs	r0, #2
 8000b12:	f7ff ff1d 	bl	8000950 <MRCC_VidEnablePeripheralClock>
	MRCC_VidEnablePeripheralClock( APB2_BUS , SPI1_RCC  );
 8000b16:	210c      	movs	r1, #12
 8000b18:	2002      	movs	r0, #2
 8000b1a:	f7ff ff19 	bl	8000950 <MRCC_VidEnablePeripheralClock>
	MRCC_VidEnablePeripheralClock ( APB2_BUS , USART1_RCC                  ) ;
 8000b1e:	210e      	movs	r1, #14
 8000b20:	2002      	movs	r0, #2
 8000b22:	f7ff ff15 	bl	8000950 <MRCC_VidEnablePeripheralClock>

	MGPIO_VidSetPinDirection( GPIOB , PIN3 , OUTPUT_SPEED_2MHZ_AFPP );//CLOCK
	MGPIO_VidSetPinDirection( GPIOA , PIN15 , OUTPUT_SPEED_2MHZ_AFPP );

	MGPIO_VidSetPinDirection(GPIOB,0,OUTPUT_SPEED_2MHZ_PP);*/
	MGPIO_VidSetPinDirection( GPIOA , PIN9 , OUTPUT_SPEED_2MHZ_AFPP );
 8000b26:	220a      	movs	r2, #10
 8000b28:	2109      	movs	r1, #9
 8000b2a:	2000      	movs	r0, #0
 8000b2c:	f7ff fb0e 	bl	800014c <MGPIO_VidSetPinDirection>
	//MSPI_VidInit();
	MUSART_VidInit();
 8000b30:	f7ff ff58 	bl	80009e4 <MUSART_VidInit>

	HLCD_VidInit();
 8000b34:	f7ff fe12 	bl	800075c <HLCD_VidInit>
	HKEYPAD_VidInit();
 8000b38:	f7ff fcfb 	bl	8000532 <HKEYPAD_VidInit>
	u8 room;
	u8 control;
	u8 on_off;
	u8 first=0;
 8000b3c:	2300      	movs	r3, #0
 8000b3e:	71fb      	strb	r3, [r7, #7]
	HLCD_VidClearScreen();
 8000b40:	f7ff fe9f 	bl	8000882 <HLCD_VidClearScreen>
	HLCD_VidWriteString("HelloSmartHOME");
 8000b44:	48d6      	ldr	r0, [pc, #856]	; (8000ea0 <main+0x3a8>)
 8000b46:	f7ff fe87 	bl	8000858 <HLCD_VidWriteString>
	main_VidDelay();
 8000b4a:	f7ff fdc4 	bl	80006d6 <main_VidDelay>
	HLCD_VidClearScreen();
 8000b4e:	f7ff fe98 	bl	8000882 <HLCD_VidClearScreen>
	while(1){
	if(first==0){
 8000b52:	79fb      	ldrb	r3, [r7, #7]
 8000b54:	2b00      	cmp	r3, #0
 8000b56:	d114      	bne.n	8000b82 <main+0x8a>
		HLCD_VidClearScreen();
 8000b58:	f7ff fe93 	bl	8000882 <HLCD_VidClearScreen>
	HLCD_VidWriteString("Choos ur Mode:");
 8000b5c:	48d1      	ldr	r0, [pc, #836]	; (8000ea4 <main+0x3ac>)
 8000b5e:	f7ff fe7b 	bl	8000858 <HLCD_VidWriteString>

	HLCD_VidShift(1,2);
 8000b62:	2102      	movs	r1, #2
 8000b64:	2001      	movs	r0, #1
 8000b66:	f7ff fe96 	bl	8000896 <HLCD_VidShift>
	HLCD_VidWriteString("Admin0:");
 8000b6a:	48cf      	ldr	r0, [pc, #828]	; (8000ea8 <main+0x3b0>)
 8000b6c:	f7ff fe74 	bl	8000858 <HLCD_VidWriteString>
	HLCD_VidShift(8,2);
 8000b70:	2102      	movs	r1, #2
 8000b72:	2008      	movs	r0, #8
 8000b74:	f7ff fe8f 	bl	8000896 <HLCD_VidShift>
	HLCD_VidWriteString("Guset1:");
 8000b78:	48cc      	ldr	r0, [pc, #816]	; (8000eac <main+0x3b4>)
 8000b7a:	f7ff fe6d 	bl	8000858 <HLCD_VidWriteString>
	first=1;
 8000b7e:	2301      	movs	r3, #1
 8000b80:	71fb      	strb	r3, [r7, #7]
	}

	HKEYPAD_VidDelay();
 8000b82:	f7ff fcbb 	bl	80004fc <HKEYPAD_VidDelay>
	HKEYPAD_VidDelay();
 8000b86:	f7ff fcb9 	bl	80004fc <HKEYPAD_VidDelay>
	x=HkEYPAD_u8GetPress();
 8000b8a:	f7ff fd27 	bl	80005dc <HkEYPAD_u8GetPress>
 8000b8e:	4603      	mov	r3, r0
 8000b90:	71bb      	strb	r3, [r7, #6]

	if(x=='0'){		//choose admin mode
 8000b92:	79bb      	ldrb	r3, [r7, #6]
 8000b94:	2b30      	cmp	r3, #48	; 0x30
 8000b96:	f040 86b1 	bne.w	80018fc <main+0xe04>
		x=6;
 8000b9a:	2306      	movs	r3, #6
 8000b9c:	71bb      	strb	r3, [r7, #6]
		first=0;
 8000b9e:	2300      	movs	r3, #0
 8000ba0:	71fb      	strb	r3, [r7, #7]
		HLCD_VidClearScreen();
 8000ba2:	f7ff fe6e 	bl	8000882 <HLCD_VidClearScreen>
	while(1){

			if(first==0){
 8000ba6:	79fb      	ldrb	r3, [r7, #7]
 8000ba8:	2b00      	cmp	r3, #0
 8000baa:	d122      	bne.n	8000bf2 <main+0xfa>
				HLCD_VidClearScreen();
 8000bac:	f7ff fe69 	bl	8000882 <HLCD_VidClearScreen>
			HLCD_VidWriteString("WelcomeADMINMode:");
 8000bb0:	48bf      	ldr	r0, [pc, #764]	; (8000eb0 <main+0x3b8>)
 8000bb2:	f7ff fe51 	bl	8000858 <HLCD_VidWriteString>
			main_VidDelay();
 8000bb6:	f7ff fd8e 	bl	80006d6 <main_VidDelay>
			HLCD_VidClearScreen();
 8000bba:	f7ff fe62 	bl	8000882 <HLCD_VidClearScreen>
			HLCD_VidWriteString("Control Room: ");
 8000bbe:	48bd      	ldr	r0, [pc, #756]	; (8000eb4 <main+0x3bc>)
 8000bc0:	f7ff fe4a 	bl	8000858 <HLCD_VidWriteString>
			HLCD_VidShift(15,1);
 8000bc4:	2101      	movs	r1, #1
 8000bc6:	200f      	movs	r0, #15
 8000bc8:	f7ff fe65 	bl	8000896 <HLCD_VidShift>
			HLCD_VidWriteString("<-");
 8000bcc:	48ba      	ldr	r0, [pc, #744]	; (8000eb8 <main+0x3c0>)
 8000bce:	f7ff fe43 	bl	8000858 <HLCD_VidWriteString>
			HLCD_VidShift(16,2);
 8000bd2:	2102      	movs	r1, #2
 8000bd4:	2010      	movs	r0, #16
 8000bd6:	f7ff fe5e 	bl	8000896 <HLCD_VidShift>
			HLCD_VidWriteString("5");
 8000bda:	48b8      	ldr	r0, [pc, #736]	; (8000ebc <main+0x3c4>)
 8000bdc:	f7ff fe3c 	bl	8000858 <HLCD_VidWriteString>
			HLCD_VidShift(1,2);
 8000be0:	2102      	movs	r1, #2
 8000be2:	2001      	movs	r0, #1
 8000be4:	f7ff fe57 	bl	8000896 <HLCD_VidShift>
			HLCD_VidWriteString("Room(1/2/3/4:");
 8000be8:	48b5      	ldr	r0, [pc, #724]	; (8000ec0 <main+0x3c8>)
 8000bea:	f7ff fe35 	bl	8000858 <HLCD_VidWriteString>
			first=1;
 8000bee:	2301      	movs	r3, #1
 8000bf0:	71fb      	strb	r3, [r7, #7]
			}
			HKEYPAD_VidDelay();
 8000bf2:	f7ff fc83 	bl	80004fc <HKEYPAD_VidDelay>
			HKEYPAD_VidDelay();
 8000bf6:	f7ff fc81 	bl	80004fc <HKEYPAD_VidDelay>
			room=HkEYPAD_u8GetPress();
 8000bfa:	f7ff fcef 	bl	80005dc <HkEYPAD_u8GetPress>
 8000bfe:	4603      	mov	r3, r0
 8000c00:	717b      	strb	r3, [r7, #5]
			if(room=='5'){first=0;	room=6; break;}
 8000c02:	797b      	ldrb	r3, [r7, #5]
 8000c04:	2b35      	cmp	r3, #53	; 0x35
 8000c06:	d105      	bne.n	8000c14 <main+0x11c>
 8000c08:	2300      	movs	r3, #0
 8000c0a:	71fb      	strb	r3, [r7, #7]
 8000c0c:	2306      	movs	r3, #6
 8000c0e:	717b      	strb	r3, [r7, #5]
 8000c10:	f001 b977 	b.w	8001f02 <main+0x140a>
			else if(room=='1'){
 8000c14:	797b      	ldrb	r3, [r7, #5]
 8000c16:	2b31      	cmp	r3, #49	; 0x31
 8000c18:	f040 81a3 	bne.w	8000f62 <main+0x46a>
				room=6;
 8000c1c:	2306      	movs	r3, #6
 8000c1e:	717b      	strb	r3, [r7, #5]
				first=0;
 8000c20:	2300      	movs	r3, #0
 8000c22:	71fb      	strb	r3, [r7, #7]
				HLCD_VidClearScreen();
 8000c24:	f7ff fe2d 	bl	8000882 <HLCD_VidClearScreen>
			while(1){
						if(first==0){
 8000c28:	79fb      	ldrb	r3, [r7, #7]
 8000c2a:	2b00      	cmp	r3, #0
 8000c2c:	d11b      	bne.n	8000c66 <main+0x16e>
						//room=0;
						HLCD_VidClearScreen();
 8000c2e:	f7ff fe28 	bl	8000882 <HLCD_VidClearScreen>
						HLCD_VidWriteString("Welcome Room1:");
 8000c32:	48a4      	ldr	r0, [pc, #656]	; (8000ec4 <main+0x3cc>)
 8000c34:	f7ff fe10 	bl	8000858 <HLCD_VidWriteString>
						HLCD_VidShift(15,1);
 8000c38:	2101      	movs	r1, #1
 8000c3a:	200f      	movs	r0, #15
 8000c3c:	f7ff fe2b 	bl	8000896 <HLCD_VidShift>
									HLCD_VidWriteString("<-");
 8000c40:	489d      	ldr	r0, [pc, #628]	; (8000eb8 <main+0x3c0>)
 8000c42:	f7ff fe09 	bl	8000858 <HLCD_VidWriteString>
									HLCD_VidShift(16,2);
 8000c46:	2102      	movs	r1, #2
 8000c48:	2010      	movs	r0, #16
 8000c4a:	f7ff fe24 	bl	8000896 <HLCD_VidShift>
									HLCD_VidWriteString("5");
 8000c4e:	489b      	ldr	r0, [pc, #620]	; (8000ebc <main+0x3c4>)
 8000c50:	f7ff fe02 	bl	8000858 <HLCD_VidWriteString>
						HLCD_VidShift(1,2);
 8000c54:	2102      	movs	r1, #2
 8000c56:	2001      	movs	r0, #1
 8000c58:	f7ff fe1d 	bl	8000896 <HLCD_VidShift>
						HLCD_VidWriteString("LI1/AIR2/TV3:");
 8000c5c:	489a      	ldr	r0, [pc, #616]	; (8000ec8 <main+0x3d0>)
 8000c5e:	f7ff fdfb 	bl	8000858 <HLCD_VidWriteString>
						first=1;
 8000c62:	2301      	movs	r3, #1
 8000c64:	71fb      	strb	r3, [r7, #7]
						}
						HKEYPAD_VidDelay();
 8000c66:	f7ff fc49 	bl	80004fc <HKEYPAD_VidDelay>
						HKEYPAD_VidDelay();
 8000c6a:	f7ff fc47 	bl	80004fc <HKEYPAD_VidDelay>
						control=HkEYPAD_u8GetPress();
 8000c6e:	f7ff fcb5 	bl	80005dc <HkEYPAD_u8GetPress>
 8000c72:	4603      	mov	r3, r0
 8000c74:	713b      	strb	r3, [r7, #4]
						if(control=='5'){first=0;	control=6; break;}
 8000c76:	793b      	ldrb	r3, [r7, #4]
 8000c78:	2b35      	cmp	r3, #53	; 0x35
 8000c7a:	d105      	bne.n	8000c88 <main+0x190>
 8000c7c:	2300      	movs	r3, #0
 8000c7e:	71fb      	strb	r3, [r7, #7]
 8000c80:	2306      	movs	r3, #6
 8000c82:	713b      	strb	r3, [r7, #4]
 8000c84:	f000 be26 	b.w	80018d4 <main+0xddc>
						else if(control=='1'){
 8000c88:	793b      	ldrb	r3, [r7, #4]
 8000c8a:	2b31      	cmp	r3, #49	; 0x31
 8000c8c:	d16d      	bne.n	8000d6a <main+0x272>
							control=6;
 8000c8e:	2306      	movs	r3, #6
 8000c90:	713b      	strb	r3, [r7, #4]
							first=0;
 8000c92:	2300      	movs	r3, #0
 8000c94:	71fb      	strb	r3, [r7, #7]
							HLCD_VidClearScreen();
 8000c96:	f7ff fdf4 	bl	8000882 <HLCD_VidClearScreen>
						while(1){

								if(first==0){
 8000c9a:	79fb      	ldrb	r3, [r7, #7]
 8000c9c:	2b00      	cmp	r3, #0
 8000c9e:	d114      	bne.n	8000cca <main+0x1d2>
								//control=0;
									HLCD_VidClearScreen();
 8000ca0:	f7ff fdef 	bl	8000882 <HLCD_VidClearScreen>
								HLCD_VidWriteString("LI-ON1/OFF0:");
 8000ca4:	4889      	ldr	r0, [pc, #548]	; (8000ecc <main+0x3d4>)
 8000ca6:	f7ff fdd7 	bl	8000858 <HLCD_VidWriteString>
								HLCD_VidShift(15,1);
 8000caa:	2101      	movs	r1, #1
 8000cac:	200f      	movs	r0, #15
 8000cae:	f7ff fdf2 	bl	8000896 <HLCD_VidShift>
											HLCD_VidWriteString("<-");
 8000cb2:	4881      	ldr	r0, [pc, #516]	; (8000eb8 <main+0x3c0>)
 8000cb4:	f7ff fdd0 	bl	8000858 <HLCD_VidWriteString>
											HLCD_VidShift(16,2);
 8000cb8:	2102      	movs	r1, #2
 8000cba:	2010      	movs	r0, #16
 8000cbc:	f7ff fdeb 	bl	8000896 <HLCD_VidShift>
											HLCD_VidWriteString("5");
 8000cc0:	487e      	ldr	r0, [pc, #504]	; (8000ebc <main+0x3c4>)
 8000cc2:	f7ff fdc9 	bl	8000858 <HLCD_VidWriteString>
								first=1;
 8000cc6:	2301      	movs	r3, #1
 8000cc8:	71fb      	strb	r3, [r7, #7]
								}
								HKEYPAD_VidDelay();
 8000cca:	f7ff fc17 	bl	80004fc <HKEYPAD_VidDelay>
								HKEYPAD_VidDelay();
 8000cce:	f7ff fc15 	bl	80004fc <HKEYPAD_VidDelay>
								on_off=HkEYPAD_u8GetPress();
 8000cd2:	f7ff fc83 	bl	80005dc <HkEYPAD_u8GetPress>
 8000cd6:	4603      	mov	r3, r0
 8000cd8:	70fb      	strb	r3, [r7, #3]
								 if(on_off=='5'){first=0;on_off=6; break;}
 8000cda:	78fb      	ldrb	r3, [r7, #3]
 8000cdc:	2b35      	cmp	r3, #53	; 0x35
 8000cde:	d104      	bne.n	8000cea <main+0x1f2>
 8000ce0:	2300      	movs	r3, #0
 8000ce2:	71fb      	strb	r3, [r7, #7]
 8000ce4:	2306      	movs	r3, #6
 8000ce6:	70fb      	strb	r3, [r7, #3]
 8000ce8:	e13a      	b.n	8000f60 <main+0x468>
								 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8000cea:	78fb      	ldrb	r3, [r7, #3]
 8000cec:	2b31      	cmp	r3, #49	; 0x31
 8000cee:	d11c      	bne.n	8000d2a <main+0x232>
 8000cf0:	2306      	movs	r3, #6
 8000cf2:	70fb      	strb	r3, [r7, #3]
 8000cf4:	f7ff fdc5 	bl	8000882 <HLCD_VidClearScreen>
 8000cf8:	4875      	ldr	r0, [pc, #468]	; (8000ed0 <main+0x3d8>)
 8000cfa:	f7ff fdad 	bl	8000858 <HLCD_VidWriteString>
								 HLCD_VidShift(15,1);
 8000cfe:	2101      	movs	r1, #1
 8000d00:	200f      	movs	r0, #15
 8000d02:	f7ff fdc8 	bl	8000896 <HLCD_VidShift>
								 			HLCD_VidWriteString("<-");
 8000d06:	486c      	ldr	r0, [pc, #432]	; (8000eb8 <main+0x3c0>)
 8000d08:	f7ff fda6 	bl	8000858 <HLCD_VidWriteString>
								 			HLCD_VidShift(16,2);
 8000d0c:	2102      	movs	r1, #2
 8000d0e:	2010      	movs	r0, #16
 8000d10:	f7ff fdc1 	bl	8000896 <HLCD_VidShift>
								 			HLCD_VidWriteString("5");
 8000d14:	4869      	ldr	r0, [pc, #420]	; (8000ebc <main+0x3c4>)
 8000d16:	f7ff fd9f 	bl	8000858 <HLCD_VidWriteString>
								  MUSART1_VidSendCharSync('1');
 8000d1a:	2031      	movs	r0, #49	; 0x31
 8000d1c:	f7ff fec6 	bl	8000aac <MUSART1_VidSendCharSync>
								 HKEYPAD_VidDelay();
 8000d20:	f7ff fbec 	bl	80004fc <HKEYPAD_VidDelay>
								HKEYPAD_VidDelay();
 8000d24:	f7ff fbea 	bl	80004fc <HKEYPAD_VidDelay>
 8000d28:	e7b7      	b.n	8000c9a <main+0x1a2>
															}
								 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8000d2a:	78fb      	ldrb	r3, [r7, #3]
 8000d2c:	2b30      	cmp	r3, #48	; 0x30
 8000d2e:	d1b4      	bne.n	8000c9a <main+0x1a2>
 8000d30:	2306      	movs	r3, #6
 8000d32:	70fb      	strb	r3, [r7, #3]
 8000d34:	f7ff fda5 	bl	8000882 <HLCD_VidClearScreen>
 8000d38:	4866      	ldr	r0, [pc, #408]	; (8000ed4 <main+0x3dc>)
 8000d3a:	f7ff fd8d 	bl	8000858 <HLCD_VidWriteString>
								 HLCD_VidShift(15,1);
 8000d3e:	2101      	movs	r1, #1
 8000d40:	200f      	movs	r0, #15
 8000d42:	f7ff fda8 	bl	8000896 <HLCD_VidShift>
								 			HLCD_VidWriteString("<-");
 8000d46:	485c      	ldr	r0, [pc, #368]	; (8000eb8 <main+0x3c0>)
 8000d48:	f7ff fd86 	bl	8000858 <HLCD_VidWriteString>
								 			HLCD_VidShift(16,2);
 8000d4c:	2102      	movs	r1, #2
 8000d4e:	2010      	movs	r0, #16
 8000d50:	f7ff fda1 	bl	8000896 <HLCD_VidShift>
								 			HLCD_VidWriteString("5");
 8000d54:	4859      	ldr	r0, [pc, #356]	; (8000ebc <main+0x3c4>)
 8000d56:	f7ff fd7f 	bl	8000858 <HLCD_VidWriteString>
								MUSART1_VidSendCharSync('0');
 8000d5a:	2030      	movs	r0, #48	; 0x30
 8000d5c:	f7ff fea6 	bl	8000aac <MUSART1_VidSendCharSync>
								HKEYPAD_VidDelay();
 8000d60:	f7ff fbcc 	bl	80004fc <HKEYPAD_VidDelay>
								HKEYPAD_VidDelay();
 8000d64:	f7ff fbca 	bl	80004fc <HKEYPAD_VidDelay>
								if(first==0){
 8000d68:	e797      	b.n	8000c9a <main+0x1a2>
														}

							}
						}
						else if(control=='2'){
 8000d6a:	793b      	ldrb	r3, [r7, #4]
 8000d6c:	2b32      	cmp	r3, #50	; 0x32
 8000d6e:	d169      	bne.n	8000e44 <main+0x34c>
												control=6;
 8000d70:	2306      	movs	r3, #6
 8000d72:	713b      	strb	r3, [r7, #4]
												first=0;
 8000d74:	2300      	movs	r3, #0
 8000d76:	71fb      	strb	r3, [r7, #7]
												HLCD_VidClearScreen();
 8000d78:	f7ff fd83 	bl	8000882 <HLCD_VidClearScreen>
											while(1){

													if(first==0){
 8000d7c:	79fb      	ldrb	r3, [r7, #7]
 8000d7e:	2b00      	cmp	r3, #0
 8000d80:	d112      	bne.n	8000da8 <main+0x2b0>
													//control=0;
													HLCD_VidWriteString("AIR ON1/OFF0:");
 8000d82:	4855      	ldr	r0, [pc, #340]	; (8000ed8 <main+0x3e0>)
 8000d84:	f7ff fd68 	bl	8000858 <HLCD_VidWriteString>
													HLCD_VidShift(15,1);
 8000d88:	2101      	movs	r1, #1
 8000d8a:	200f      	movs	r0, #15
 8000d8c:	f7ff fd83 	bl	8000896 <HLCD_VidShift>
																HLCD_VidWriteString("<-");
 8000d90:	4849      	ldr	r0, [pc, #292]	; (8000eb8 <main+0x3c0>)
 8000d92:	f7ff fd61 	bl	8000858 <HLCD_VidWriteString>
																HLCD_VidShift(16,2);
 8000d96:	2102      	movs	r1, #2
 8000d98:	2010      	movs	r0, #16
 8000d9a:	f7ff fd7c 	bl	8000896 <HLCD_VidShift>
																HLCD_VidWriteString("5");
 8000d9e:	4847      	ldr	r0, [pc, #284]	; (8000ebc <main+0x3c4>)
 8000da0:	f7ff fd5a 	bl	8000858 <HLCD_VidWriteString>
													first=1;
 8000da4:	2301      	movs	r3, #1
 8000da6:	71fb      	strb	r3, [r7, #7]
													}
													HKEYPAD_VidDelay();
 8000da8:	f7ff fba8 	bl	80004fc <HKEYPAD_VidDelay>
													on_off=HkEYPAD_u8GetPress();
 8000dac:	f7ff fc16 	bl	80005dc <HkEYPAD_u8GetPress>
 8000db0:	4603      	mov	r3, r0
 8000db2:	70fb      	strb	r3, [r7, #3]
													 if(on_off=='5'){first=0;on_off=6; break;}
 8000db4:	78fb      	ldrb	r3, [r7, #3]
 8000db6:	2b35      	cmp	r3, #53	; 0x35
 8000db8:	d104      	bne.n	8000dc4 <main+0x2cc>
 8000dba:	2300      	movs	r3, #0
 8000dbc:	71fb      	strb	r3, [r7, #7]
 8000dbe:	2306      	movs	r3, #6
 8000dc0:	70fb      	strb	r3, [r7, #3]
 8000dc2:	e0cd      	b.n	8000f60 <main+0x468>
													 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8000dc4:	78fb      	ldrb	r3, [r7, #3]
 8000dc6:	2b31      	cmp	r3, #49	; 0x31
 8000dc8:	d11c      	bne.n	8000e04 <main+0x30c>
 8000dca:	2306      	movs	r3, #6
 8000dcc:	70fb      	strb	r3, [r7, #3]
 8000dce:	f7ff fd58 	bl	8000882 <HLCD_VidClearScreen>
 8000dd2:	483f      	ldr	r0, [pc, #252]	; (8000ed0 <main+0x3d8>)
 8000dd4:	f7ff fd40 	bl	8000858 <HLCD_VidWriteString>
													 HLCD_VidShift(15,1);
 8000dd8:	2101      	movs	r1, #1
 8000dda:	200f      	movs	r0, #15
 8000ddc:	f7ff fd5b 	bl	8000896 <HLCD_VidShift>
													 			HLCD_VidWriteString("<-");
 8000de0:	4835      	ldr	r0, [pc, #212]	; (8000eb8 <main+0x3c0>)
 8000de2:	f7ff fd39 	bl	8000858 <HLCD_VidWriteString>
													 			HLCD_VidShift(16,2);
 8000de6:	2102      	movs	r1, #2
 8000de8:	2010      	movs	r0, #16
 8000dea:	f7ff fd54 	bl	8000896 <HLCD_VidShift>
													 			HLCD_VidWriteString("5");
 8000dee:	4833      	ldr	r0, [pc, #204]	; (8000ebc <main+0x3c4>)
 8000df0:	f7ff fd32 	bl	8000858 <HLCD_VidWriteString>
													  MUSART1_VidSendCharSync('3');
 8000df4:	2033      	movs	r0, #51	; 0x33
 8000df6:	f7ff fe59 	bl	8000aac <MUSART1_VidSendCharSync>
													 HKEYPAD_VidDelay();
 8000dfa:	f7ff fb7f 	bl	80004fc <HKEYPAD_VidDelay>
													HKEYPAD_VidDelay();
 8000dfe:	f7ff fb7d 	bl	80004fc <HKEYPAD_VidDelay>
 8000e02:	e7bb      	b.n	8000d7c <main+0x284>
																				}
													 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8000e04:	78fb      	ldrb	r3, [r7, #3]
 8000e06:	2b30      	cmp	r3, #48	; 0x30
 8000e08:	d1b8      	bne.n	8000d7c <main+0x284>
 8000e0a:	2306      	movs	r3, #6
 8000e0c:	70fb      	strb	r3, [r7, #3]
 8000e0e:	f7ff fd38 	bl	8000882 <HLCD_VidClearScreen>
 8000e12:	4830      	ldr	r0, [pc, #192]	; (8000ed4 <main+0x3dc>)
 8000e14:	f7ff fd20 	bl	8000858 <HLCD_VidWriteString>
													 HLCD_VidShift(15,1);
 8000e18:	2101      	movs	r1, #1
 8000e1a:	200f      	movs	r0, #15
 8000e1c:	f7ff fd3b 	bl	8000896 <HLCD_VidShift>
													 			HLCD_VidWriteString("<-");
 8000e20:	4825      	ldr	r0, [pc, #148]	; (8000eb8 <main+0x3c0>)
 8000e22:	f7ff fd19 	bl	8000858 <HLCD_VidWriteString>
													 			HLCD_VidShift(16,2);
 8000e26:	2102      	movs	r1, #2
 8000e28:	2010      	movs	r0, #16
 8000e2a:	f7ff fd34 	bl	8000896 <HLCD_VidShift>
													 			HLCD_VidWriteString("5");
 8000e2e:	4823      	ldr	r0, [pc, #140]	; (8000ebc <main+0x3c4>)
 8000e30:	f7ff fd12 	bl	8000858 <HLCD_VidWriteString>
													MUSART1_VidSendCharSync('4');
 8000e34:	2034      	movs	r0, #52	; 0x34
 8000e36:	f7ff fe39 	bl	8000aac <MUSART1_VidSendCharSync>
													HKEYPAD_VidDelay();
 8000e3a:	f7ff fb5f 	bl	80004fc <HKEYPAD_VidDelay>
													HKEYPAD_VidDelay();
 8000e3e:	f7ff fb5d 	bl	80004fc <HKEYPAD_VidDelay>
													if(first==0){
 8000e42:	e79b      	b.n	8000d7c <main+0x284>
																			}

												}
											}
						else if(control=='3'){
 8000e44:	793b      	ldrb	r3, [r7, #4]
 8000e46:	2b33      	cmp	r3, #51	; 0x33
 8000e48:	f47f aeee 	bne.w	8000c28 <main+0x130>
												control=6;
 8000e4c:	2306      	movs	r3, #6
 8000e4e:	713b      	strb	r3, [r7, #4]
												first=0;
 8000e50:	2300      	movs	r3, #0
 8000e52:	71fb      	strb	r3, [r7, #7]
												HLCD_VidClearScreen();
 8000e54:	f7ff fd15 	bl	8000882 <HLCD_VidClearScreen>
											while(1){

													if(first==0){
 8000e58:	79fb      	ldrb	r3, [r7, #7]
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	d112      	bne.n	8000e84 <main+0x38c>
													//control=0;
													HLCD_VidWriteString("TV-ON1/OFF0:");
 8000e5e:	481f      	ldr	r0, [pc, #124]	; (8000edc <main+0x3e4>)
 8000e60:	f7ff fcfa 	bl	8000858 <HLCD_VidWriteString>
													HLCD_VidShift(15,1);
 8000e64:	2101      	movs	r1, #1
 8000e66:	200f      	movs	r0, #15
 8000e68:	f7ff fd15 	bl	8000896 <HLCD_VidShift>
																HLCD_VidWriteString("<-");
 8000e6c:	4812      	ldr	r0, [pc, #72]	; (8000eb8 <main+0x3c0>)
 8000e6e:	f7ff fcf3 	bl	8000858 <HLCD_VidWriteString>
																HLCD_VidShift(16,2);
 8000e72:	2102      	movs	r1, #2
 8000e74:	2010      	movs	r0, #16
 8000e76:	f7ff fd0e 	bl	8000896 <HLCD_VidShift>
																HLCD_VidWriteString("5");
 8000e7a:	4810      	ldr	r0, [pc, #64]	; (8000ebc <main+0x3c4>)
 8000e7c:	f7ff fcec 	bl	8000858 <HLCD_VidWriteString>
													first=1;
 8000e80:	2301      	movs	r3, #1
 8000e82:	71fb      	strb	r3, [r7, #7]
													}
													HKEYPAD_VidDelay();
 8000e84:	f7ff fb3a 	bl	80004fc <HKEYPAD_VidDelay>
													on_off=HkEYPAD_u8GetPress();
 8000e88:	f7ff fba8 	bl	80005dc <HkEYPAD_u8GetPress>
 8000e8c:	4603      	mov	r3, r0
 8000e8e:	70fb      	strb	r3, [r7, #3]
													 if(on_off=='5'){first=0;on_off=6; break;}
 8000e90:	78fb      	ldrb	r3, [r7, #3]
 8000e92:	2b35      	cmp	r3, #53	; 0x35
 8000e94:	d124      	bne.n	8000ee0 <main+0x3e8>
 8000e96:	2300      	movs	r3, #0
 8000e98:	71fb      	strb	r3, [r7, #7]
 8000e9a:	2306      	movs	r3, #6
 8000e9c:	70fb      	strb	r3, [r7, #3]
 8000e9e:	e05f      	b.n	8000f60 <main+0x468>
 8000ea0:	080021a8 	.word	0x080021a8
 8000ea4:	080021b8 	.word	0x080021b8
 8000ea8:	080021c8 	.word	0x080021c8
 8000eac:	080021d0 	.word	0x080021d0
 8000eb0:	080021d8 	.word	0x080021d8
 8000eb4:	080021ec 	.word	0x080021ec
 8000eb8:	080021fc 	.word	0x080021fc
 8000ebc:	08002200 	.word	0x08002200
 8000ec0:	08002204 	.word	0x08002204
 8000ec4:	08002214 	.word	0x08002214
 8000ec8:	08002224 	.word	0x08002224
 8000ecc:	08002234 	.word	0x08002234
 8000ed0:	08002244 	.word	0x08002244
 8000ed4:	08002248 	.word	0x08002248
 8000ed8:	0800224c 	.word	0x0800224c
 8000edc:	0800225c 	.word	0x0800225c
													 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8000ee0:	78fb      	ldrb	r3, [r7, #3]
 8000ee2:	2b31      	cmp	r3, #49	; 0x31
 8000ee4:	d11c      	bne.n	8000f20 <main+0x428>
 8000ee6:	2306      	movs	r3, #6
 8000ee8:	70fb      	strb	r3, [r7, #3]
 8000eea:	f7ff fcca 	bl	8000882 <HLCD_VidClearScreen>
 8000eee:	48d0      	ldr	r0, [pc, #832]	; (8001230 <main+0x738>)
 8000ef0:	f7ff fcb2 	bl	8000858 <HLCD_VidWriteString>
													 HLCD_VidShift(15,1);
 8000ef4:	2101      	movs	r1, #1
 8000ef6:	200f      	movs	r0, #15
 8000ef8:	f7ff fccd 	bl	8000896 <HLCD_VidShift>
													 			HLCD_VidWriteString("<-");
 8000efc:	48cd      	ldr	r0, [pc, #820]	; (8001234 <main+0x73c>)
 8000efe:	f7ff fcab 	bl	8000858 <HLCD_VidWriteString>
													 			HLCD_VidShift(16,2);
 8000f02:	2102      	movs	r1, #2
 8000f04:	2010      	movs	r0, #16
 8000f06:	f7ff fcc6 	bl	8000896 <HLCD_VidShift>
													 			HLCD_VidWriteString("5");
 8000f0a:	48cb      	ldr	r0, [pc, #812]	; (8001238 <main+0x740>)
 8000f0c:	f7ff fca4 	bl	8000858 <HLCD_VidWriteString>
													  MUSART1_VidSendCharSync('5');
 8000f10:	2035      	movs	r0, #53	; 0x35
 8000f12:	f7ff fdcb 	bl	8000aac <MUSART1_VidSendCharSync>
													 HKEYPAD_VidDelay();
 8000f16:	f7ff faf1 	bl	80004fc <HKEYPAD_VidDelay>
													HKEYPAD_VidDelay();
 8000f1a:	f7ff faef 	bl	80004fc <HKEYPAD_VidDelay>
 8000f1e:	e79b      	b.n	8000e58 <main+0x360>
																				}
													 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8000f20:	78fb      	ldrb	r3, [r7, #3]
 8000f22:	2b30      	cmp	r3, #48	; 0x30
 8000f24:	d198      	bne.n	8000e58 <main+0x360>
 8000f26:	2306      	movs	r3, #6
 8000f28:	70fb      	strb	r3, [r7, #3]
 8000f2a:	f7ff fcaa 	bl	8000882 <HLCD_VidClearScreen>
 8000f2e:	48c3      	ldr	r0, [pc, #780]	; (800123c <main+0x744>)
 8000f30:	f7ff fc92 	bl	8000858 <HLCD_VidWriteString>
													 HLCD_VidShift(15,1);
 8000f34:	2101      	movs	r1, #1
 8000f36:	200f      	movs	r0, #15
 8000f38:	f7ff fcad 	bl	8000896 <HLCD_VidShift>
													 			HLCD_VidWriteString("<-");
 8000f3c:	48bd      	ldr	r0, [pc, #756]	; (8001234 <main+0x73c>)
 8000f3e:	f7ff fc8b 	bl	8000858 <HLCD_VidWriteString>
													 			HLCD_VidShift(16,2);
 8000f42:	2102      	movs	r1, #2
 8000f44:	2010      	movs	r0, #16
 8000f46:	f7ff fca6 	bl	8000896 <HLCD_VidShift>
													 			HLCD_VidWriteString("5");
 8000f4a:	48bb      	ldr	r0, [pc, #748]	; (8001238 <main+0x740>)
 8000f4c:	f7ff fc84 	bl	8000858 <HLCD_VidWriteString>
													MUSART1_VidSendCharSync('6');
 8000f50:	2036      	movs	r0, #54	; 0x36
 8000f52:	f7ff fdab 	bl	8000aac <MUSART1_VidSendCharSync>
													HKEYPAD_VidDelay();
 8000f56:	f7ff fad1 	bl	80004fc <HKEYPAD_VidDelay>
													HKEYPAD_VidDelay();
 8000f5a:	f7ff facf 	bl	80004fc <HKEYPAD_VidDelay>
													if(first==0){
 8000f5e:	e77b      	b.n	8000e58 <main+0x360>
						if(first==0){
 8000f60:	e662      	b.n	8000c28 <main+0x130>
											}


					}
				}
			else if(room=='2'){
 8000f62:	797b      	ldrb	r3, [r7, #5]
 8000f64:	2b32      	cmp	r3, #50	; 0x32
 8000f66:	f040 8196 	bne.w	8001296 <main+0x79e>
							room=6;
 8000f6a:	2306      	movs	r3, #6
 8000f6c:	717b      	strb	r3, [r7, #5]
							first=0;
 8000f6e:	2300      	movs	r3, #0
 8000f70:	71fb      	strb	r3, [r7, #7]
							HLCD_VidClearScreen();
 8000f72:	f7ff fc86 	bl	8000882 <HLCD_VidClearScreen>
						while(1){
									if(first==0){
 8000f76:	79fb      	ldrb	r3, [r7, #7]
 8000f78:	2b00      	cmp	r3, #0
 8000f7a:	d11b      	bne.n	8000fb4 <main+0x4bc>
									//room=0;
									HLCD_VidClearScreen();
 8000f7c:	f7ff fc81 	bl	8000882 <HLCD_VidClearScreen>
									HLCD_VidWriteString("Welcome Room2:");
 8000f80:	48af      	ldr	r0, [pc, #700]	; (8001240 <main+0x748>)
 8000f82:	f7ff fc69 	bl	8000858 <HLCD_VidWriteString>
									HLCD_VidShift(15,1);
 8000f86:	2101      	movs	r1, #1
 8000f88:	200f      	movs	r0, #15
 8000f8a:	f7ff fc84 	bl	8000896 <HLCD_VidShift>
												HLCD_VidWriteString("<-");
 8000f8e:	48a9      	ldr	r0, [pc, #676]	; (8001234 <main+0x73c>)
 8000f90:	f7ff fc62 	bl	8000858 <HLCD_VidWriteString>
												HLCD_VidShift(16,2);
 8000f94:	2102      	movs	r1, #2
 8000f96:	2010      	movs	r0, #16
 8000f98:	f7ff fc7d 	bl	8000896 <HLCD_VidShift>
												HLCD_VidWriteString("5");
 8000f9c:	48a6      	ldr	r0, [pc, #664]	; (8001238 <main+0x740>)
 8000f9e:	f7ff fc5b 	bl	8000858 <HLCD_VidWriteString>
									HLCD_VidShift(1,2);
 8000fa2:	2102      	movs	r1, #2
 8000fa4:	2001      	movs	r0, #1
 8000fa6:	f7ff fc76 	bl	8000896 <HLCD_VidShift>
									HLCD_VidWriteString("LI1/AIR2/TV3:");
 8000faa:	48a6      	ldr	r0, [pc, #664]	; (8001244 <main+0x74c>)
 8000fac:	f7ff fc54 	bl	8000858 <HLCD_VidWriteString>
									first=1;
 8000fb0:	2301      	movs	r3, #1
 8000fb2:	71fb      	strb	r3, [r7, #7]
									}
									HKEYPAD_VidDelay();
 8000fb4:	f7ff faa2 	bl	80004fc <HKEYPAD_VidDelay>
									HKEYPAD_VidDelay();
 8000fb8:	f7ff faa0 	bl	80004fc <HKEYPAD_VidDelay>
									control=HkEYPAD_u8GetPress();
 8000fbc:	f7ff fb0e 	bl	80005dc <HkEYPAD_u8GetPress>
 8000fc0:	4603      	mov	r3, r0
 8000fc2:	713b      	strb	r3, [r7, #4]
									if(control=='5'){first=0;	control=6; break;}
 8000fc4:	793b      	ldrb	r3, [r7, #4]
 8000fc6:	2b35      	cmp	r3, #53	; 0x35
 8000fc8:	d105      	bne.n	8000fd6 <main+0x4de>
 8000fca:	2300      	movs	r3, #0
 8000fcc:	71fb      	strb	r3, [r7, #7]
 8000fce:	2306      	movs	r3, #6
 8000fd0:	713b      	strb	r3, [r7, #4]
 8000fd2:	f000 bc7f 	b.w	80018d4 <main+0xddc>
									else if(control=='1'){
 8000fd6:	793b      	ldrb	r3, [r7, #4]
 8000fd8:	2b31      	cmp	r3, #49	; 0x31
 8000fda:	d16d      	bne.n	80010b8 <main+0x5c0>
										control=6;
 8000fdc:	2306      	movs	r3, #6
 8000fde:	713b      	strb	r3, [r7, #4]
										first=0;
 8000fe0:	2300      	movs	r3, #0
 8000fe2:	71fb      	strb	r3, [r7, #7]
										HLCD_VidClearScreen();
 8000fe4:	f7ff fc4d 	bl	8000882 <HLCD_VidClearScreen>
									while(1){

											if(first==0){
 8000fe8:	79fb      	ldrb	r3, [r7, #7]
 8000fea:	2b00      	cmp	r3, #0
 8000fec:	d114      	bne.n	8001018 <main+0x520>
											//control=0;
												HLCD_VidClearScreen();
 8000fee:	f7ff fc48 	bl	8000882 <HLCD_VidClearScreen>
											HLCD_VidWriteString("LI-ON1/OFF0:");
 8000ff2:	4895      	ldr	r0, [pc, #596]	; (8001248 <main+0x750>)
 8000ff4:	f7ff fc30 	bl	8000858 <HLCD_VidWriteString>
											HLCD_VidShift(15,1);
 8000ff8:	2101      	movs	r1, #1
 8000ffa:	200f      	movs	r0, #15
 8000ffc:	f7ff fc4b 	bl	8000896 <HLCD_VidShift>
														HLCD_VidWriteString("<-");
 8001000:	488c      	ldr	r0, [pc, #560]	; (8001234 <main+0x73c>)
 8001002:	f7ff fc29 	bl	8000858 <HLCD_VidWriteString>
														HLCD_VidShift(16,2);
 8001006:	2102      	movs	r1, #2
 8001008:	2010      	movs	r0, #16
 800100a:	f7ff fc44 	bl	8000896 <HLCD_VidShift>
														HLCD_VidWriteString("5");
 800100e:	488a      	ldr	r0, [pc, #552]	; (8001238 <main+0x740>)
 8001010:	f7ff fc22 	bl	8000858 <HLCD_VidWriteString>
											first=1;
 8001014:	2301      	movs	r3, #1
 8001016:	71fb      	strb	r3, [r7, #7]
											}
											HKEYPAD_VidDelay();
 8001018:	f7ff fa70 	bl	80004fc <HKEYPAD_VidDelay>
											HKEYPAD_VidDelay();
 800101c:	f7ff fa6e 	bl	80004fc <HKEYPAD_VidDelay>
											on_off=HkEYPAD_u8GetPress();
 8001020:	f7ff fadc 	bl	80005dc <HkEYPAD_u8GetPress>
 8001024:	4603      	mov	r3, r0
 8001026:	70fb      	strb	r3, [r7, #3]
											 if(on_off=='5'){first=0;on_off=6; break;}
 8001028:	78fb      	ldrb	r3, [r7, #3]
 800102a:	2b35      	cmp	r3, #53	; 0x35
 800102c:	d104      	bne.n	8001038 <main+0x540>
 800102e:	2300      	movs	r3, #0
 8001030:	71fb      	strb	r3, [r7, #7]
 8001032:	2306      	movs	r3, #6
 8001034:	70fb      	strb	r3, [r7, #3]
 8001036:	e12d      	b.n	8001294 <main+0x79c>
											 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8001038:	78fb      	ldrb	r3, [r7, #3]
 800103a:	2b31      	cmp	r3, #49	; 0x31
 800103c:	d11c      	bne.n	8001078 <main+0x580>
 800103e:	2306      	movs	r3, #6
 8001040:	70fb      	strb	r3, [r7, #3]
 8001042:	f7ff fc1e 	bl	8000882 <HLCD_VidClearScreen>
 8001046:	487a      	ldr	r0, [pc, #488]	; (8001230 <main+0x738>)
 8001048:	f7ff fc06 	bl	8000858 <HLCD_VidWriteString>
											 HLCD_VidShift(15,1);
 800104c:	2101      	movs	r1, #1
 800104e:	200f      	movs	r0, #15
 8001050:	f7ff fc21 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("<-");
 8001054:	4877      	ldr	r0, [pc, #476]	; (8001234 <main+0x73c>)
 8001056:	f7ff fbff 	bl	8000858 <HLCD_VidWriteString>
											 			HLCD_VidShift(16,2);
 800105a:	2102      	movs	r1, #2
 800105c:	2010      	movs	r0, #16
 800105e:	f7ff fc1a 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("5");
 8001062:	4875      	ldr	r0, [pc, #468]	; (8001238 <main+0x740>)
 8001064:	f7ff fbf8 	bl	8000858 <HLCD_VidWriteString>
											  MUSART1_VidSendCharSync('1');
 8001068:	2031      	movs	r0, #49	; 0x31
 800106a:	f7ff fd1f 	bl	8000aac <MUSART1_VidSendCharSync>
											 HKEYPAD_VidDelay();
 800106e:	f7ff fa45 	bl	80004fc <HKEYPAD_VidDelay>
											HKEYPAD_VidDelay();
 8001072:	f7ff fa43 	bl	80004fc <HKEYPAD_VidDelay>
 8001076:	e7b7      	b.n	8000fe8 <main+0x4f0>
																		}
											 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8001078:	78fb      	ldrb	r3, [r7, #3]
 800107a:	2b30      	cmp	r3, #48	; 0x30
 800107c:	d1b4      	bne.n	8000fe8 <main+0x4f0>
 800107e:	2306      	movs	r3, #6
 8001080:	70fb      	strb	r3, [r7, #3]
 8001082:	f7ff fbfe 	bl	8000882 <HLCD_VidClearScreen>
 8001086:	486d      	ldr	r0, [pc, #436]	; (800123c <main+0x744>)
 8001088:	f7ff fbe6 	bl	8000858 <HLCD_VidWriteString>
											 HLCD_VidShift(15,1);
 800108c:	2101      	movs	r1, #1
 800108e:	200f      	movs	r0, #15
 8001090:	f7ff fc01 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("<-");
 8001094:	4867      	ldr	r0, [pc, #412]	; (8001234 <main+0x73c>)
 8001096:	f7ff fbdf 	bl	8000858 <HLCD_VidWriteString>
											 			HLCD_VidShift(16,2);
 800109a:	2102      	movs	r1, #2
 800109c:	2010      	movs	r0, #16
 800109e:	f7ff fbfa 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("5");
 80010a2:	4865      	ldr	r0, [pc, #404]	; (8001238 <main+0x740>)
 80010a4:	f7ff fbd8 	bl	8000858 <HLCD_VidWriteString>
											MUSART1_VidSendCharSync('0');
 80010a8:	2030      	movs	r0, #48	; 0x30
 80010aa:	f7ff fcff 	bl	8000aac <MUSART1_VidSendCharSync>
											HKEYPAD_VidDelay();
 80010ae:	f7ff fa25 	bl	80004fc <HKEYPAD_VidDelay>
											HKEYPAD_VidDelay();
 80010b2:	f7ff fa23 	bl	80004fc <HKEYPAD_VidDelay>
											if(first==0){
 80010b6:	e797      	b.n	8000fe8 <main+0x4f0>
																	}

										}
									}
									else if(control=='2'){
 80010b8:	793b      	ldrb	r3, [r7, #4]
 80010ba:	2b32      	cmp	r3, #50	; 0x32
 80010bc:	d169      	bne.n	8001192 <main+0x69a>
															control=6;
 80010be:	2306      	movs	r3, #6
 80010c0:	713b      	strb	r3, [r7, #4]
															first=0;
 80010c2:	2300      	movs	r3, #0
 80010c4:	71fb      	strb	r3, [r7, #7]
															HLCD_VidClearScreen();
 80010c6:	f7ff fbdc 	bl	8000882 <HLCD_VidClearScreen>
														while(1){

																if(first==0){
 80010ca:	79fb      	ldrb	r3, [r7, #7]
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d112      	bne.n	80010f6 <main+0x5fe>
																//control=0;
																HLCD_VidWriteString("AIR ON1/OFF0:");
 80010d0:	485e      	ldr	r0, [pc, #376]	; (800124c <main+0x754>)
 80010d2:	f7ff fbc1 	bl	8000858 <HLCD_VidWriteString>
																HLCD_VidShift(15,1);
 80010d6:	2101      	movs	r1, #1
 80010d8:	200f      	movs	r0, #15
 80010da:	f7ff fbdc 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("<-");
 80010de:	4855      	ldr	r0, [pc, #340]	; (8001234 <main+0x73c>)
 80010e0:	f7ff fbba 	bl	8000858 <HLCD_VidWriteString>
																			HLCD_VidShift(16,2);
 80010e4:	2102      	movs	r1, #2
 80010e6:	2010      	movs	r0, #16
 80010e8:	f7ff fbd5 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("5");
 80010ec:	4852      	ldr	r0, [pc, #328]	; (8001238 <main+0x740>)
 80010ee:	f7ff fbb3 	bl	8000858 <HLCD_VidWriteString>
																first=1;
 80010f2:	2301      	movs	r3, #1
 80010f4:	71fb      	strb	r3, [r7, #7]
																}
																HKEYPAD_VidDelay();
 80010f6:	f7ff fa01 	bl	80004fc <HKEYPAD_VidDelay>
																on_off=HkEYPAD_u8GetPress();
 80010fa:	f7ff fa6f 	bl	80005dc <HkEYPAD_u8GetPress>
 80010fe:	4603      	mov	r3, r0
 8001100:	70fb      	strb	r3, [r7, #3]
																 if(on_off=='5'){first=0;on_off=6; break;}
 8001102:	78fb      	ldrb	r3, [r7, #3]
 8001104:	2b35      	cmp	r3, #53	; 0x35
 8001106:	d104      	bne.n	8001112 <main+0x61a>
 8001108:	2300      	movs	r3, #0
 800110a:	71fb      	strb	r3, [r7, #7]
 800110c:	2306      	movs	r3, #6
 800110e:	70fb      	strb	r3, [r7, #3]
 8001110:	e0c0      	b.n	8001294 <main+0x79c>
																 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8001112:	78fb      	ldrb	r3, [r7, #3]
 8001114:	2b31      	cmp	r3, #49	; 0x31
 8001116:	d11c      	bne.n	8001152 <main+0x65a>
 8001118:	2306      	movs	r3, #6
 800111a:	70fb      	strb	r3, [r7, #3]
 800111c:	f7ff fbb1 	bl	8000882 <HLCD_VidClearScreen>
 8001120:	4843      	ldr	r0, [pc, #268]	; (8001230 <main+0x738>)
 8001122:	f7ff fb99 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 8001126:	2101      	movs	r1, #1
 8001128:	200f      	movs	r0, #15
 800112a:	f7ff fbb4 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 800112e:	4841      	ldr	r0, [pc, #260]	; (8001234 <main+0x73c>)
 8001130:	f7ff fb92 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 8001134:	2102      	movs	r1, #2
 8001136:	2010      	movs	r0, #16
 8001138:	f7ff fbad 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 800113c:	483e      	ldr	r0, [pc, #248]	; (8001238 <main+0x740>)
 800113e:	f7ff fb8b 	bl	8000858 <HLCD_VidWriteString>
																  MUSART1_VidSendCharSync('3');
 8001142:	2033      	movs	r0, #51	; 0x33
 8001144:	f7ff fcb2 	bl	8000aac <MUSART1_VidSendCharSync>
																 HKEYPAD_VidDelay();
 8001148:	f7ff f9d8 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 800114c:	f7ff f9d6 	bl	80004fc <HKEYPAD_VidDelay>
 8001150:	e7bb      	b.n	80010ca <main+0x5d2>
																							}
																 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8001152:	78fb      	ldrb	r3, [r7, #3]
 8001154:	2b30      	cmp	r3, #48	; 0x30
 8001156:	d1b8      	bne.n	80010ca <main+0x5d2>
 8001158:	2306      	movs	r3, #6
 800115a:	70fb      	strb	r3, [r7, #3]
 800115c:	f7ff fb91 	bl	8000882 <HLCD_VidClearScreen>
 8001160:	4836      	ldr	r0, [pc, #216]	; (800123c <main+0x744>)
 8001162:	f7ff fb79 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 8001166:	2101      	movs	r1, #1
 8001168:	200f      	movs	r0, #15
 800116a:	f7ff fb94 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 800116e:	4831      	ldr	r0, [pc, #196]	; (8001234 <main+0x73c>)
 8001170:	f7ff fb72 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 8001174:	2102      	movs	r1, #2
 8001176:	2010      	movs	r0, #16
 8001178:	f7ff fb8d 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 800117c:	482e      	ldr	r0, [pc, #184]	; (8001238 <main+0x740>)
 800117e:	f7ff fb6b 	bl	8000858 <HLCD_VidWriteString>
																MUSART1_VidSendCharSync('4');
 8001182:	2034      	movs	r0, #52	; 0x34
 8001184:	f7ff fc92 	bl	8000aac <MUSART1_VidSendCharSync>
																HKEYPAD_VidDelay();
 8001188:	f7ff f9b8 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 800118c:	f7ff f9b6 	bl	80004fc <HKEYPAD_VidDelay>
																if(first==0){
 8001190:	e79b      	b.n	80010ca <main+0x5d2>
																						}

															}
														}
									else if(control=='3'){
 8001192:	793b      	ldrb	r3, [r7, #4]
 8001194:	2b33      	cmp	r3, #51	; 0x33
 8001196:	f47f aeee 	bne.w	8000f76 <main+0x47e>
															control=6;
 800119a:	2306      	movs	r3, #6
 800119c:	713b      	strb	r3, [r7, #4]
															first=0;
 800119e:	2300      	movs	r3, #0
 80011a0:	71fb      	strb	r3, [r7, #7]
															HLCD_VidClearScreen();
 80011a2:	f7ff fb6e 	bl	8000882 <HLCD_VidClearScreen>
														while(1){

																if(first==0){
 80011a6:	79fb      	ldrb	r3, [r7, #7]
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d112      	bne.n	80011d2 <main+0x6da>
																//control=0;
																HLCD_VidWriteString("TV-ON1/OFF0:");
 80011ac:	4828      	ldr	r0, [pc, #160]	; (8001250 <main+0x758>)
 80011ae:	f7ff fb53 	bl	8000858 <HLCD_VidWriteString>
																HLCD_VidShift(15,1);
 80011b2:	2101      	movs	r1, #1
 80011b4:	200f      	movs	r0, #15
 80011b6:	f7ff fb6e 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("<-");
 80011ba:	481e      	ldr	r0, [pc, #120]	; (8001234 <main+0x73c>)
 80011bc:	f7ff fb4c 	bl	8000858 <HLCD_VidWriteString>
																			HLCD_VidShift(16,2);
 80011c0:	2102      	movs	r1, #2
 80011c2:	2010      	movs	r0, #16
 80011c4:	f7ff fb67 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("5");
 80011c8:	481b      	ldr	r0, [pc, #108]	; (8001238 <main+0x740>)
 80011ca:	f7ff fb45 	bl	8000858 <HLCD_VidWriteString>
																first=1;
 80011ce:	2301      	movs	r3, #1
 80011d0:	71fb      	strb	r3, [r7, #7]
																}
																HKEYPAD_VidDelay();
 80011d2:	f7ff f993 	bl	80004fc <HKEYPAD_VidDelay>
																on_off=HkEYPAD_u8GetPress();
 80011d6:	f7ff fa01 	bl	80005dc <HkEYPAD_u8GetPress>
 80011da:	4603      	mov	r3, r0
 80011dc:	70fb      	strb	r3, [r7, #3]
																 if(on_off=='5'){first=0;on_off=6; break;}
 80011de:	78fb      	ldrb	r3, [r7, #3]
 80011e0:	2b35      	cmp	r3, #53	; 0x35
 80011e2:	d104      	bne.n	80011ee <main+0x6f6>
 80011e4:	2300      	movs	r3, #0
 80011e6:	71fb      	strb	r3, [r7, #7]
 80011e8:	2306      	movs	r3, #6
 80011ea:	70fb      	strb	r3, [r7, #3]
 80011ec:	e052      	b.n	8001294 <main+0x79c>
																 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 80011ee:	78fb      	ldrb	r3, [r7, #3]
 80011f0:	2b31      	cmp	r3, #49	; 0x31
 80011f2:	d12f      	bne.n	8001254 <main+0x75c>
 80011f4:	2306      	movs	r3, #6
 80011f6:	70fb      	strb	r3, [r7, #3]
 80011f8:	f7ff fb43 	bl	8000882 <HLCD_VidClearScreen>
 80011fc:	480c      	ldr	r0, [pc, #48]	; (8001230 <main+0x738>)
 80011fe:	f7ff fb2b 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 8001202:	2101      	movs	r1, #1
 8001204:	200f      	movs	r0, #15
 8001206:	f7ff fb46 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 800120a:	480a      	ldr	r0, [pc, #40]	; (8001234 <main+0x73c>)
 800120c:	f7ff fb24 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 8001210:	2102      	movs	r1, #2
 8001212:	2010      	movs	r0, #16
 8001214:	f7ff fb3f 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 8001218:	4807      	ldr	r0, [pc, #28]	; (8001238 <main+0x740>)
 800121a:	f7ff fb1d 	bl	8000858 <HLCD_VidWriteString>
																  MUSART1_VidSendCharSync('5');
 800121e:	2035      	movs	r0, #53	; 0x35
 8001220:	f7ff fc44 	bl	8000aac <MUSART1_VidSendCharSync>
																 HKEYPAD_VidDelay();
 8001224:	f7ff f96a 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 8001228:	f7ff f968 	bl	80004fc <HKEYPAD_VidDelay>
 800122c:	e7bb      	b.n	80011a6 <main+0x6ae>
 800122e:	bf00      	nop
 8001230:	08002244 	.word	0x08002244
 8001234:	080021fc 	.word	0x080021fc
 8001238:	08002200 	.word	0x08002200
 800123c:	08002248 	.word	0x08002248
 8001240:	0800226c 	.word	0x0800226c
 8001244:	08002224 	.word	0x08002224
 8001248:	08002234 	.word	0x08002234
 800124c:	0800224c 	.word	0x0800224c
 8001250:	0800225c 	.word	0x0800225c
																							}
																 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8001254:	78fb      	ldrb	r3, [r7, #3]
 8001256:	2b30      	cmp	r3, #48	; 0x30
 8001258:	d1a5      	bne.n	80011a6 <main+0x6ae>
 800125a:	2306      	movs	r3, #6
 800125c:	70fb      	strb	r3, [r7, #3]
 800125e:	f7ff fb10 	bl	8000882 <HLCD_VidClearScreen>
 8001262:	48d0      	ldr	r0, [pc, #832]	; (80015a4 <main+0xaac>)
 8001264:	f7ff faf8 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 8001268:	2101      	movs	r1, #1
 800126a:	200f      	movs	r0, #15
 800126c:	f7ff fb13 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 8001270:	48cd      	ldr	r0, [pc, #820]	; (80015a8 <main+0xab0>)
 8001272:	f7ff faf1 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 8001276:	2102      	movs	r1, #2
 8001278:	2010      	movs	r0, #16
 800127a:	f7ff fb0c 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 800127e:	48cb      	ldr	r0, [pc, #812]	; (80015ac <main+0xab4>)
 8001280:	f7ff faea 	bl	8000858 <HLCD_VidWriteString>
																MUSART1_VidSendCharSync('6');
 8001284:	2036      	movs	r0, #54	; 0x36
 8001286:	f7ff fc11 	bl	8000aac <MUSART1_VidSendCharSync>
																HKEYPAD_VidDelay();
 800128a:	f7ff f937 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 800128e:	f7ff f935 	bl	80004fc <HKEYPAD_VidDelay>
																if(first==0){
 8001292:	e788      	b.n	80011a6 <main+0x6ae>
									if(first==0){
 8001294:	e66f      	b.n	8000f76 <main+0x47e>
														}


								}
							}
			else if(room=='3'){
 8001296:	797b      	ldrb	r3, [r7, #5]
 8001298:	2b33      	cmp	r3, #51	; 0x33
 800129a:	f040 8195 	bne.w	80015c8 <main+0xad0>
							room=6;
 800129e:	2306      	movs	r3, #6
 80012a0:	717b      	strb	r3, [r7, #5]
							first=0;
 80012a2:	2300      	movs	r3, #0
 80012a4:	71fb      	strb	r3, [r7, #7]
							HLCD_VidClearScreen();
 80012a6:	f7ff faec 	bl	8000882 <HLCD_VidClearScreen>
						while(1){
									if(first==0){
 80012aa:	79fb      	ldrb	r3, [r7, #7]
 80012ac:	2b00      	cmp	r3, #0
 80012ae:	d11b      	bne.n	80012e8 <main+0x7f0>
									//room=0;
									HLCD_VidClearScreen();
 80012b0:	f7ff fae7 	bl	8000882 <HLCD_VidClearScreen>
									HLCD_VidWriteString("Welcome Room3:");
 80012b4:	48be      	ldr	r0, [pc, #760]	; (80015b0 <main+0xab8>)
 80012b6:	f7ff facf 	bl	8000858 <HLCD_VidWriteString>
									HLCD_VidShift(15,1);
 80012ba:	2101      	movs	r1, #1
 80012bc:	200f      	movs	r0, #15
 80012be:	f7ff faea 	bl	8000896 <HLCD_VidShift>
												HLCD_VidWriteString("<-");
 80012c2:	48b9      	ldr	r0, [pc, #740]	; (80015a8 <main+0xab0>)
 80012c4:	f7ff fac8 	bl	8000858 <HLCD_VidWriteString>
												HLCD_VidShift(16,2);
 80012c8:	2102      	movs	r1, #2
 80012ca:	2010      	movs	r0, #16
 80012cc:	f7ff fae3 	bl	8000896 <HLCD_VidShift>
												HLCD_VidWriteString("5");
 80012d0:	48b6      	ldr	r0, [pc, #728]	; (80015ac <main+0xab4>)
 80012d2:	f7ff fac1 	bl	8000858 <HLCD_VidWriteString>
									HLCD_VidShift(1,2);
 80012d6:	2102      	movs	r1, #2
 80012d8:	2001      	movs	r0, #1
 80012da:	f7ff fadc 	bl	8000896 <HLCD_VidShift>
									HLCD_VidWriteString("LI1/AIR2/TV3:");
 80012de:	48b5      	ldr	r0, [pc, #724]	; (80015b4 <main+0xabc>)
 80012e0:	f7ff faba 	bl	8000858 <HLCD_VidWriteString>
									first=1;
 80012e4:	2301      	movs	r3, #1
 80012e6:	71fb      	strb	r3, [r7, #7]
									}
									HKEYPAD_VidDelay();
 80012e8:	f7ff f908 	bl	80004fc <HKEYPAD_VidDelay>
									HKEYPAD_VidDelay();
 80012ec:	f7ff f906 	bl	80004fc <HKEYPAD_VidDelay>
									control=HkEYPAD_u8GetPress();
 80012f0:	f7ff f974 	bl	80005dc <HkEYPAD_u8GetPress>
 80012f4:	4603      	mov	r3, r0
 80012f6:	713b      	strb	r3, [r7, #4]
									if(control=='5'){first=0;	control=6; break;}
 80012f8:	793b      	ldrb	r3, [r7, #4]
 80012fa:	2b35      	cmp	r3, #53	; 0x35
 80012fc:	d104      	bne.n	8001308 <main+0x810>
 80012fe:	2300      	movs	r3, #0
 8001300:	71fb      	strb	r3, [r7, #7]
 8001302:	2306      	movs	r3, #6
 8001304:	713b      	strb	r3, [r7, #4]
 8001306:	e2e5      	b.n	80018d4 <main+0xddc>
									else if(control=='1'){
 8001308:	793b      	ldrb	r3, [r7, #4]
 800130a:	2b31      	cmp	r3, #49	; 0x31
 800130c:	d16d      	bne.n	80013ea <main+0x8f2>
										control=6;
 800130e:	2306      	movs	r3, #6
 8001310:	713b      	strb	r3, [r7, #4]
										first=0;
 8001312:	2300      	movs	r3, #0
 8001314:	71fb      	strb	r3, [r7, #7]
										HLCD_VidClearScreen();
 8001316:	f7ff fab4 	bl	8000882 <HLCD_VidClearScreen>
									while(1){

											if(first==0){
 800131a:	79fb      	ldrb	r3, [r7, #7]
 800131c:	2b00      	cmp	r3, #0
 800131e:	d114      	bne.n	800134a <main+0x852>
											//control=0;
												HLCD_VidClearScreen();
 8001320:	f7ff faaf 	bl	8000882 <HLCD_VidClearScreen>
											HLCD_VidWriteString("LI-ON1/OFF0:");
 8001324:	48a4      	ldr	r0, [pc, #656]	; (80015b8 <main+0xac0>)
 8001326:	f7ff fa97 	bl	8000858 <HLCD_VidWriteString>
											HLCD_VidShift(15,1);
 800132a:	2101      	movs	r1, #1
 800132c:	200f      	movs	r0, #15
 800132e:	f7ff fab2 	bl	8000896 <HLCD_VidShift>
														HLCD_VidWriteString("<-");
 8001332:	489d      	ldr	r0, [pc, #628]	; (80015a8 <main+0xab0>)
 8001334:	f7ff fa90 	bl	8000858 <HLCD_VidWriteString>
														HLCD_VidShift(16,2);
 8001338:	2102      	movs	r1, #2
 800133a:	2010      	movs	r0, #16
 800133c:	f7ff faab 	bl	8000896 <HLCD_VidShift>
														HLCD_VidWriteString("5");
 8001340:	489a      	ldr	r0, [pc, #616]	; (80015ac <main+0xab4>)
 8001342:	f7ff fa89 	bl	8000858 <HLCD_VidWriteString>
											first=1;
 8001346:	2301      	movs	r3, #1
 8001348:	71fb      	strb	r3, [r7, #7]
											}
											HKEYPAD_VidDelay();
 800134a:	f7ff f8d7 	bl	80004fc <HKEYPAD_VidDelay>
											HKEYPAD_VidDelay();
 800134e:	f7ff f8d5 	bl	80004fc <HKEYPAD_VidDelay>
											on_off=HkEYPAD_u8GetPress();
 8001352:	f7ff f943 	bl	80005dc <HkEYPAD_u8GetPress>
 8001356:	4603      	mov	r3, r0
 8001358:	70fb      	strb	r3, [r7, #3]
											 if(on_off=='5'){first=0;on_off=6; break;}
 800135a:	78fb      	ldrb	r3, [r7, #3]
 800135c:	2b35      	cmp	r3, #53	; 0x35
 800135e:	d104      	bne.n	800136a <main+0x872>
 8001360:	2300      	movs	r3, #0
 8001362:	71fb      	strb	r3, [r7, #7]
 8001364:	2306      	movs	r3, #6
 8001366:	70fb      	strb	r3, [r7, #3]
 8001368:	e11a      	b.n	80015a0 <main+0xaa8>
											 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 800136a:	78fb      	ldrb	r3, [r7, #3]
 800136c:	2b31      	cmp	r3, #49	; 0x31
 800136e:	d11c      	bne.n	80013aa <main+0x8b2>
 8001370:	2306      	movs	r3, #6
 8001372:	70fb      	strb	r3, [r7, #3]
 8001374:	f7ff fa85 	bl	8000882 <HLCD_VidClearScreen>
 8001378:	4890      	ldr	r0, [pc, #576]	; (80015bc <main+0xac4>)
 800137a:	f7ff fa6d 	bl	8000858 <HLCD_VidWriteString>
											 HLCD_VidShift(15,1);
 800137e:	2101      	movs	r1, #1
 8001380:	200f      	movs	r0, #15
 8001382:	f7ff fa88 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("<-");
 8001386:	4888      	ldr	r0, [pc, #544]	; (80015a8 <main+0xab0>)
 8001388:	f7ff fa66 	bl	8000858 <HLCD_VidWriteString>
											 			HLCD_VidShift(16,2);
 800138c:	2102      	movs	r1, #2
 800138e:	2010      	movs	r0, #16
 8001390:	f7ff fa81 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("5");
 8001394:	4885      	ldr	r0, [pc, #532]	; (80015ac <main+0xab4>)
 8001396:	f7ff fa5f 	bl	8000858 <HLCD_VidWriteString>
											  MUSART1_VidSendCharSync('1');
 800139a:	2031      	movs	r0, #49	; 0x31
 800139c:	f7ff fb86 	bl	8000aac <MUSART1_VidSendCharSync>
											 HKEYPAD_VidDelay();
 80013a0:	f7ff f8ac 	bl	80004fc <HKEYPAD_VidDelay>
											HKEYPAD_VidDelay();
 80013a4:	f7ff f8aa 	bl	80004fc <HKEYPAD_VidDelay>
 80013a8:	e7b7      	b.n	800131a <main+0x822>
																		}
											 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 80013aa:	78fb      	ldrb	r3, [r7, #3]
 80013ac:	2b30      	cmp	r3, #48	; 0x30
 80013ae:	d1b4      	bne.n	800131a <main+0x822>
 80013b0:	2306      	movs	r3, #6
 80013b2:	70fb      	strb	r3, [r7, #3]
 80013b4:	f7ff fa65 	bl	8000882 <HLCD_VidClearScreen>
 80013b8:	487a      	ldr	r0, [pc, #488]	; (80015a4 <main+0xaac>)
 80013ba:	f7ff fa4d 	bl	8000858 <HLCD_VidWriteString>
											 HLCD_VidShift(15,1);
 80013be:	2101      	movs	r1, #1
 80013c0:	200f      	movs	r0, #15
 80013c2:	f7ff fa68 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("<-");
 80013c6:	4878      	ldr	r0, [pc, #480]	; (80015a8 <main+0xab0>)
 80013c8:	f7ff fa46 	bl	8000858 <HLCD_VidWriteString>
											 			HLCD_VidShift(16,2);
 80013cc:	2102      	movs	r1, #2
 80013ce:	2010      	movs	r0, #16
 80013d0:	f7ff fa61 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("5");
 80013d4:	4875      	ldr	r0, [pc, #468]	; (80015ac <main+0xab4>)
 80013d6:	f7ff fa3f 	bl	8000858 <HLCD_VidWriteString>
											MUSART1_VidSendCharSync('0');
 80013da:	2030      	movs	r0, #48	; 0x30
 80013dc:	f7ff fb66 	bl	8000aac <MUSART1_VidSendCharSync>
											HKEYPAD_VidDelay();
 80013e0:	f7ff f88c 	bl	80004fc <HKEYPAD_VidDelay>
											HKEYPAD_VidDelay();
 80013e4:	f7ff f88a 	bl	80004fc <HKEYPAD_VidDelay>
											if(first==0){
 80013e8:	e797      	b.n	800131a <main+0x822>
																	}

										}
									}
									else if(control=='2'){
 80013ea:	793b      	ldrb	r3, [r7, #4]
 80013ec:	2b32      	cmp	r3, #50	; 0x32
 80013ee:	d169      	bne.n	80014c4 <main+0x9cc>
															control=6;
 80013f0:	2306      	movs	r3, #6
 80013f2:	713b      	strb	r3, [r7, #4]
															first=0;
 80013f4:	2300      	movs	r3, #0
 80013f6:	71fb      	strb	r3, [r7, #7]
															HLCD_VidClearScreen();
 80013f8:	f7ff fa43 	bl	8000882 <HLCD_VidClearScreen>
														while(1){

																if(first==0){
 80013fc:	79fb      	ldrb	r3, [r7, #7]
 80013fe:	2b00      	cmp	r3, #0
 8001400:	d112      	bne.n	8001428 <main+0x930>
																//control=0;
																HLCD_VidWriteString("AIR ON1/OFF0:");
 8001402:	486f      	ldr	r0, [pc, #444]	; (80015c0 <main+0xac8>)
 8001404:	f7ff fa28 	bl	8000858 <HLCD_VidWriteString>
																HLCD_VidShift(15,1);
 8001408:	2101      	movs	r1, #1
 800140a:	200f      	movs	r0, #15
 800140c:	f7ff fa43 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("<-");
 8001410:	4865      	ldr	r0, [pc, #404]	; (80015a8 <main+0xab0>)
 8001412:	f7ff fa21 	bl	8000858 <HLCD_VidWriteString>
																			HLCD_VidShift(16,2);
 8001416:	2102      	movs	r1, #2
 8001418:	2010      	movs	r0, #16
 800141a:	f7ff fa3c 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("5");
 800141e:	4863      	ldr	r0, [pc, #396]	; (80015ac <main+0xab4>)
 8001420:	f7ff fa1a 	bl	8000858 <HLCD_VidWriteString>
																first=1;
 8001424:	2301      	movs	r3, #1
 8001426:	71fb      	strb	r3, [r7, #7]
																}
																HKEYPAD_VidDelay();
 8001428:	f7ff f868 	bl	80004fc <HKEYPAD_VidDelay>
																on_off=HkEYPAD_u8GetPress();
 800142c:	f7ff f8d6 	bl	80005dc <HkEYPAD_u8GetPress>
 8001430:	4603      	mov	r3, r0
 8001432:	70fb      	strb	r3, [r7, #3]
																 if(on_off=='5'){first=0;on_off=6; break;}
 8001434:	78fb      	ldrb	r3, [r7, #3]
 8001436:	2b35      	cmp	r3, #53	; 0x35
 8001438:	d104      	bne.n	8001444 <main+0x94c>
 800143a:	2300      	movs	r3, #0
 800143c:	71fb      	strb	r3, [r7, #7]
 800143e:	2306      	movs	r3, #6
 8001440:	70fb      	strb	r3, [r7, #3]
 8001442:	e0ad      	b.n	80015a0 <main+0xaa8>
																 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8001444:	78fb      	ldrb	r3, [r7, #3]
 8001446:	2b31      	cmp	r3, #49	; 0x31
 8001448:	d11c      	bne.n	8001484 <main+0x98c>
 800144a:	2306      	movs	r3, #6
 800144c:	70fb      	strb	r3, [r7, #3]
 800144e:	f7ff fa18 	bl	8000882 <HLCD_VidClearScreen>
 8001452:	485a      	ldr	r0, [pc, #360]	; (80015bc <main+0xac4>)
 8001454:	f7ff fa00 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 8001458:	2101      	movs	r1, #1
 800145a:	200f      	movs	r0, #15
 800145c:	f7ff fa1b 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 8001460:	4851      	ldr	r0, [pc, #324]	; (80015a8 <main+0xab0>)
 8001462:	f7ff f9f9 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 8001466:	2102      	movs	r1, #2
 8001468:	2010      	movs	r0, #16
 800146a:	f7ff fa14 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 800146e:	484f      	ldr	r0, [pc, #316]	; (80015ac <main+0xab4>)
 8001470:	f7ff f9f2 	bl	8000858 <HLCD_VidWriteString>
																  MUSART1_VidSendCharSync('3');
 8001474:	2033      	movs	r0, #51	; 0x33
 8001476:	f7ff fb19 	bl	8000aac <MUSART1_VidSendCharSync>
																 HKEYPAD_VidDelay();
 800147a:	f7ff f83f 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 800147e:	f7ff f83d 	bl	80004fc <HKEYPAD_VidDelay>
 8001482:	e7bb      	b.n	80013fc <main+0x904>
																							}
																 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8001484:	78fb      	ldrb	r3, [r7, #3]
 8001486:	2b30      	cmp	r3, #48	; 0x30
 8001488:	d1b8      	bne.n	80013fc <main+0x904>
 800148a:	2306      	movs	r3, #6
 800148c:	70fb      	strb	r3, [r7, #3]
 800148e:	f7ff f9f8 	bl	8000882 <HLCD_VidClearScreen>
 8001492:	4844      	ldr	r0, [pc, #272]	; (80015a4 <main+0xaac>)
 8001494:	f7ff f9e0 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 8001498:	2101      	movs	r1, #1
 800149a:	200f      	movs	r0, #15
 800149c:	f7ff f9fb 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 80014a0:	4841      	ldr	r0, [pc, #260]	; (80015a8 <main+0xab0>)
 80014a2:	f7ff f9d9 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 80014a6:	2102      	movs	r1, #2
 80014a8:	2010      	movs	r0, #16
 80014aa:	f7ff f9f4 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 80014ae:	483f      	ldr	r0, [pc, #252]	; (80015ac <main+0xab4>)
 80014b0:	f7ff f9d2 	bl	8000858 <HLCD_VidWriteString>
																MUSART1_VidSendCharSync('4');
 80014b4:	2034      	movs	r0, #52	; 0x34
 80014b6:	f7ff faf9 	bl	8000aac <MUSART1_VidSendCharSync>
																HKEYPAD_VidDelay();
 80014ba:	f7ff f81f 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 80014be:	f7ff f81d 	bl	80004fc <HKEYPAD_VidDelay>
																if(first==0){
 80014c2:	e79b      	b.n	80013fc <main+0x904>
																						}

															}
														}
									else if(control=='3'){
 80014c4:	793b      	ldrb	r3, [r7, #4]
 80014c6:	2b33      	cmp	r3, #51	; 0x33
 80014c8:	f47f aeef 	bne.w	80012aa <main+0x7b2>
															control=6;
 80014cc:	2306      	movs	r3, #6
 80014ce:	713b      	strb	r3, [r7, #4]
															first=0;
 80014d0:	2300      	movs	r3, #0
 80014d2:	71fb      	strb	r3, [r7, #7]
															HLCD_VidClearScreen();
 80014d4:	f7ff f9d5 	bl	8000882 <HLCD_VidClearScreen>
														while(1){

																if(first==0){
 80014d8:	79fb      	ldrb	r3, [r7, #7]
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d112      	bne.n	8001504 <main+0xa0c>
																//control=0;
																HLCD_VidWriteString("TV-ON1/OFF0:");
 80014de:	4839      	ldr	r0, [pc, #228]	; (80015c4 <main+0xacc>)
 80014e0:	f7ff f9ba 	bl	8000858 <HLCD_VidWriteString>
																HLCD_VidShift(15,1);
 80014e4:	2101      	movs	r1, #1
 80014e6:	200f      	movs	r0, #15
 80014e8:	f7ff f9d5 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("<-");
 80014ec:	482e      	ldr	r0, [pc, #184]	; (80015a8 <main+0xab0>)
 80014ee:	f7ff f9b3 	bl	8000858 <HLCD_VidWriteString>
																			HLCD_VidShift(16,2);
 80014f2:	2102      	movs	r1, #2
 80014f4:	2010      	movs	r0, #16
 80014f6:	f7ff f9ce 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("5");
 80014fa:	482c      	ldr	r0, [pc, #176]	; (80015ac <main+0xab4>)
 80014fc:	f7ff f9ac 	bl	8000858 <HLCD_VidWriteString>
																first=1;
 8001500:	2301      	movs	r3, #1
 8001502:	71fb      	strb	r3, [r7, #7]
																}
																HKEYPAD_VidDelay();
 8001504:	f7fe fffa 	bl	80004fc <HKEYPAD_VidDelay>
																on_off=HkEYPAD_u8GetPress();
 8001508:	f7ff f868 	bl	80005dc <HkEYPAD_u8GetPress>
 800150c:	4603      	mov	r3, r0
 800150e:	70fb      	strb	r3, [r7, #3]
																 if(on_off=='5'){first=0;on_off=6; break;}
 8001510:	78fb      	ldrb	r3, [r7, #3]
 8001512:	2b35      	cmp	r3, #53	; 0x35
 8001514:	d104      	bne.n	8001520 <main+0xa28>
 8001516:	2300      	movs	r3, #0
 8001518:	71fb      	strb	r3, [r7, #7]
 800151a:	2306      	movs	r3, #6
 800151c:	70fb      	strb	r3, [r7, #3]
 800151e:	e03f      	b.n	80015a0 <main+0xaa8>
																 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8001520:	78fb      	ldrb	r3, [r7, #3]
 8001522:	2b31      	cmp	r3, #49	; 0x31
 8001524:	d11c      	bne.n	8001560 <main+0xa68>
 8001526:	2306      	movs	r3, #6
 8001528:	70fb      	strb	r3, [r7, #3]
 800152a:	f7ff f9aa 	bl	8000882 <HLCD_VidClearScreen>
 800152e:	4823      	ldr	r0, [pc, #140]	; (80015bc <main+0xac4>)
 8001530:	f7ff f992 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 8001534:	2101      	movs	r1, #1
 8001536:	200f      	movs	r0, #15
 8001538:	f7ff f9ad 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 800153c:	481a      	ldr	r0, [pc, #104]	; (80015a8 <main+0xab0>)
 800153e:	f7ff f98b 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 8001542:	2102      	movs	r1, #2
 8001544:	2010      	movs	r0, #16
 8001546:	f7ff f9a6 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 800154a:	4818      	ldr	r0, [pc, #96]	; (80015ac <main+0xab4>)
 800154c:	f7ff f984 	bl	8000858 <HLCD_VidWriteString>
																  MUSART1_VidSendCharSync('5');
 8001550:	2035      	movs	r0, #53	; 0x35
 8001552:	f7ff faab 	bl	8000aac <MUSART1_VidSendCharSync>
																 HKEYPAD_VidDelay();
 8001556:	f7fe ffd1 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 800155a:	f7fe ffcf 	bl	80004fc <HKEYPAD_VidDelay>
 800155e:	e7bb      	b.n	80014d8 <main+0x9e0>
																							}
																 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8001560:	78fb      	ldrb	r3, [r7, #3]
 8001562:	2b30      	cmp	r3, #48	; 0x30
 8001564:	d1b8      	bne.n	80014d8 <main+0x9e0>
 8001566:	2306      	movs	r3, #6
 8001568:	70fb      	strb	r3, [r7, #3]
 800156a:	f7ff f98a 	bl	8000882 <HLCD_VidClearScreen>
 800156e:	480d      	ldr	r0, [pc, #52]	; (80015a4 <main+0xaac>)
 8001570:	f7ff f972 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 8001574:	2101      	movs	r1, #1
 8001576:	200f      	movs	r0, #15
 8001578:	f7ff f98d 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 800157c:	480a      	ldr	r0, [pc, #40]	; (80015a8 <main+0xab0>)
 800157e:	f7ff f96b 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 8001582:	2102      	movs	r1, #2
 8001584:	2010      	movs	r0, #16
 8001586:	f7ff f986 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 800158a:	4808      	ldr	r0, [pc, #32]	; (80015ac <main+0xab4>)
 800158c:	f7ff f964 	bl	8000858 <HLCD_VidWriteString>
																MUSART1_VidSendCharSync('6');
 8001590:	2036      	movs	r0, #54	; 0x36
 8001592:	f7ff fa8b 	bl	8000aac <MUSART1_VidSendCharSync>
																HKEYPAD_VidDelay();
 8001596:	f7fe ffb1 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 800159a:	f7fe ffaf 	bl	80004fc <HKEYPAD_VidDelay>
																if(first==0){
 800159e:	e79b      	b.n	80014d8 <main+0x9e0>
									if(first==0){
 80015a0:	e683      	b.n	80012aa <main+0x7b2>
 80015a2:	bf00      	nop
 80015a4:	08002248 	.word	0x08002248
 80015a8:	080021fc 	.word	0x080021fc
 80015ac:	08002200 	.word	0x08002200
 80015b0:	0800227c 	.word	0x0800227c
 80015b4:	08002224 	.word	0x08002224
 80015b8:	08002234 	.word	0x08002234
 80015bc:	08002244 	.word	0x08002244
 80015c0:	0800224c 	.word	0x0800224c
 80015c4:	0800225c 	.word	0x0800225c
														}


								}
							}
			else if(room=='4'){
 80015c8:	797b      	ldrb	r3, [r7, #5]
 80015ca:	2b34      	cmp	r3, #52	; 0x34
 80015cc:	f47f aaeb 	bne.w	8000ba6 <main+0xae>
							room=6;
 80015d0:	2306      	movs	r3, #6
 80015d2:	717b      	strb	r3, [r7, #5]
							first=0;
 80015d4:	2300      	movs	r3, #0
 80015d6:	71fb      	strb	r3, [r7, #7]
							HLCD_VidClearScreen();
 80015d8:	f7ff f953 	bl	8000882 <HLCD_VidClearScreen>
						while(1){
									if(first==0){
 80015dc:	79fb      	ldrb	r3, [r7, #7]
 80015de:	2b00      	cmp	r3, #0
 80015e0:	d11b      	bne.n	800161a <main+0xb22>
									//room=0;
									HLCD_VidClearScreen();
 80015e2:	f7ff f94e 	bl	8000882 <HLCD_VidClearScreen>
									HLCD_VidWriteString("Welcome Room4:");
 80015e6:	48bc      	ldr	r0, [pc, #752]	; (80018d8 <main+0xde0>)
 80015e8:	f7ff f936 	bl	8000858 <HLCD_VidWriteString>
									HLCD_VidShift(15,1);
 80015ec:	2101      	movs	r1, #1
 80015ee:	200f      	movs	r0, #15
 80015f0:	f7ff f951 	bl	8000896 <HLCD_VidShift>
												HLCD_VidWriteString("<-");
 80015f4:	48b9      	ldr	r0, [pc, #740]	; (80018dc <main+0xde4>)
 80015f6:	f7ff f92f 	bl	8000858 <HLCD_VidWriteString>
												HLCD_VidShift(16,2);
 80015fa:	2102      	movs	r1, #2
 80015fc:	2010      	movs	r0, #16
 80015fe:	f7ff f94a 	bl	8000896 <HLCD_VidShift>
												HLCD_VidWriteString("5");
 8001602:	48b7      	ldr	r0, [pc, #732]	; (80018e0 <main+0xde8>)
 8001604:	f7ff f928 	bl	8000858 <HLCD_VidWriteString>
									HLCD_VidShift(1,2);
 8001608:	2102      	movs	r1, #2
 800160a:	2001      	movs	r0, #1
 800160c:	f7ff f943 	bl	8000896 <HLCD_VidShift>
									HLCD_VidWriteString("LI1/AIR2/TV3:");
 8001610:	48b4      	ldr	r0, [pc, #720]	; (80018e4 <main+0xdec>)
 8001612:	f7ff f921 	bl	8000858 <HLCD_VidWriteString>
									first=1;
 8001616:	2301      	movs	r3, #1
 8001618:	71fb      	strb	r3, [r7, #7]
									}
									HKEYPAD_VidDelay();
 800161a:	f7fe ff6f 	bl	80004fc <HKEYPAD_VidDelay>
									HKEYPAD_VidDelay();
 800161e:	f7fe ff6d 	bl	80004fc <HKEYPAD_VidDelay>
									control=HkEYPAD_u8GetPress();
 8001622:	f7fe ffdb 	bl	80005dc <HkEYPAD_u8GetPress>
 8001626:	4603      	mov	r3, r0
 8001628:	713b      	strb	r3, [r7, #4]
									if(control=='5'){first=0;	control=6; break;}
 800162a:	793b      	ldrb	r3, [r7, #4]
 800162c:	2b35      	cmp	r3, #53	; 0x35
 800162e:	d104      	bne.n	800163a <main+0xb42>
 8001630:	2300      	movs	r3, #0
 8001632:	71fb      	strb	r3, [r7, #7]
 8001634:	2306      	movs	r3, #6
 8001636:	713b      	strb	r3, [r7, #4]
 8001638:	e14c      	b.n	80018d4 <main+0xddc>
									else if(control=='1'){
 800163a:	793b      	ldrb	r3, [r7, #4]
 800163c:	2b31      	cmp	r3, #49	; 0x31
 800163e:	d16d      	bne.n	800171c <main+0xc24>
										control=6;
 8001640:	2306      	movs	r3, #6
 8001642:	713b      	strb	r3, [r7, #4]
										first=0;
 8001644:	2300      	movs	r3, #0
 8001646:	71fb      	strb	r3, [r7, #7]
										HLCD_VidClearScreen();
 8001648:	f7ff f91b 	bl	8000882 <HLCD_VidClearScreen>
									while(1){

											if(first==0){
 800164c:	79fb      	ldrb	r3, [r7, #7]
 800164e:	2b00      	cmp	r3, #0
 8001650:	d114      	bne.n	800167c <main+0xb84>
											//control=0;
												HLCD_VidClearScreen();
 8001652:	f7ff f916 	bl	8000882 <HLCD_VidClearScreen>
											HLCD_VidWriteString("LI-ON1/OFF0:");
 8001656:	48a4      	ldr	r0, [pc, #656]	; (80018e8 <main+0xdf0>)
 8001658:	f7ff f8fe 	bl	8000858 <HLCD_VidWriteString>
											HLCD_VidShift(15,1);
 800165c:	2101      	movs	r1, #1
 800165e:	200f      	movs	r0, #15
 8001660:	f7ff f919 	bl	8000896 <HLCD_VidShift>
														HLCD_VidWriteString("<-");
 8001664:	489d      	ldr	r0, [pc, #628]	; (80018dc <main+0xde4>)
 8001666:	f7ff f8f7 	bl	8000858 <HLCD_VidWriteString>
														HLCD_VidShift(16,2);
 800166a:	2102      	movs	r1, #2
 800166c:	2010      	movs	r0, #16
 800166e:	f7ff f912 	bl	8000896 <HLCD_VidShift>
														HLCD_VidWriteString("5");
 8001672:	489b      	ldr	r0, [pc, #620]	; (80018e0 <main+0xde8>)
 8001674:	f7ff f8f0 	bl	8000858 <HLCD_VidWriteString>
											first=1;
 8001678:	2301      	movs	r3, #1
 800167a:	71fb      	strb	r3, [r7, #7]
											}
											HKEYPAD_VidDelay();
 800167c:	f7fe ff3e 	bl	80004fc <HKEYPAD_VidDelay>
											HKEYPAD_VidDelay();
 8001680:	f7fe ff3c 	bl	80004fc <HKEYPAD_VidDelay>
											on_off=HkEYPAD_u8GetPress();
 8001684:	f7fe ffaa 	bl	80005dc <HkEYPAD_u8GetPress>
 8001688:	4603      	mov	r3, r0
 800168a:	70fb      	strb	r3, [r7, #3]
											 if(on_off=='5'){first=0;on_off=6; break;}
 800168c:	78fb      	ldrb	r3, [r7, #3]
 800168e:	2b35      	cmp	r3, #53	; 0x35
 8001690:	d104      	bne.n	800169c <main+0xba4>
 8001692:	2300      	movs	r3, #0
 8001694:	71fb      	strb	r3, [r7, #7]
 8001696:	2306      	movs	r3, #6
 8001698:	70fb      	strb	r3, [r7, #3]
 800169a:	e11a      	b.n	80018d2 <main+0xdda>
											 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 800169c:	78fb      	ldrb	r3, [r7, #3]
 800169e:	2b31      	cmp	r3, #49	; 0x31
 80016a0:	d11c      	bne.n	80016dc <main+0xbe4>
 80016a2:	2306      	movs	r3, #6
 80016a4:	70fb      	strb	r3, [r7, #3]
 80016a6:	f7ff f8ec 	bl	8000882 <HLCD_VidClearScreen>
 80016aa:	4890      	ldr	r0, [pc, #576]	; (80018ec <main+0xdf4>)
 80016ac:	f7ff f8d4 	bl	8000858 <HLCD_VidWriteString>
											 HLCD_VidShift(15,1);
 80016b0:	2101      	movs	r1, #1
 80016b2:	200f      	movs	r0, #15
 80016b4:	f7ff f8ef 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("<-");
 80016b8:	4888      	ldr	r0, [pc, #544]	; (80018dc <main+0xde4>)
 80016ba:	f7ff f8cd 	bl	8000858 <HLCD_VidWriteString>
											 			HLCD_VidShift(16,2);
 80016be:	2102      	movs	r1, #2
 80016c0:	2010      	movs	r0, #16
 80016c2:	f7ff f8e8 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("5");
 80016c6:	4886      	ldr	r0, [pc, #536]	; (80018e0 <main+0xde8>)
 80016c8:	f7ff f8c6 	bl	8000858 <HLCD_VidWriteString>
											  MUSART1_VidSendCharSync('1');
 80016cc:	2031      	movs	r0, #49	; 0x31
 80016ce:	f7ff f9ed 	bl	8000aac <MUSART1_VidSendCharSync>
											 HKEYPAD_VidDelay();
 80016d2:	f7fe ff13 	bl	80004fc <HKEYPAD_VidDelay>
											HKEYPAD_VidDelay();
 80016d6:	f7fe ff11 	bl	80004fc <HKEYPAD_VidDelay>
 80016da:	e7b7      	b.n	800164c <main+0xb54>
																		}
											 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 80016dc:	78fb      	ldrb	r3, [r7, #3]
 80016de:	2b30      	cmp	r3, #48	; 0x30
 80016e0:	d1b4      	bne.n	800164c <main+0xb54>
 80016e2:	2306      	movs	r3, #6
 80016e4:	70fb      	strb	r3, [r7, #3]
 80016e6:	f7ff f8cc 	bl	8000882 <HLCD_VidClearScreen>
 80016ea:	4881      	ldr	r0, [pc, #516]	; (80018f0 <main+0xdf8>)
 80016ec:	f7ff f8b4 	bl	8000858 <HLCD_VidWriteString>
											 HLCD_VidShift(15,1);
 80016f0:	2101      	movs	r1, #1
 80016f2:	200f      	movs	r0, #15
 80016f4:	f7ff f8cf 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("<-");
 80016f8:	4878      	ldr	r0, [pc, #480]	; (80018dc <main+0xde4>)
 80016fa:	f7ff f8ad 	bl	8000858 <HLCD_VidWriteString>
											 			HLCD_VidShift(16,2);
 80016fe:	2102      	movs	r1, #2
 8001700:	2010      	movs	r0, #16
 8001702:	f7ff f8c8 	bl	8000896 <HLCD_VidShift>
											 			HLCD_VidWriteString("5");
 8001706:	4876      	ldr	r0, [pc, #472]	; (80018e0 <main+0xde8>)
 8001708:	f7ff f8a6 	bl	8000858 <HLCD_VidWriteString>
											MUSART1_VidSendCharSync('0');
 800170c:	2030      	movs	r0, #48	; 0x30
 800170e:	f7ff f9cd 	bl	8000aac <MUSART1_VidSendCharSync>
											HKEYPAD_VidDelay();
 8001712:	f7fe fef3 	bl	80004fc <HKEYPAD_VidDelay>
											HKEYPAD_VidDelay();
 8001716:	f7fe fef1 	bl	80004fc <HKEYPAD_VidDelay>
											if(first==0){
 800171a:	e797      	b.n	800164c <main+0xb54>
																	}

										}
									}
									else if(control=='2'){
 800171c:	793b      	ldrb	r3, [r7, #4]
 800171e:	2b32      	cmp	r3, #50	; 0x32
 8001720:	d169      	bne.n	80017f6 <main+0xcfe>
															control=6;
 8001722:	2306      	movs	r3, #6
 8001724:	713b      	strb	r3, [r7, #4]
															first=0;
 8001726:	2300      	movs	r3, #0
 8001728:	71fb      	strb	r3, [r7, #7]
															HLCD_VidClearScreen();
 800172a:	f7ff f8aa 	bl	8000882 <HLCD_VidClearScreen>
														while(1){

																if(first==0){
 800172e:	79fb      	ldrb	r3, [r7, #7]
 8001730:	2b00      	cmp	r3, #0
 8001732:	d112      	bne.n	800175a <main+0xc62>
																//control=0;
																HLCD_VidWriteString("AIR ON1/OFF0:");
 8001734:	486f      	ldr	r0, [pc, #444]	; (80018f4 <main+0xdfc>)
 8001736:	f7ff f88f 	bl	8000858 <HLCD_VidWriteString>
																HLCD_VidShift(15,1);
 800173a:	2101      	movs	r1, #1
 800173c:	200f      	movs	r0, #15
 800173e:	f7ff f8aa 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("<-");
 8001742:	4866      	ldr	r0, [pc, #408]	; (80018dc <main+0xde4>)
 8001744:	f7ff f888 	bl	8000858 <HLCD_VidWriteString>
																			HLCD_VidShift(16,2);
 8001748:	2102      	movs	r1, #2
 800174a:	2010      	movs	r0, #16
 800174c:	f7ff f8a3 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("5");
 8001750:	4863      	ldr	r0, [pc, #396]	; (80018e0 <main+0xde8>)
 8001752:	f7ff f881 	bl	8000858 <HLCD_VidWriteString>
																first=1;
 8001756:	2301      	movs	r3, #1
 8001758:	71fb      	strb	r3, [r7, #7]
																}
																HKEYPAD_VidDelay();
 800175a:	f7fe fecf 	bl	80004fc <HKEYPAD_VidDelay>
																on_off=HkEYPAD_u8GetPress();
 800175e:	f7fe ff3d 	bl	80005dc <HkEYPAD_u8GetPress>
 8001762:	4603      	mov	r3, r0
 8001764:	70fb      	strb	r3, [r7, #3]
																 if(on_off=='5'){first=0;on_off=6; break;}
 8001766:	78fb      	ldrb	r3, [r7, #3]
 8001768:	2b35      	cmp	r3, #53	; 0x35
 800176a:	d104      	bne.n	8001776 <main+0xc7e>
 800176c:	2300      	movs	r3, #0
 800176e:	71fb      	strb	r3, [r7, #7]
 8001770:	2306      	movs	r3, #6
 8001772:	70fb      	strb	r3, [r7, #3]
 8001774:	e0ad      	b.n	80018d2 <main+0xdda>
																 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8001776:	78fb      	ldrb	r3, [r7, #3]
 8001778:	2b31      	cmp	r3, #49	; 0x31
 800177a:	d11c      	bne.n	80017b6 <main+0xcbe>
 800177c:	2306      	movs	r3, #6
 800177e:	70fb      	strb	r3, [r7, #3]
 8001780:	f7ff f87f 	bl	8000882 <HLCD_VidClearScreen>
 8001784:	4859      	ldr	r0, [pc, #356]	; (80018ec <main+0xdf4>)
 8001786:	f7ff f867 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 800178a:	2101      	movs	r1, #1
 800178c:	200f      	movs	r0, #15
 800178e:	f7ff f882 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 8001792:	4852      	ldr	r0, [pc, #328]	; (80018dc <main+0xde4>)
 8001794:	f7ff f860 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 8001798:	2102      	movs	r1, #2
 800179a:	2010      	movs	r0, #16
 800179c:	f7ff f87b 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 80017a0:	484f      	ldr	r0, [pc, #316]	; (80018e0 <main+0xde8>)
 80017a2:	f7ff f859 	bl	8000858 <HLCD_VidWriteString>
																  MUSART1_VidSendCharSync('3');
 80017a6:	2033      	movs	r0, #51	; 0x33
 80017a8:	f7ff f980 	bl	8000aac <MUSART1_VidSendCharSync>
																 HKEYPAD_VidDelay();
 80017ac:	f7fe fea6 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 80017b0:	f7fe fea4 	bl	80004fc <HKEYPAD_VidDelay>
 80017b4:	e7bb      	b.n	800172e <main+0xc36>
																							}
																 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 80017b6:	78fb      	ldrb	r3, [r7, #3]
 80017b8:	2b30      	cmp	r3, #48	; 0x30
 80017ba:	d1b8      	bne.n	800172e <main+0xc36>
 80017bc:	2306      	movs	r3, #6
 80017be:	70fb      	strb	r3, [r7, #3]
 80017c0:	f7ff f85f 	bl	8000882 <HLCD_VidClearScreen>
 80017c4:	484a      	ldr	r0, [pc, #296]	; (80018f0 <main+0xdf8>)
 80017c6:	f7ff f847 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 80017ca:	2101      	movs	r1, #1
 80017cc:	200f      	movs	r0, #15
 80017ce:	f7ff f862 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 80017d2:	4842      	ldr	r0, [pc, #264]	; (80018dc <main+0xde4>)
 80017d4:	f7ff f840 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 80017d8:	2102      	movs	r1, #2
 80017da:	2010      	movs	r0, #16
 80017dc:	f7ff f85b 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 80017e0:	483f      	ldr	r0, [pc, #252]	; (80018e0 <main+0xde8>)
 80017e2:	f7ff f839 	bl	8000858 <HLCD_VidWriteString>
																MUSART1_VidSendCharSync('4');
 80017e6:	2034      	movs	r0, #52	; 0x34
 80017e8:	f7ff f960 	bl	8000aac <MUSART1_VidSendCharSync>
																HKEYPAD_VidDelay();
 80017ec:	f7fe fe86 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 80017f0:	f7fe fe84 	bl	80004fc <HKEYPAD_VidDelay>
																if(first==0){
 80017f4:	e79b      	b.n	800172e <main+0xc36>
																						}

															}
														}
									else if(control=='3'){
 80017f6:	793b      	ldrb	r3, [r7, #4]
 80017f8:	2b33      	cmp	r3, #51	; 0x33
 80017fa:	f47f aeef 	bne.w	80015dc <main+0xae4>
															control=6;
 80017fe:	2306      	movs	r3, #6
 8001800:	713b      	strb	r3, [r7, #4]
															first=0;
 8001802:	2300      	movs	r3, #0
 8001804:	71fb      	strb	r3, [r7, #7]
															HLCD_VidClearScreen();
 8001806:	f7ff f83c 	bl	8000882 <HLCD_VidClearScreen>
														while(1){

																if(first==0){
 800180a:	79fb      	ldrb	r3, [r7, #7]
 800180c:	2b00      	cmp	r3, #0
 800180e:	d112      	bne.n	8001836 <main+0xd3e>
																//control=0;
																HLCD_VidWriteString("TV-ON1/OFF0:");
 8001810:	4839      	ldr	r0, [pc, #228]	; (80018f8 <main+0xe00>)
 8001812:	f7ff f821 	bl	8000858 <HLCD_VidWriteString>
																HLCD_VidShift(15,1);
 8001816:	2101      	movs	r1, #1
 8001818:	200f      	movs	r0, #15
 800181a:	f7ff f83c 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("<-");
 800181e:	482f      	ldr	r0, [pc, #188]	; (80018dc <main+0xde4>)
 8001820:	f7ff f81a 	bl	8000858 <HLCD_VidWriteString>
																			HLCD_VidShift(16,2);
 8001824:	2102      	movs	r1, #2
 8001826:	2010      	movs	r0, #16
 8001828:	f7ff f835 	bl	8000896 <HLCD_VidShift>
																			HLCD_VidWriteString("5");
 800182c:	482c      	ldr	r0, [pc, #176]	; (80018e0 <main+0xde8>)
 800182e:	f7ff f813 	bl	8000858 <HLCD_VidWriteString>
																first=1;
 8001832:	2301      	movs	r3, #1
 8001834:	71fb      	strb	r3, [r7, #7]
																}
																HKEYPAD_VidDelay();
 8001836:	f7fe fe61 	bl	80004fc <HKEYPAD_VidDelay>
																on_off=HkEYPAD_u8GetPress();
 800183a:	f7fe fecf 	bl	80005dc <HkEYPAD_u8GetPress>
 800183e:	4603      	mov	r3, r0
 8001840:	70fb      	strb	r3, [r7, #3]
																 if(on_off=='5'){first=0;on_off=6; break;}
 8001842:	78fb      	ldrb	r3, [r7, #3]
 8001844:	2b35      	cmp	r3, #53	; 0x35
 8001846:	d104      	bne.n	8001852 <main+0xd5a>
 8001848:	2300      	movs	r3, #0
 800184a:	71fb      	strb	r3, [r7, #7]
 800184c:	2306      	movs	r3, #6
 800184e:	70fb      	strb	r3, [r7, #3]
 8001850:	e03f      	b.n	80018d2 <main+0xdda>
																 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8001852:	78fb      	ldrb	r3, [r7, #3]
 8001854:	2b31      	cmp	r3, #49	; 0x31
 8001856:	d11c      	bne.n	8001892 <main+0xd9a>
 8001858:	2306      	movs	r3, #6
 800185a:	70fb      	strb	r3, [r7, #3]
 800185c:	f7ff f811 	bl	8000882 <HLCD_VidClearScreen>
 8001860:	4822      	ldr	r0, [pc, #136]	; (80018ec <main+0xdf4>)
 8001862:	f7fe fff9 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 8001866:	2101      	movs	r1, #1
 8001868:	200f      	movs	r0, #15
 800186a:	f7ff f814 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 800186e:	481b      	ldr	r0, [pc, #108]	; (80018dc <main+0xde4>)
 8001870:	f7fe fff2 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 8001874:	2102      	movs	r1, #2
 8001876:	2010      	movs	r0, #16
 8001878:	f7ff f80d 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 800187c:	4818      	ldr	r0, [pc, #96]	; (80018e0 <main+0xde8>)
 800187e:	f7fe ffeb 	bl	8000858 <HLCD_VidWriteString>
																  MUSART1_VidSendCharSync('5');
 8001882:	2035      	movs	r0, #53	; 0x35
 8001884:	f7ff f912 	bl	8000aac <MUSART1_VidSendCharSync>
																 HKEYPAD_VidDelay();
 8001888:	f7fe fe38 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 800188c:	f7fe fe36 	bl	80004fc <HKEYPAD_VidDelay>
 8001890:	e7bb      	b.n	800180a <main+0xd12>
																							}
																 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8001892:	78fb      	ldrb	r3, [r7, #3]
 8001894:	2b30      	cmp	r3, #48	; 0x30
 8001896:	d1b8      	bne.n	800180a <main+0xd12>
 8001898:	2306      	movs	r3, #6
 800189a:	70fb      	strb	r3, [r7, #3]
 800189c:	f7fe fff1 	bl	8000882 <HLCD_VidClearScreen>
 80018a0:	4813      	ldr	r0, [pc, #76]	; (80018f0 <main+0xdf8>)
 80018a2:	f7fe ffd9 	bl	8000858 <HLCD_VidWriteString>
																 HLCD_VidShift(15,1);
 80018a6:	2101      	movs	r1, #1
 80018a8:	200f      	movs	r0, #15
 80018aa:	f7fe fff4 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("<-");
 80018ae:	480b      	ldr	r0, [pc, #44]	; (80018dc <main+0xde4>)
 80018b0:	f7fe ffd2 	bl	8000858 <HLCD_VidWriteString>
																 			HLCD_VidShift(16,2);
 80018b4:	2102      	movs	r1, #2
 80018b6:	2010      	movs	r0, #16
 80018b8:	f7fe ffed 	bl	8000896 <HLCD_VidShift>
																 			HLCD_VidWriteString("5");
 80018bc:	4808      	ldr	r0, [pc, #32]	; (80018e0 <main+0xde8>)
 80018be:	f7fe ffcb 	bl	8000858 <HLCD_VidWriteString>
																MUSART1_VidSendCharSync('6');
 80018c2:	2036      	movs	r0, #54	; 0x36
 80018c4:	f7ff f8f2 	bl	8000aac <MUSART1_VidSendCharSync>
																HKEYPAD_VidDelay();
 80018c8:	f7fe fe18 	bl	80004fc <HKEYPAD_VidDelay>
																HKEYPAD_VidDelay();
 80018cc:	f7fe fe16 	bl	80004fc <HKEYPAD_VidDelay>
																if(first==0){
 80018d0:	e79b      	b.n	800180a <main+0xd12>
									if(first==0){
 80018d2:	e683      	b.n	80015dc <main+0xae4>
			if(first==0){
 80018d4:	f7ff b967 	b.w	8000ba6 <main+0xae>
 80018d8:	0800228c 	.word	0x0800228c
 80018dc:	080021fc 	.word	0x080021fc
 80018e0:	08002200 	.word	0x08002200
 80018e4:	08002224 	.word	0x08002224
 80018e8:	08002234 	.word	0x08002234
 80018ec:	08002244 	.word	0x08002244
 80018f0:	08002248 	.word	0x08002248
 80018f4:	0800224c 	.word	0x0800224c
 80018f8:	0800225c 	.word	0x0800225c



			}
		}
	else if(x=='1'){		//choose admin mode
 80018fc:	79bb      	ldrb	r3, [r7, #6]
 80018fe:	2b31      	cmp	r3, #49	; 0x31
 8001900:	f47f a927 	bne.w	8000b52 <main+0x5a>
			x=6;
 8001904:	2306      	movs	r3, #6
 8001906:	71bb      	strb	r3, [r7, #6]
			first=0;
 8001908:	2300      	movs	r3, #0
 800190a:	71fb      	strb	r3, [r7, #7]
			HLCD_VidClearScreen();
 800190c:	f7fe ffb9 	bl	8000882 <HLCD_VidClearScreen>
		while(1){

				if(first==0){
 8001910:	79fb      	ldrb	r3, [r7, #7]
 8001912:	2b00      	cmp	r3, #0
 8001914:	d122      	bne.n	800195c <main+0xe64>
					HLCD_VidClearScreen();
 8001916:	f7fe ffb4 	bl	8000882 <HLCD_VidClearScreen>
				HLCD_VidWriteString("WelcomeGuestMode:");
 800191a:	48c3      	ldr	r0, [pc, #780]	; (8001c28 <main+0x1130>)
 800191c:	f7fe ff9c 	bl	8000858 <HLCD_VidWriteString>
				main_VidDelay();
 8001920:	f7fe fed9 	bl	80006d6 <main_VidDelay>
				HLCD_VidClearScreen();
 8001924:	f7fe ffad 	bl	8000882 <HLCD_VidClearScreen>
				HLCD_VidWriteString("Control Room: ");
 8001928:	48c0      	ldr	r0, [pc, #768]	; (8001c2c <main+0x1134>)
 800192a:	f7fe ff95 	bl	8000858 <HLCD_VidWriteString>
				HLCD_VidShift(15,1);
 800192e:	2101      	movs	r1, #1
 8001930:	200f      	movs	r0, #15
 8001932:	f7fe ffb0 	bl	8000896 <HLCD_VidShift>
							HLCD_VidWriteString("<-");
 8001936:	48be      	ldr	r0, [pc, #760]	; (8001c30 <main+0x1138>)
 8001938:	f7fe ff8e 	bl	8000858 <HLCD_VidWriteString>
							HLCD_VidShift(16,2);
 800193c:	2102      	movs	r1, #2
 800193e:	2010      	movs	r0, #16
 8001940:	f7fe ffa9 	bl	8000896 <HLCD_VidShift>
							HLCD_VidWriteString("5");
 8001944:	48bb      	ldr	r0, [pc, #748]	; (8001c34 <main+0x113c>)
 8001946:	f7fe ff87 	bl	8000858 <HLCD_VidWriteString>
				HLCD_VidShift(1,2);
 800194a:	2102      	movs	r1, #2
 800194c:	2001      	movs	r0, #1
 800194e:	f7fe ffa2 	bl	8000896 <HLCD_VidShift>
				HLCD_VidWriteString("Room(1/2/3/4:");
 8001952:	48b9      	ldr	r0, [pc, #740]	; (8001c38 <main+0x1140>)
 8001954:	f7fe ff80 	bl	8000858 <HLCD_VidWriteString>
				first=1;
 8001958:	2301      	movs	r3, #1
 800195a:	71fb      	strb	r3, [r7, #7]
				}
				HKEYPAD_VidDelay();
 800195c:	f7fe fdce 	bl	80004fc <HKEYPAD_VidDelay>
				HKEYPAD_VidDelay();
 8001960:	f7fe fdcc 	bl	80004fc <HKEYPAD_VidDelay>
				room=HkEYPAD_u8GetPress();
 8001964:	f7fe fe3a 	bl	80005dc <HkEYPAD_u8GetPress>
 8001968:	4603      	mov	r3, r0
 800196a:	717b      	strb	r3, [r7, #5]
				if(room=='5'){first=0;	room=6; break;}
 800196c:	797b      	ldrb	r3, [r7, #5]
 800196e:	2b35      	cmp	r3, #53	; 0x35
 8001970:	d104      	bne.n	800197c <main+0xe84>
 8001972:	2300      	movs	r3, #0
 8001974:	71fb      	strb	r3, [r7, #7]
 8001976:	2306      	movs	r3, #6
 8001978:	717b      	strb	r3, [r7, #5]
 800197a:	e2c2      	b.n	8001f02 <main+0x140a>
				else if(room=='1'){
 800197c:	797b      	ldrb	r3, [r7, #5]
 800197e:	2b31      	cmp	r3, #49	; 0x31
 8001980:	f040 80a7 	bne.w	8001ad2 <main+0xfda>
					room=6;
 8001984:	2306      	movs	r3, #6
 8001986:	717b      	strb	r3, [r7, #5]
					first=0;
 8001988:	2300      	movs	r3, #0
 800198a:	71fb      	strb	r3, [r7, #7]
					HLCD_VidClearScreen();
 800198c:	f7fe ff79 	bl	8000882 <HLCD_VidClearScreen>
				while(1){
							if(first==0){
 8001990:	79fb      	ldrb	r3, [r7, #7]
 8001992:	2b00      	cmp	r3, #0
 8001994:	d11b      	bne.n	80019ce <main+0xed6>
							//room=0;
							HLCD_VidClearScreen();
 8001996:	f7fe ff74 	bl	8000882 <HLCD_VidClearScreen>
							HLCD_VidWriteString("Welcome Room1:");
 800199a:	48a8      	ldr	r0, [pc, #672]	; (8001c3c <main+0x1144>)
 800199c:	f7fe ff5c 	bl	8000858 <HLCD_VidWriteString>
							HLCD_VidShift(15,1);
 80019a0:	2101      	movs	r1, #1
 80019a2:	200f      	movs	r0, #15
 80019a4:	f7fe ff77 	bl	8000896 <HLCD_VidShift>
										HLCD_VidWriteString("<-");
 80019a8:	48a1      	ldr	r0, [pc, #644]	; (8001c30 <main+0x1138>)
 80019aa:	f7fe ff55 	bl	8000858 <HLCD_VidWriteString>
										HLCD_VidShift(16,2);
 80019ae:	2102      	movs	r1, #2
 80019b0:	2010      	movs	r0, #16
 80019b2:	f7fe ff70 	bl	8000896 <HLCD_VidShift>
										HLCD_VidWriteString("5");
 80019b6:	489f      	ldr	r0, [pc, #636]	; (8001c34 <main+0x113c>)
 80019b8:	f7fe ff4e 	bl	8000858 <HLCD_VidWriteString>
							HLCD_VidShift(1,2);
 80019bc:	2102      	movs	r1, #2
 80019be:	2001      	movs	r0, #1
 80019c0:	f7fe ff69 	bl	8000896 <HLCD_VidShift>
							HLCD_VidWriteString("LIGHT1:");
 80019c4:	489e      	ldr	r0, [pc, #632]	; (8001c40 <main+0x1148>)
 80019c6:	f7fe ff47 	bl	8000858 <HLCD_VidWriteString>
							first=1;
 80019ca:	2301      	movs	r3, #1
 80019cc:	71fb      	strb	r3, [r7, #7]
							}
							HKEYPAD_VidDelay();
 80019ce:	f7fe fd95 	bl	80004fc <HKEYPAD_VidDelay>
							HKEYPAD_VidDelay();
 80019d2:	f7fe fd93 	bl	80004fc <HKEYPAD_VidDelay>
							control=HkEYPAD_u8GetPress();
 80019d6:	f7fe fe01 	bl	80005dc <HkEYPAD_u8GetPress>
 80019da:	4603      	mov	r3, r0
 80019dc:	713b      	strb	r3, [r7, #4]
							if(control=='5'){first=0;	control=6; break;}
 80019de:	793b      	ldrb	r3, [r7, #4]
 80019e0:	2b35      	cmp	r3, #53	; 0x35
 80019e2:	d104      	bne.n	80019ee <main+0xef6>
 80019e4:	2300      	movs	r3, #0
 80019e6:	71fb      	strb	r3, [r7, #7]
 80019e8:	2306      	movs	r3, #6
 80019ea:	713b      	strb	r3, [r7, #4]
 80019ec:	e288      	b.n	8001f00 <main+0x1408>
							else if(control=='1'){
 80019ee:	793b      	ldrb	r3, [r7, #4]
 80019f0:	2b31      	cmp	r3, #49	; 0x31
 80019f2:	d1cd      	bne.n	8001990 <main+0xe98>
								control=6;
 80019f4:	2306      	movs	r3, #6
 80019f6:	713b      	strb	r3, [r7, #4]
								first=0;
 80019f8:	2300      	movs	r3, #0
 80019fa:	71fb      	strb	r3, [r7, #7]
								HLCD_VidClearScreen();
 80019fc:	f7fe ff41 	bl	8000882 <HLCD_VidClearScreen>
							while(1){

									if(first==0){
 8001a00:	79fb      	ldrb	r3, [r7, #7]
 8001a02:	2b00      	cmp	r3, #0
 8001a04:	d114      	bne.n	8001a30 <main+0xf38>
									//control=0;
										HLCD_VidClearScreen();
 8001a06:	f7fe ff3c 	bl	8000882 <HLCD_VidClearScreen>
									HLCD_VidWriteString("LI-ON1/OFF0:");
 8001a0a:	488e      	ldr	r0, [pc, #568]	; (8001c44 <main+0x114c>)
 8001a0c:	f7fe ff24 	bl	8000858 <HLCD_VidWriteString>
									HLCD_VidShift(15,1);
 8001a10:	2101      	movs	r1, #1
 8001a12:	200f      	movs	r0, #15
 8001a14:	f7fe ff3f 	bl	8000896 <HLCD_VidShift>
												HLCD_VidWriteString("<-");
 8001a18:	4885      	ldr	r0, [pc, #532]	; (8001c30 <main+0x1138>)
 8001a1a:	f7fe ff1d 	bl	8000858 <HLCD_VidWriteString>
												HLCD_VidShift(16,2);
 8001a1e:	2102      	movs	r1, #2
 8001a20:	2010      	movs	r0, #16
 8001a22:	f7fe ff38 	bl	8000896 <HLCD_VidShift>
												HLCD_VidWriteString("5");
 8001a26:	4883      	ldr	r0, [pc, #524]	; (8001c34 <main+0x113c>)
 8001a28:	f7fe ff16 	bl	8000858 <HLCD_VidWriteString>
									first=1;
 8001a2c:	2301      	movs	r3, #1
 8001a2e:	71fb      	strb	r3, [r7, #7]
									}
									HKEYPAD_VidDelay();
 8001a30:	f7fe fd64 	bl	80004fc <HKEYPAD_VidDelay>
									HKEYPAD_VidDelay();
 8001a34:	f7fe fd62 	bl	80004fc <HKEYPAD_VidDelay>
									on_off=HkEYPAD_u8GetPress();
 8001a38:	f7fe fdd0 	bl	80005dc <HkEYPAD_u8GetPress>
 8001a3c:	4603      	mov	r3, r0
 8001a3e:	70fb      	strb	r3, [r7, #3]
									 if(on_off=='5'){first=0;on_off=6; break;}
 8001a40:	78fb      	ldrb	r3, [r7, #3]
 8001a42:	2b35      	cmp	r3, #53	; 0x35
 8001a44:	d104      	bne.n	8001a50 <main+0xf58>
 8001a46:	2300      	movs	r3, #0
 8001a48:	71fb      	strb	r3, [r7, #7]
 8001a4a:	2306      	movs	r3, #6
 8001a4c:	70fb      	strb	r3, [r7, #3]
 8001a4e:	e03f      	b.n	8001ad0 <main+0xfd8>
									 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8001a50:	78fb      	ldrb	r3, [r7, #3]
 8001a52:	2b31      	cmp	r3, #49	; 0x31
 8001a54:	d11c      	bne.n	8001a90 <main+0xf98>
 8001a56:	2306      	movs	r3, #6
 8001a58:	70fb      	strb	r3, [r7, #3]
 8001a5a:	f7fe ff12 	bl	8000882 <HLCD_VidClearScreen>
 8001a5e:	487a      	ldr	r0, [pc, #488]	; (8001c48 <main+0x1150>)
 8001a60:	f7fe fefa 	bl	8000858 <HLCD_VidWriteString>
									 HLCD_VidShift(15,1);
 8001a64:	2101      	movs	r1, #1
 8001a66:	200f      	movs	r0, #15
 8001a68:	f7fe ff15 	bl	8000896 <HLCD_VidShift>
									 			HLCD_VidWriteString("<-");
 8001a6c:	4870      	ldr	r0, [pc, #448]	; (8001c30 <main+0x1138>)
 8001a6e:	f7fe fef3 	bl	8000858 <HLCD_VidWriteString>
									 			HLCD_VidShift(16,2);
 8001a72:	2102      	movs	r1, #2
 8001a74:	2010      	movs	r0, #16
 8001a76:	f7fe ff0e 	bl	8000896 <HLCD_VidShift>
									 			HLCD_VidWriteString("5");
 8001a7a:	486e      	ldr	r0, [pc, #440]	; (8001c34 <main+0x113c>)
 8001a7c:	f7fe feec 	bl	8000858 <HLCD_VidWriteString>
									  MUSART1_VidSendCharSync('1');
 8001a80:	2031      	movs	r0, #49	; 0x31
 8001a82:	f7ff f813 	bl	8000aac <MUSART1_VidSendCharSync>
									 HKEYPAD_VidDelay();
 8001a86:	f7fe fd39 	bl	80004fc <HKEYPAD_VidDelay>
									HKEYPAD_VidDelay();
 8001a8a:	f7fe fd37 	bl	80004fc <HKEYPAD_VidDelay>
 8001a8e:	e7b7      	b.n	8001a00 <main+0xf08>
																}
									 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8001a90:	78fb      	ldrb	r3, [r7, #3]
 8001a92:	2b30      	cmp	r3, #48	; 0x30
 8001a94:	d1b4      	bne.n	8001a00 <main+0xf08>
 8001a96:	2306      	movs	r3, #6
 8001a98:	70fb      	strb	r3, [r7, #3]
 8001a9a:	f7fe fef2 	bl	8000882 <HLCD_VidClearScreen>
 8001a9e:	486b      	ldr	r0, [pc, #428]	; (8001c4c <main+0x1154>)
 8001aa0:	f7fe feda 	bl	8000858 <HLCD_VidWriteString>
									 HLCD_VidShift(15,1);
 8001aa4:	2101      	movs	r1, #1
 8001aa6:	200f      	movs	r0, #15
 8001aa8:	f7fe fef5 	bl	8000896 <HLCD_VidShift>
									 			HLCD_VidWriteString("<-");
 8001aac:	4860      	ldr	r0, [pc, #384]	; (8001c30 <main+0x1138>)
 8001aae:	f7fe fed3 	bl	8000858 <HLCD_VidWriteString>
									 			HLCD_VidShift(16,2);
 8001ab2:	2102      	movs	r1, #2
 8001ab4:	2010      	movs	r0, #16
 8001ab6:	f7fe feee 	bl	8000896 <HLCD_VidShift>
									 			HLCD_VidWriteString("5");
 8001aba:	485e      	ldr	r0, [pc, #376]	; (8001c34 <main+0x113c>)
 8001abc:	f7fe fecc 	bl	8000858 <HLCD_VidWriteString>
									MUSART1_VidSendCharSync('0');
 8001ac0:	2030      	movs	r0, #48	; 0x30
 8001ac2:	f7fe fff3 	bl	8000aac <MUSART1_VidSendCharSync>
									HKEYPAD_VidDelay();
 8001ac6:	f7fe fd19 	bl	80004fc <HKEYPAD_VidDelay>
									HKEYPAD_VidDelay();
 8001aca:	f7fe fd17 	bl	80004fc <HKEYPAD_VidDelay>
									if(first==0){
 8001ace:	e797      	b.n	8001a00 <main+0xf08>
							if(first==0){
 8001ad0:	e75e      	b.n	8001990 <main+0xe98>
								}
							}

						}
					}
				else if(room=='2'){
 8001ad2:	797b      	ldrb	r3, [r7, #5]
 8001ad4:	2b32      	cmp	r3, #50	; 0x32
 8001ad6:	f040 80bd 	bne.w	8001c54 <main+0x115c>
								room=6;
 8001ada:	2306      	movs	r3, #6
 8001adc:	717b      	strb	r3, [r7, #5]
								first=0;
 8001ade:	2300      	movs	r3, #0
 8001ae0:	71fb      	strb	r3, [r7, #7]
								HLCD_VidClearScreen();
 8001ae2:	f7fe fece 	bl	8000882 <HLCD_VidClearScreen>
							while(1){
										if(first==0){
 8001ae6:	79fb      	ldrb	r3, [r7, #7]
 8001ae8:	2b00      	cmp	r3, #0
 8001aea:	d11b      	bne.n	8001b24 <main+0x102c>
										//room=0;
										HLCD_VidClearScreen();
 8001aec:	f7fe fec9 	bl	8000882 <HLCD_VidClearScreen>
										HLCD_VidWriteString("Welcome Room2:");
 8001af0:	4857      	ldr	r0, [pc, #348]	; (8001c50 <main+0x1158>)
 8001af2:	f7fe feb1 	bl	8000858 <HLCD_VidWriteString>
										HLCD_VidShift(15,1);
 8001af6:	2101      	movs	r1, #1
 8001af8:	200f      	movs	r0, #15
 8001afa:	f7fe fecc 	bl	8000896 <HLCD_VidShift>
													HLCD_VidWriteString("<-");
 8001afe:	484c      	ldr	r0, [pc, #304]	; (8001c30 <main+0x1138>)
 8001b00:	f7fe feaa 	bl	8000858 <HLCD_VidWriteString>
													HLCD_VidShift(16,2);
 8001b04:	2102      	movs	r1, #2
 8001b06:	2010      	movs	r0, #16
 8001b08:	f7fe fec5 	bl	8000896 <HLCD_VidShift>
													HLCD_VidWriteString("5");
 8001b0c:	4849      	ldr	r0, [pc, #292]	; (8001c34 <main+0x113c>)
 8001b0e:	f7fe fea3 	bl	8000858 <HLCD_VidWriteString>
										HLCD_VidShift(1,2);
 8001b12:	2102      	movs	r1, #2
 8001b14:	2001      	movs	r0, #1
 8001b16:	f7fe febe 	bl	8000896 <HLCD_VidShift>
										HLCD_VidWriteString("LIGHT1:");
 8001b1a:	4849      	ldr	r0, [pc, #292]	; (8001c40 <main+0x1148>)
 8001b1c:	f7fe fe9c 	bl	8000858 <HLCD_VidWriteString>
										first=1;
 8001b20:	2301      	movs	r3, #1
 8001b22:	71fb      	strb	r3, [r7, #7]
										}
										HKEYPAD_VidDelay();
 8001b24:	f7fe fcea 	bl	80004fc <HKEYPAD_VidDelay>
										HKEYPAD_VidDelay();
 8001b28:	f7fe fce8 	bl	80004fc <HKEYPAD_VidDelay>
										control=HkEYPAD_u8GetPress();
 8001b2c:	f7fe fd56 	bl	80005dc <HkEYPAD_u8GetPress>
 8001b30:	4603      	mov	r3, r0
 8001b32:	713b      	strb	r3, [r7, #4]
										if(control=='5'){first=0;	control=6; break;}
 8001b34:	793b      	ldrb	r3, [r7, #4]
 8001b36:	2b35      	cmp	r3, #53	; 0x35
 8001b38:	d104      	bne.n	8001b44 <main+0x104c>
 8001b3a:	2300      	movs	r3, #0
 8001b3c:	71fb      	strb	r3, [r7, #7]
 8001b3e:	2306      	movs	r3, #6
 8001b40:	713b      	strb	r3, [r7, #4]
 8001b42:	e1dd      	b.n	8001f00 <main+0x1408>
										else if(control=='1'){
 8001b44:	793b      	ldrb	r3, [r7, #4]
 8001b46:	2b31      	cmp	r3, #49	; 0x31
 8001b48:	d1cd      	bne.n	8001ae6 <main+0xfee>
											control=6;
 8001b4a:	2306      	movs	r3, #6
 8001b4c:	713b      	strb	r3, [r7, #4]
											first=0;
 8001b4e:	2300      	movs	r3, #0
 8001b50:	71fb      	strb	r3, [r7, #7]
											HLCD_VidClearScreen();
 8001b52:	f7fe fe96 	bl	8000882 <HLCD_VidClearScreen>
										while(1){

												if(first==0){
 8001b56:	79fb      	ldrb	r3, [r7, #7]
 8001b58:	2b00      	cmp	r3, #0
 8001b5a:	d114      	bne.n	8001b86 <main+0x108e>
												//control=0;
													HLCD_VidClearScreen();
 8001b5c:	f7fe fe91 	bl	8000882 <HLCD_VidClearScreen>
												HLCD_VidWriteString("LI-ON1/OFF0:");
 8001b60:	4838      	ldr	r0, [pc, #224]	; (8001c44 <main+0x114c>)
 8001b62:	f7fe fe79 	bl	8000858 <HLCD_VidWriteString>
												HLCD_VidShift(15,1);
 8001b66:	2101      	movs	r1, #1
 8001b68:	200f      	movs	r0, #15
 8001b6a:	f7fe fe94 	bl	8000896 <HLCD_VidShift>
															HLCD_VidWriteString("<-");
 8001b6e:	4830      	ldr	r0, [pc, #192]	; (8001c30 <main+0x1138>)
 8001b70:	f7fe fe72 	bl	8000858 <HLCD_VidWriteString>
															HLCD_VidShift(16,2);
 8001b74:	2102      	movs	r1, #2
 8001b76:	2010      	movs	r0, #16
 8001b78:	f7fe fe8d 	bl	8000896 <HLCD_VidShift>
															HLCD_VidWriteString("5");
 8001b7c:	482d      	ldr	r0, [pc, #180]	; (8001c34 <main+0x113c>)
 8001b7e:	f7fe fe6b 	bl	8000858 <HLCD_VidWriteString>
												first=1;
 8001b82:	2301      	movs	r3, #1
 8001b84:	71fb      	strb	r3, [r7, #7]
												}
												HKEYPAD_VidDelay();
 8001b86:	f7fe fcb9 	bl	80004fc <HKEYPAD_VidDelay>
												HKEYPAD_VidDelay();
 8001b8a:	f7fe fcb7 	bl	80004fc <HKEYPAD_VidDelay>
												on_off=HkEYPAD_u8GetPress();
 8001b8e:	f7fe fd25 	bl	80005dc <HkEYPAD_u8GetPress>
 8001b92:	4603      	mov	r3, r0
 8001b94:	70fb      	strb	r3, [r7, #3]
												 if(on_off=='5'){first=0;on_off=6; break;}
 8001b96:	78fb      	ldrb	r3, [r7, #3]
 8001b98:	2b35      	cmp	r3, #53	; 0x35
 8001b9a:	d104      	bne.n	8001ba6 <main+0x10ae>
 8001b9c:	2300      	movs	r3, #0
 8001b9e:	71fb      	strb	r3, [r7, #7]
 8001ba0:	2306      	movs	r3, #6
 8001ba2:	70fb      	strb	r3, [r7, #3]
 8001ba4:	e03f      	b.n	8001c26 <main+0x112e>
												 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8001ba6:	78fb      	ldrb	r3, [r7, #3]
 8001ba8:	2b31      	cmp	r3, #49	; 0x31
 8001baa:	d11c      	bne.n	8001be6 <main+0x10ee>
 8001bac:	2306      	movs	r3, #6
 8001bae:	70fb      	strb	r3, [r7, #3]
 8001bb0:	f7fe fe67 	bl	8000882 <HLCD_VidClearScreen>
 8001bb4:	4824      	ldr	r0, [pc, #144]	; (8001c48 <main+0x1150>)
 8001bb6:	f7fe fe4f 	bl	8000858 <HLCD_VidWriteString>
												 HLCD_VidShift(15,1);
 8001bba:	2101      	movs	r1, #1
 8001bbc:	200f      	movs	r0, #15
 8001bbe:	f7fe fe6a 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("<-");
 8001bc2:	481b      	ldr	r0, [pc, #108]	; (8001c30 <main+0x1138>)
 8001bc4:	f7fe fe48 	bl	8000858 <HLCD_VidWriteString>
												 			HLCD_VidShift(16,2);
 8001bc8:	2102      	movs	r1, #2
 8001bca:	2010      	movs	r0, #16
 8001bcc:	f7fe fe63 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("5");
 8001bd0:	4818      	ldr	r0, [pc, #96]	; (8001c34 <main+0x113c>)
 8001bd2:	f7fe fe41 	bl	8000858 <HLCD_VidWriteString>
												  MUSART1_VidSendCharSync('1');
 8001bd6:	2031      	movs	r0, #49	; 0x31
 8001bd8:	f7fe ff68 	bl	8000aac <MUSART1_VidSendCharSync>
												 HKEYPAD_VidDelay();
 8001bdc:	f7fe fc8e 	bl	80004fc <HKEYPAD_VidDelay>
												HKEYPAD_VidDelay();
 8001be0:	f7fe fc8c 	bl	80004fc <HKEYPAD_VidDelay>
 8001be4:	e7b7      	b.n	8001b56 <main+0x105e>
																			}
												 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8001be6:	78fb      	ldrb	r3, [r7, #3]
 8001be8:	2b30      	cmp	r3, #48	; 0x30
 8001bea:	d1b4      	bne.n	8001b56 <main+0x105e>
 8001bec:	2306      	movs	r3, #6
 8001bee:	70fb      	strb	r3, [r7, #3]
 8001bf0:	f7fe fe47 	bl	8000882 <HLCD_VidClearScreen>
 8001bf4:	4815      	ldr	r0, [pc, #84]	; (8001c4c <main+0x1154>)
 8001bf6:	f7fe fe2f 	bl	8000858 <HLCD_VidWriteString>
												 HLCD_VidShift(15,1);
 8001bfa:	2101      	movs	r1, #1
 8001bfc:	200f      	movs	r0, #15
 8001bfe:	f7fe fe4a 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("<-");
 8001c02:	480b      	ldr	r0, [pc, #44]	; (8001c30 <main+0x1138>)
 8001c04:	f7fe fe28 	bl	8000858 <HLCD_VidWriteString>
												 			HLCD_VidShift(16,2);
 8001c08:	2102      	movs	r1, #2
 8001c0a:	2010      	movs	r0, #16
 8001c0c:	f7fe fe43 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("5");
 8001c10:	4808      	ldr	r0, [pc, #32]	; (8001c34 <main+0x113c>)
 8001c12:	f7fe fe21 	bl	8000858 <HLCD_VidWriteString>
												MUSART1_VidSendCharSync('0');
 8001c16:	2030      	movs	r0, #48	; 0x30
 8001c18:	f7fe ff48 	bl	8000aac <MUSART1_VidSendCharSync>
												HKEYPAD_VidDelay();
 8001c1c:	f7fe fc6e 	bl	80004fc <HKEYPAD_VidDelay>
												HKEYPAD_VidDelay();
 8001c20:	f7fe fc6c 	bl	80004fc <HKEYPAD_VidDelay>
												if(first==0){
 8001c24:	e797      	b.n	8001b56 <main+0x105e>
										if(first==0){
 8001c26:	e75e      	b.n	8001ae6 <main+0xfee>
 8001c28:	0800229c 	.word	0x0800229c
 8001c2c:	080021ec 	.word	0x080021ec
 8001c30:	080021fc 	.word	0x080021fc
 8001c34:	08002200 	.word	0x08002200
 8001c38:	08002204 	.word	0x08002204
 8001c3c:	08002214 	.word	0x08002214
 8001c40:	080022b0 	.word	0x080022b0
 8001c44:	08002234 	.word	0x08002234
 8001c48:	08002244 	.word	0x08002244
 8001c4c:	08002248 	.word	0x08002248
 8001c50:	0800226c 	.word	0x0800226c
										}


									}
								}
				else if(room=='3'){
 8001c54:	797b      	ldrb	r3, [r7, #5]
 8001c56:	2b33      	cmp	r3, #51	; 0x33
 8001c58:	f040 80a7 	bne.w	8001daa <main+0x12b2>
								room=6;
 8001c5c:	2306      	movs	r3, #6
 8001c5e:	717b      	strb	r3, [r7, #5]
								first=0;
 8001c60:	2300      	movs	r3, #0
 8001c62:	71fb      	strb	r3, [r7, #7]
								HLCD_VidClearScreen();
 8001c64:	f7fe fe0d 	bl	8000882 <HLCD_VidClearScreen>
							while(1){
										if(first==0){
 8001c68:	79fb      	ldrb	r3, [r7, #7]
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	d11b      	bne.n	8001ca6 <main+0x11ae>
										//room=0;
										HLCD_VidClearScreen();
 8001c6e:	f7fe fe08 	bl	8000882 <HLCD_VidClearScreen>
										HLCD_VidWriteString("Welcome Room3:");
 8001c72:	48a5      	ldr	r0, [pc, #660]	; (8001f08 <main+0x1410>)
 8001c74:	f7fe fdf0 	bl	8000858 <HLCD_VidWriteString>
										HLCD_VidShift(15,1);
 8001c78:	2101      	movs	r1, #1
 8001c7a:	200f      	movs	r0, #15
 8001c7c:	f7fe fe0b 	bl	8000896 <HLCD_VidShift>
													HLCD_VidWriteString("<-");
 8001c80:	48a2      	ldr	r0, [pc, #648]	; (8001f0c <main+0x1414>)
 8001c82:	f7fe fde9 	bl	8000858 <HLCD_VidWriteString>
													HLCD_VidShift(16,2);
 8001c86:	2102      	movs	r1, #2
 8001c88:	2010      	movs	r0, #16
 8001c8a:	f7fe fe04 	bl	8000896 <HLCD_VidShift>
													HLCD_VidWriteString("5");
 8001c8e:	48a0      	ldr	r0, [pc, #640]	; (8001f10 <main+0x1418>)
 8001c90:	f7fe fde2 	bl	8000858 <HLCD_VidWriteString>
										HLCD_VidShift(1,2);
 8001c94:	2102      	movs	r1, #2
 8001c96:	2001      	movs	r0, #1
 8001c98:	f7fe fdfd 	bl	8000896 <HLCD_VidShift>
										HLCD_VidWriteString("LIGHT1:");
 8001c9c:	489d      	ldr	r0, [pc, #628]	; (8001f14 <main+0x141c>)
 8001c9e:	f7fe fddb 	bl	8000858 <HLCD_VidWriteString>
										first=1;
 8001ca2:	2301      	movs	r3, #1
 8001ca4:	71fb      	strb	r3, [r7, #7]
										}
										HKEYPAD_VidDelay();
 8001ca6:	f7fe fc29 	bl	80004fc <HKEYPAD_VidDelay>
										HKEYPAD_VidDelay();
 8001caa:	f7fe fc27 	bl	80004fc <HKEYPAD_VidDelay>
										control=HkEYPAD_u8GetPress();
 8001cae:	f7fe fc95 	bl	80005dc <HkEYPAD_u8GetPress>
 8001cb2:	4603      	mov	r3, r0
 8001cb4:	713b      	strb	r3, [r7, #4]
										if(control=='5'){first=0;	control=6; break;}
 8001cb6:	793b      	ldrb	r3, [r7, #4]
 8001cb8:	2b35      	cmp	r3, #53	; 0x35
 8001cba:	d104      	bne.n	8001cc6 <main+0x11ce>
 8001cbc:	2300      	movs	r3, #0
 8001cbe:	71fb      	strb	r3, [r7, #7]
 8001cc0:	2306      	movs	r3, #6
 8001cc2:	713b      	strb	r3, [r7, #4]
 8001cc4:	e11c      	b.n	8001f00 <main+0x1408>
										else if(control=='1'){
 8001cc6:	793b      	ldrb	r3, [r7, #4]
 8001cc8:	2b31      	cmp	r3, #49	; 0x31
 8001cca:	d1cd      	bne.n	8001c68 <main+0x1170>
											control=6;
 8001ccc:	2306      	movs	r3, #6
 8001cce:	713b      	strb	r3, [r7, #4]
											first=0;
 8001cd0:	2300      	movs	r3, #0
 8001cd2:	71fb      	strb	r3, [r7, #7]
											HLCD_VidClearScreen();
 8001cd4:	f7fe fdd5 	bl	8000882 <HLCD_VidClearScreen>
										while(1){

												if(first==0){
 8001cd8:	79fb      	ldrb	r3, [r7, #7]
 8001cda:	2b00      	cmp	r3, #0
 8001cdc:	d114      	bne.n	8001d08 <main+0x1210>
												//control=0;
													HLCD_VidClearScreen();
 8001cde:	f7fe fdd0 	bl	8000882 <HLCD_VidClearScreen>
												HLCD_VidWriteString("LI-ON1/OFF0:");
 8001ce2:	488d      	ldr	r0, [pc, #564]	; (8001f18 <main+0x1420>)
 8001ce4:	f7fe fdb8 	bl	8000858 <HLCD_VidWriteString>
												HLCD_VidShift(15,1);
 8001ce8:	2101      	movs	r1, #1
 8001cea:	200f      	movs	r0, #15
 8001cec:	f7fe fdd3 	bl	8000896 <HLCD_VidShift>
															HLCD_VidWriteString("<-");
 8001cf0:	4886      	ldr	r0, [pc, #536]	; (8001f0c <main+0x1414>)
 8001cf2:	f7fe fdb1 	bl	8000858 <HLCD_VidWriteString>
															HLCD_VidShift(16,2);
 8001cf6:	2102      	movs	r1, #2
 8001cf8:	2010      	movs	r0, #16
 8001cfa:	f7fe fdcc 	bl	8000896 <HLCD_VidShift>
															HLCD_VidWriteString("5");
 8001cfe:	4884      	ldr	r0, [pc, #528]	; (8001f10 <main+0x1418>)
 8001d00:	f7fe fdaa 	bl	8000858 <HLCD_VidWriteString>
												first=1;
 8001d04:	2301      	movs	r3, #1
 8001d06:	71fb      	strb	r3, [r7, #7]
												}
												HKEYPAD_VidDelay();
 8001d08:	f7fe fbf8 	bl	80004fc <HKEYPAD_VidDelay>
												HKEYPAD_VidDelay();
 8001d0c:	f7fe fbf6 	bl	80004fc <HKEYPAD_VidDelay>
												on_off=HkEYPAD_u8GetPress();
 8001d10:	f7fe fc64 	bl	80005dc <HkEYPAD_u8GetPress>
 8001d14:	4603      	mov	r3, r0
 8001d16:	70fb      	strb	r3, [r7, #3]
												 if(on_off=='5'){first=0;on_off=6; break;}
 8001d18:	78fb      	ldrb	r3, [r7, #3]
 8001d1a:	2b35      	cmp	r3, #53	; 0x35
 8001d1c:	d104      	bne.n	8001d28 <main+0x1230>
 8001d1e:	2300      	movs	r3, #0
 8001d20:	71fb      	strb	r3, [r7, #7]
 8001d22:	2306      	movs	r3, #6
 8001d24:	70fb      	strb	r3, [r7, #3]
 8001d26:	e03f      	b.n	8001da8 <main+0x12b0>
												 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8001d28:	78fb      	ldrb	r3, [r7, #3]
 8001d2a:	2b31      	cmp	r3, #49	; 0x31
 8001d2c:	d11c      	bne.n	8001d68 <main+0x1270>
 8001d2e:	2306      	movs	r3, #6
 8001d30:	70fb      	strb	r3, [r7, #3]
 8001d32:	f7fe fda6 	bl	8000882 <HLCD_VidClearScreen>
 8001d36:	4879      	ldr	r0, [pc, #484]	; (8001f1c <main+0x1424>)
 8001d38:	f7fe fd8e 	bl	8000858 <HLCD_VidWriteString>
												 HLCD_VidShift(15,1);
 8001d3c:	2101      	movs	r1, #1
 8001d3e:	200f      	movs	r0, #15
 8001d40:	f7fe fda9 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("<-");
 8001d44:	4871      	ldr	r0, [pc, #452]	; (8001f0c <main+0x1414>)
 8001d46:	f7fe fd87 	bl	8000858 <HLCD_VidWriteString>
												 			HLCD_VidShift(16,2);
 8001d4a:	2102      	movs	r1, #2
 8001d4c:	2010      	movs	r0, #16
 8001d4e:	f7fe fda2 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("5");
 8001d52:	486f      	ldr	r0, [pc, #444]	; (8001f10 <main+0x1418>)
 8001d54:	f7fe fd80 	bl	8000858 <HLCD_VidWriteString>
												  MUSART1_VidSendCharSync('1');
 8001d58:	2031      	movs	r0, #49	; 0x31
 8001d5a:	f7fe fea7 	bl	8000aac <MUSART1_VidSendCharSync>
												 HKEYPAD_VidDelay();
 8001d5e:	f7fe fbcd 	bl	80004fc <HKEYPAD_VidDelay>
												HKEYPAD_VidDelay();
 8001d62:	f7fe fbcb 	bl	80004fc <HKEYPAD_VidDelay>
 8001d66:	e7b7      	b.n	8001cd8 <main+0x11e0>
																			}
												 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8001d68:	78fb      	ldrb	r3, [r7, #3]
 8001d6a:	2b30      	cmp	r3, #48	; 0x30
 8001d6c:	d1b4      	bne.n	8001cd8 <main+0x11e0>
 8001d6e:	2306      	movs	r3, #6
 8001d70:	70fb      	strb	r3, [r7, #3]
 8001d72:	f7fe fd86 	bl	8000882 <HLCD_VidClearScreen>
 8001d76:	486a      	ldr	r0, [pc, #424]	; (8001f20 <main+0x1428>)
 8001d78:	f7fe fd6e 	bl	8000858 <HLCD_VidWriteString>
												 HLCD_VidShift(15,1);
 8001d7c:	2101      	movs	r1, #1
 8001d7e:	200f      	movs	r0, #15
 8001d80:	f7fe fd89 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("<-");
 8001d84:	4861      	ldr	r0, [pc, #388]	; (8001f0c <main+0x1414>)
 8001d86:	f7fe fd67 	bl	8000858 <HLCD_VidWriteString>
												 			HLCD_VidShift(16,2);
 8001d8a:	2102      	movs	r1, #2
 8001d8c:	2010      	movs	r0, #16
 8001d8e:	f7fe fd82 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("5");
 8001d92:	485f      	ldr	r0, [pc, #380]	; (8001f10 <main+0x1418>)
 8001d94:	f7fe fd60 	bl	8000858 <HLCD_VidWriteString>
												MUSART1_VidSendCharSync('0');
 8001d98:	2030      	movs	r0, #48	; 0x30
 8001d9a:	f7fe fe87 	bl	8000aac <MUSART1_VidSendCharSync>
												HKEYPAD_VidDelay();
 8001d9e:	f7fe fbad 	bl	80004fc <HKEYPAD_VidDelay>
												HKEYPAD_VidDelay();
 8001da2:	f7fe fbab 	bl	80004fc <HKEYPAD_VidDelay>
												if(first==0){
 8001da6:	e797      	b.n	8001cd8 <main+0x11e0>
										if(first==0){
 8001da8:	e75e      	b.n	8001c68 <main+0x1170>
										}


									}
								}
				else if(room=='4'){
 8001daa:	797b      	ldrb	r3, [r7, #5]
 8001dac:	2b34      	cmp	r3, #52	; 0x34
 8001dae:	f47f adaf 	bne.w	8001910 <main+0xe18>
								room=6;
 8001db2:	2306      	movs	r3, #6
 8001db4:	717b      	strb	r3, [r7, #5]
								first=0;
 8001db6:	2300      	movs	r3, #0
 8001db8:	71fb      	strb	r3, [r7, #7]
								HLCD_VidClearScreen();
 8001dba:	f7fe fd62 	bl	8000882 <HLCD_VidClearScreen>
							while(1){
										if(first==0){
 8001dbe:	79fb      	ldrb	r3, [r7, #7]
 8001dc0:	2b00      	cmp	r3, #0
 8001dc2:	d11b      	bne.n	8001dfc <main+0x1304>
										//room=0;
										HLCD_VidClearScreen();
 8001dc4:	f7fe fd5d 	bl	8000882 <HLCD_VidClearScreen>
										HLCD_VidWriteString("Welcome Room4:");
 8001dc8:	4856      	ldr	r0, [pc, #344]	; (8001f24 <main+0x142c>)
 8001dca:	f7fe fd45 	bl	8000858 <HLCD_VidWriteString>
										HLCD_VidShift(15,1);
 8001dce:	2101      	movs	r1, #1
 8001dd0:	200f      	movs	r0, #15
 8001dd2:	f7fe fd60 	bl	8000896 <HLCD_VidShift>
													HLCD_VidWriteString("<-");
 8001dd6:	484d      	ldr	r0, [pc, #308]	; (8001f0c <main+0x1414>)
 8001dd8:	f7fe fd3e 	bl	8000858 <HLCD_VidWriteString>
													HLCD_VidShift(16,2);
 8001ddc:	2102      	movs	r1, #2
 8001dde:	2010      	movs	r0, #16
 8001de0:	f7fe fd59 	bl	8000896 <HLCD_VidShift>
													HLCD_VidWriteString("5");
 8001de4:	484a      	ldr	r0, [pc, #296]	; (8001f10 <main+0x1418>)
 8001de6:	f7fe fd37 	bl	8000858 <HLCD_VidWriteString>
										HLCD_VidShift(1,2);
 8001dea:	2102      	movs	r1, #2
 8001dec:	2001      	movs	r0, #1
 8001dee:	f7fe fd52 	bl	8000896 <HLCD_VidShift>
										HLCD_VidWriteString("LIGHT1:");
 8001df2:	4848      	ldr	r0, [pc, #288]	; (8001f14 <main+0x141c>)
 8001df4:	f7fe fd30 	bl	8000858 <HLCD_VidWriteString>
										first=1;
 8001df8:	2301      	movs	r3, #1
 8001dfa:	71fb      	strb	r3, [r7, #7]
										}
										HKEYPAD_VidDelay();
 8001dfc:	f7fe fb7e 	bl	80004fc <HKEYPAD_VidDelay>
										HKEYPAD_VidDelay();
 8001e00:	f7fe fb7c 	bl	80004fc <HKEYPAD_VidDelay>
										control=HkEYPAD_u8GetPress();
 8001e04:	f7fe fbea 	bl	80005dc <HkEYPAD_u8GetPress>
 8001e08:	4603      	mov	r3, r0
 8001e0a:	713b      	strb	r3, [r7, #4]
										if(control=='5'){first=0;	control=6; break;}
 8001e0c:	793b      	ldrb	r3, [r7, #4]
 8001e0e:	2b35      	cmp	r3, #53	; 0x35
 8001e10:	d104      	bne.n	8001e1c <main+0x1324>
 8001e12:	2300      	movs	r3, #0
 8001e14:	71fb      	strb	r3, [r7, #7]
 8001e16:	2306      	movs	r3, #6
 8001e18:	713b      	strb	r3, [r7, #4]
 8001e1a:	e071      	b.n	8001f00 <main+0x1408>
										else if(control=='1'){
 8001e1c:	793b      	ldrb	r3, [r7, #4]
 8001e1e:	2b31      	cmp	r3, #49	; 0x31
 8001e20:	d1cd      	bne.n	8001dbe <main+0x12c6>
											control=6;
 8001e22:	2306      	movs	r3, #6
 8001e24:	713b      	strb	r3, [r7, #4]
											first=0;
 8001e26:	2300      	movs	r3, #0
 8001e28:	71fb      	strb	r3, [r7, #7]
											HLCD_VidClearScreen();
 8001e2a:	f7fe fd2a 	bl	8000882 <HLCD_VidClearScreen>
										while(1){

												if(first==0){
 8001e2e:	79fb      	ldrb	r3, [r7, #7]
 8001e30:	2b00      	cmp	r3, #0
 8001e32:	d114      	bne.n	8001e5e <main+0x1366>
												//control=0;
													HLCD_VidClearScreen();
 8001e34:	f7fe fd25 	bl	8000882 <HLCD_VidClearScreen>
												HLCD_VidWriteString("LI-ON1/OFF0:");
 8001e38:	4837      	ldr	r0, [pc, #220]	; (8001f18 <main+0x1420>)
 8001e3a:	f7fe fd0d 	bl	8000858 <HLCD_VidWriteString>
												HLCD_VidShift(15,1);
 8001e3e:	2101      	movs	r1, #1
 8001e40:	200f      	movs	r0, #15
 8001e42:	f7fe fd28 	bl	8000896 <HLCD_VidShift>
															HLCD_VidWriteString("<-");
 8001e46:	4831      	ldr	r0, [pc, #196]	; (8001f0c <main+0x1414>)
 8001e48:	f7fe fd06 	bl	8000858 <HLCD_VidWriteString>
															HLCD_VidShift(16,2);
 8001e4c:	2102      	movs	r1, #2
 8001e4e:	2010      	movs	r0, #16
 8001e50:	f7fe fd21 	bl	8000896 <HLCD_VidShift>
															HLCD_VidWriteString("5");
 8001e54:	482e      	ldr	r0, [pc, #184]	; (8001f10 <main+0x1418>)
 8001e56:	f7fe fcff 	bl	8000858 <HLCD_VidWriteString>
												first=1;
 8001e5a:	2301      	movs	r3, #1
 8001e5c:	71fb      	strb	r3, [r7, #7]
												}
												HKEYPAD_VidDelay();
 8001e5e:	f7fe fb4d 	bl	80004fc <HKEYPAD_VidDelay>
												HKEYPAD_VidDelay();
 8001e62:	f7fe fb4b 	bl	80004fc <HKEYPAD_VidDelay>
												on_off=HkEYPAD_u8GetPress();
 8001e66:	f7fe fbb9 	bl	80005dc <HkEYPAD_u8GetPress>
 8001e6a:	4603      	mov	r3, r0
 8001e6c:	70fb      	strb	r3, [r7, #3]
												 if(on_off=='5'){first=0;on_off=6; break;}
 8001e6e:	78fb      	ldrb	r3, [r7, #3]
 8001e70:	2b35      	cmp	r3, #53	; 0x35
 8001e72:	d104      	bne.n	8001e7e <main+0x1386>
 8001e74:	2300      	movs	r3, #0
 8001e76:	71fb      	strb	r3, [r7, #7]
 8001e78:	2306      	movs	r3, #6
 8001e7a:	70fb      	strb	r3, [r7, #3]
 8001e7c:	e03f      	b.n	8001efe <main+0x1406>
												 else if(on_off=='1'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("ON");
 8001e7e:	78fb      	ldrb	r3, [r7, #3]
 8001e80:	2b31      	cmp	r3, #49	; 0x31
 8001e82:	d11c      	bne.n	8001ebe <main+0x13c6>
 8001e84:	2306      	movs	r3, #6
 8001e86:	70fb      	strb	r3, [r7, #3]
 8001e88:	f7fe fcfb 	bl	8000882 <HLCD_VidClearScreen>
 8001e8c:	4823      	ldr	r0, [pc, #140]	; (8001f1c <main+0x1424>)
 8001e8e:	f7fe fce3 	bl	8000858 <HLCD_VidWriteString>
												 HLCD_VidShift(15,1);
 8001e92:	2101      	movs	r1, #1
 8001e94:	200f      	movs	r0, #15
 8001e96:	f7fe fcfe 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("<-");
 8001e9a:	481c      	ldr	r0, [pc, #112]	; (8001f0c <main+0x1414>)
 8001e9c:	f7fe fcdc 	bl	8000858 <HLCD_VidWriteString>
												 			HLCD_VidShift(16,2);
 8001ea0:	2102      	movs	r1, #2
 8001ea2:	2010      	movs	r0, #16
 8001ea4:	f7fe fcf7 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("5");
 8001ea8:	4819      	ldr	r0, [pc, #100]	; (8001f10 <main+0x1418>)
 8001eaa:	f7fe fcd5 	bl	8000858 <HLCD_VidWriteString>
												  MUSART1_VidSendCharSync('1');
 8001eae:	2031      	movs	r0, #49	; 0x31
 8001eb0:	f7fe fdfc 	bl	8000aac <MUSART1_VidSendCharSync>
												 HKEYPAD_VidDelay();
 8001eb4:	f7fe fb22 	bl	80004fc <HKEYPAD_VidDelay>
												HKEYPAD_VidDelay();
 8001eb8:	f7fe fb20 	bl	80004fc <HKEYPAD_VidDelay>
 8001ebc:	e7b7      	b.n	8001e2e <main+0x1336>
																			}
												 else if(on_off=='0'){on_off=6;HLCD_VidClearScreen();HLCD_VidWriteString("OFF");
 8001ebe:	78fb      	ldrb	r3, [r7, #3]
 8001ec0:	2b30      	cmp	r3, #48	; 0x30
 8001ec2:	d1b4      	bne.n	8001e2e <main+0x1336>
 8001ec4:	2306      	movs	r3, #6
 8001ec6:	70fb      	strb	r3, [r7, #3]
 8001ec8:	f7fe fcdb 	bl	8000882 <HLCD_VidClearScreen>
 8001ecc:	4814      	ldr	r0, [pc, #80]	; (8001f20 <main+0x1428>)
 8001ece:	f7fe fcc3 	bl	8000858 <HLCD_VidWriteString>
												 HLCD_VidShift(15,1);
 8001ed2:	2101      	movs	r1, #1
 8001ed4:	200f      	movs	r0, #15
 8001ed6:	f7fe fcde 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("<-");
 8001eda:	480c      	ldr	r0, [pc, #48]	; (8001f0c <main+0x1414>)
 8001edc:	f7fe fcbc 	bl	8000858 <HLCD_VidWriteString>
												 			HLCD_VidShift(16,2);
 8001ee0:	2102      	movs	r1, #2
 8001ee2:	2010      	movs	r0, #16
 8001ee4:	f7fe fcd7 	bl	8000896 <HLCD_VidShift>
												 			HLCD_VidWriteString("5");
 8001ee8:	4809      	ldr	r0, [pc, #36]	; (8001f10 <main+0x1418>)
 8001eea:	f7fe fcb5 	bl	8000858 <HLCD_VidWriteString>
												MUSART1_VidSendCharSync('0');
 8001eee:	2030      	movs	r0, #48	; 0x30
 8001ef0:	f7fe fddc 	bl	8000aac <MUSART1_VidSendCharSync>
												HKEYPAD_VidDelay();
 8001ef4:	f7fe fb02 	bl	80004fc <HKEYPAD_VidDelay>
												HKEYPAD_VidDelay();
 8001ef8:	f7fe fb00 	bl	80004fc <HKEYPAD_VidDelay>
												if(first==0){
 8001efc:	e797      	b.n	8001e2e <main+0x1336>
										if(first==0){
 8001efe:	e75e      	b.n	8001dbe <main+0x12c6>
				if(first==0){
 8001f00:	e506      	b.n	8001910 <main+0xe18>
	while(1){
 8001f02:	f7fe be26 	b.w	8000b52 <main+0x5a>
 8001f06:	bf00      	nop
 8001f08:	0800227c 	.word	0x0800227c
 8001f0c:	080021fc 	.word	0x080021fc
 8001f10:	08002200 	.word	0x08002200
 8001f14:	080022b0 	.word	0x080022b0
 8001f18:	08002234 	.word	0x08002234
 8001f1c:	08002244 	.word	0x08002244
 8001f20:	08002248 	.word	0x08002248
 8001f24:	0800228c 	.word	0x0800228c

08001f28 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8001f28:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001f60 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8001f2c:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8001f2e:	e003      	b.n	8001f38 <LoopCopyDataInit>

08001f30 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8001f30:	4b0c      	ldr	r3, [pc, #48]	; (8001f64 <LoopFillZerobss+0x18>)
	ldr	r3, [r3, r1]
 8001f32:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8001f34:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8001f36:	3104      	adds	r1, #4

08001f38 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8001f38:	480b      	ldr	r0, [pc, #44]	; (8001f68 <LoopFillZerobss+0x1c>)
	ldr	r3, =_edata
 8001f3a:	4b0c      	ldr	r3, [pc, #48]	; (8001f6c <LoopFillZerobss+0x20>)
	adds	r2, r0, r1
 8001f3c:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8001f3e:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8001f40:	d3f6      	bcc.n	8001f30 <CopyDataInit>
	ldr	r2, =_sbss
 8001f42:	4a0b      	ldr	r2, [pc, #44]	; (8001f70 <LoopFillZerobss+0x24>)
	b	LoopFillZerobss
 8001f44:	e002      	b.n	8001f4c <LoopFillZerobss>

08001f46 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8001f46:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8001f48:	f842 3b04 	str.w	r3, [r2], #4

08001f4c <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8001f4c:	4b09      	ldr	r3, [pc, #36]	; (8001f74 <LoopFillZerobss+0x28>)
	cmp	r2, r3
 8001f4e:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8001f50:	d3f9      	bcc.n	8001f46 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8001f52:	f000 f837 	bl	8001fc4 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 8001f56:	f000 f8ef 	bl	8002138 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8001f5a:	f7fe fdcd 	bl	8000af8 <main>
	bx	lr
 8001f5e:	4770      	bx	lr
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8001f60:	20001800 	.word	0x20001800
	ldr	r3, =_sidata
 8001f64:	080022c0 	.word	0x080022c0
	ldr	r0, =_sdata
 8001f68:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8001f6c:	20000000 	.word	0x20000000
	ldr	r2, =_sbss
 8001f70:	20000000 	.word	0x20000000
	ldr	r3, = _ebss
 8001f74:	2000003c 	.word	0x2000003c

08001f78 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8001f78:	e7fe      	b.n	8001f78 <ADC1_2_IRQHandler>

08001f7a <NMI_Handler>:
  * @brief  This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 8001f7a:	b480      	push	{r7}
 8001f7c:	af00      	add	r7, sp, #0
}
 8001f7e:	bf00      	nop
 8001f80:	46bd      	mov	sp, r7
 8001f82:	bc80      	pop	{r7}
 8001f84:	4770      	bx	lr

08001f86 <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 8001f86:	b480      	push	{r7}
 8001f88:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Hard Fault exception occurs */
  while (1)
 8001f8a:	e7fe      	b.n	8001f8a <HardFault_Handler+0x4>

08001f8c <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 8001f8c:	b480      	push	{r7}
 8001f8e:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Memory Manage exception occurs */
  while (1)
 8001f90:	e7fe      	b.n	8001f90 <MemManage_Handler+0x4>

08001f92 <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 8001f92:	b480      	push	{r7}
 8001f94:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Bus Fault exception occurs */
  while (1)
 8001f96:	e7fe      	b.n	8001f96 <BusFault_Handler+0x4>

08001f98 <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 8001f98:	b480      	push	{r7}
 8001f9a:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Usage Fault exception occurs */
  while (1)
 8001f9c:	e7fe      	b.n	8001f9c <UsageFault_Handler+0x4>

08001f9e <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 8001f9e:	b480      	push	{r7}
 8001fa0:	af00      	add	r7, sp, #0
}
 8001fa2:	bf00      	nop
 8001fa4:	46bd      	mov	sp, r7
 8001fa6:	bc80      	pop	{r7}
 8001fa8:	4770      	bx	lr

08001faa <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 8001faa:	b480      	push	{r7}
 8001fac:	af00      	add	r7, sp, #0
}
 8001fae:	bf00      	nop
 8001fb0:	46bd      	mov	sp, r7
 8001fb2:	bc80      	pop	{r7}
 8001fb4:	4770      	bx	lr

08001fb6 <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 8001fb6:	b480      	push	{r7}
 8001fb8:	af00      	add	r7, sp, #0
}
 8001fba:	bf00      	nop
 8001fbc:	46bd      	mov	sp, r7
 8001fbe:	bc80      	pop	{r7}
 8001fc0:	4770      	bx	lr
	...

08001fc4 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001fc4:	b580      	push	{r7, lr}
 8001fc6:	af00      	add	r7, sp, #0
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8001fc8:	4a15      	ldr	r2, [pc, #84]	; (8002020 <SystemInit+0x5c>)
 8001fca:	4b15      	ldr	r3, [pc, #84]	; (8002020 <SystemInit+0x5c>)
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	f043 0301 	orr.w	r3, r3, #1
 8001fd2:	6013      	str	r3, [r2, #0]

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#ifndef STM32F10X_CL
  RCC->CFGR &= (uint32_t)0xF8FF0000;
 8001fd4:	4912      	ldr	r1, [pc, #72]	; (8002020 <SystemInit+0x5c>)
 8001fd6:	4b12      	ldr	r3, [pc, #72]	; (8002020 <SystemInit+0x5c>)
 8001fd8:	685a      	ldr	r2, [r3, #4]
 8001fda:	4b12      	ldr	r3, [pc, #72]	; (8002024 <SystemInit+0x60>)
 8001fdc:	4013      	ands	r3, r2
 8001fde:	604b      	str	r3, [r1, #4]
#else
  RCC->CFGR &= (uint32_t)0xF0FF0000;
#endif /* STM32F10X_CL */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8001fe0:	4a0f      	ldr	r2, [pc, #60]	; (8002020 <SystemInit+0x5c>)
 8001fe2:	4b0f      	ldr	r3, [pc, #60]	; (8002020 <SystemInit+0x5c>)
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8001fea:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001fee:	6013      	str	r3, [r2, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8001ff0:	4a0b      	ldr	r2, [pc, #44]	; (8002020 <SystemInit+0x5c>)
 8001ff2:	4b0b      	ldr	r3, [pc, #44]	; (8002020 <SystemInit+0x5c>)
 8001ff4:	681b      	ldr	r3, [r3, #0]
 8001ff6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001ffa:	6013      	str	r3, [r2, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
 8001ffc:	4a08      	ldr	r2, [pc, #32]	; (8002020 <SystemInit+0x5c>)
 8001ffe:	4b08      	ldr	r3, [pc, #32]	; (8002020 <SystemInit+0x5c>)
 8002000:	685b      	ldr	r3, [r3, #4]
 8002002:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8002006:	6053      	str	r3, [r2, #4]

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000;      
#else
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000;
 8002008:	4b05      	ldr	r3, [pc, #20]	; (8002020 <SystemInit+0x5c>)
 800200a:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 800200e:	609a      	str	r2, [r3, #8]
  #endif /* DATA_IN_ExtSRAM */
#endif 

  /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
  /* Configure the Flash Latency cycles and enable prefetch buffer */
  SetSysClock();
 8002010:	f000 f80c 	bl	800202c <SetSysClock>

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 8002014:	4b04      	ldr	r3, [pc, #16]	; (8002028 <SystemInit+0x64>)
 8002016:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800201a:	609a      	str	r2, [r3, #8]
#endif 
}
 800201c:	bf00      	nop
 800201e:	bd80      	pop	{r7, pc}
 8002020:	40021000 	.word	0x40021000
 8002024:	f8ff0000 	.word	0xf8ff0000
 8002028:	e000ed00 	.word	0xe000ed00

0800202c <SetSysClock>:
  * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
 800202c:	b580      	push	{r7, lr}
 800202e:	af00      	add	r7, sp, #0
#elif defined SYSCLK_FREQ_48MHz
  SetSysClockTo48();
#elif defined SYSCLK_FREQ_56MHz
  SetSysClockTo56();  
#elif defined SYSCLK_FREQ_72MHz
  SetSysClockTo72();
 8002030:	f000 f802 	bl	8002038 <SetSysClockTo72>
#endif
 
 /* If none of the define above is enabled, the HSI is used as System clock
    source (default after reset) */ 
}
 8002034:	bf00      	nop
 8002036:	bd80      	pop	{r7, pc}

08002038 <SetSysClockTo72>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
static void SetSysClockTo72(void)
{
 8002038:	b480      	push	{r7}
 800203a:	b083      	sub	sp, #12
 800203c:	af00      	add	r7, sp, #0
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 800203e:	2300      	movs	r3, #0
 8002040:	607b      	str	r3, [r7, #4]
 8002042:	2300      	movs	r3, #0
 8002044:	603b      	str	r3, [r7, #0]
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
  /* Enable HSE */    
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 8002046:	4a3a      	ldr	r2, [pc, #232]	; (8002130 <SetSysClockTo72+0xf8>)
 8002048:	4b39      	ldr	r3, [pc, #228]	; (8002130 <SetSysClockTo72+0xf8>)
 800204a:	681b      	ldr	r3, [r3, #0]
 800204c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002050:	6013      	str	r3, [r2, #0]
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 8002052:	4b37      	ldr	r3, [pc, #220]	; (8002130 <SetSysClockTo72+0xf8>)
 8002054:	681b      	ldr	r3, [r3, #0]
 8002056:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800205a:	603b      	str	r3, [r7, #0]
    StartUpCounter++;  
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	3301      	adds	r3, #1
 8002060:	607b      	str	r3, [r7, #4]
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 8002062:	683b      	ldr	r3, [r7, #0]
 8002064:	2b00      	cmp	r3, #0
 8002066:	d103      	bne.n	8002070 <SetSysClockTo72+0x38>
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 800206e:	d1f0      	bne.n	8002052 <SetSysClockTo72+0x1a>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 8002070:	4b2f      	ldr	r3, [pc, #188]	; (8002130 <SetSysClockTo72+0xf8>)
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002078:	2b00      	cmp	r3, #0
 800207a:	d002      	beq.n	8002082 <SetSysClockTo72+0x4a>
  {
    HSEStatus = (uint32_t)0x01;
 800207c:	2301      	movs	r3, #1
 800207e:	603b      	str	r3, [r7, #0]
 8002080:	e001      	b.n	8002086 <SetSysClockTo72+0x4e>
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
 8002082:	2300      	movs	r3, #0
 8002084:	603b      	str	r3, [r7, #0]
  }  

  if (HSEStatus == (uint32_t)0x01)
 8002086:	683b      	ldr	r3, [r7, #0]
 8002088:	2b01      	cmp	r3, #1
 800208a:	d14b      	bne.n	8002124 <SetSysClockTo72+0xec>
  {
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTBE;
 800208c:	4a29      	ldr	r2, [pc, #164]	; (8002134 <SetSysClockTo72+0xfc>)
 800208e:	4b29      	ldr	r3, [pc, #164]	; (8002134 <SetSysClockTo72+0xfc>)
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	f043 0310 	orr.w	r3, r3, #16
 8002096:	6013      	str	r3, [r2, #0]

    /* Flash 2 wait state */
    FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 8002098:	4a26      	ldr	r2, [pc, #152]	; (8002134 <SetSysClockTo72+0xfc>)
 800209a:	4b26      	ldr	r3, [pc, #152]	; (8002134 <SetSysClockTo72+0xfc>)
 800209c:	681b      	ldr	r3, [r3, #0]
 800209e:	f023 0303 	bic.w	r3, r3, #3
 80020a2:	6013      	str	r3, [r2, #0]
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 80020a4:	4a23      	ldr	r2, [pc, #140]	; (8002134 <SetSysClockTo72+0xfc>)
 80020a6:	4b23      	ldr	r3, [pc, #140]	; (8002134 <SetSysClockTo72+0xfc>)
 80020a8:	681b      	ldr	r3, [r3, #0]
 80020aa:	f043 0302 	orr.w	r3, r3, #2
 80020ae:	6013      	str	r3, [r2, #0]

 
    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 80020b0:	4a1f      	ldr	r2, [pc, #124]	; (8002130 <SetSysClockTo72+0xf8>)
 80020b2:	4b1f      	ldr	r3, [pc, #124]	; (8002130 <SetSysClockTo72+0xf8>)
 80020b4:	685b      	ldr	r3, [r3, #4]
 80020b6:	6053      	str	r3, [r2, #4]
      
    /* PCLK2 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 80020b8:	4a1d      	ldr	r2, [pc, #116]	; (8002130 <SetSysClockTo72+0xf8>)
 80020ba:	4b1d      	ldr	r3, [pc, #116]	; (8002130 <SetSysClockTo72+0xf8>)
 80020bc:	685b      	ldr	r3, [r3, #4]
 80020be:	6053      	str	r3, [r2, #4]
    
    /* PCLK1 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 80020c0:	4a1b      	ldr	r2, [pc, #108]	; (8002130 <SetSysClockTo72+0xf8>)
 80020c2:	4b1b      	ldr	r3, [pc, #108]	; (8002130 <SetSysClockTo72+0xf8>)
 80020c4:	685b      	ldr	r3, [r3, #4]
 80020c6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80020ca:	6053      	str	r3, [r2, #4]
    RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
                            RCC_CFGR_PLLMULL9); 
#else    
    /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
 80020cc:	4a18      	ldr	r2, [pc, #96]	; (8002130 <SetSysClockTo72+0xf8>)
 80020ce:	4b18      	ldr	r3, [pc, #96]	; (8002130 <SetSysClockTo72+0xf8>)
 80020d0:	685b      	ldr	r3, [r3, #4]
 80020d2:	f423 137c 	bic.w	r3, r3, #4128768	; 0x3f0000
 80020d6:	6053      	str	r3, [r2, #4]
                                        RCC_CFGR_PLLMULL));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
 80020d8:	4a15      	ldr	r2, [pc, #84]	; (8002130 <SetSysClockTo72+0xf8>)
 80020da:	4b15      	ldr	r3, [pc, #84]	; (8002130 <SetSysClockTo72+0xf8>)
 80020dc:	685b      	ldr	r3, [r3, #4]
 80020de:	f443 13e8 	orr.w	r3, r3, #1900544	; 0x1d0000
 80020e2:	6053      	str	r3, [r2, #4]
#endif /* STM32F10X_CL */

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 80020e4:	4a12      	ldr	r2, [pc, #72]	; (8002130 <SetSysClockTo72+0xf8>)
 80020e6:	4b12      	ldr	r3, [pc, #72]	; (8002130 <SetSysClockTo72+0xf8>)
 80020e8:	681b      	ldr	r3, [r3, #0]
 80020ea:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80020ee:	6013      	str	r3, [r2, #0]

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 80020f0:	bf00      	nop
 80020f2:	4b0f      	ldr	r3, [pc, #60]	; (8002130 <SetSysClockTo72+0xf8>)
 80020f4:	681b      	ldr	r3, [r3, #0]
 80020f6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d0f9      	beq.n	80020f2 <SetSysClockTo72+0xba>
    {
    }
    
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 80020fe:	4a0c      	ldr	r2, [pc, #48]	; (8002130 <SetSysClockTo72+0xf8>)
 8002100:	4b0b      	ldr	r3, [pc, #44]	; (8002130 <SetSysClockTo72+0xf8>)
 8002102:	685b      	ldr	r3, [r3, #4]
 8002104:	f023 0303 	bic.w	r3, r3, #3
 8002108:	6053      	str	r3, [r2, #4]
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 800210a:	4a09      	ldr	r2, [pc, #36]	; (8002130 <SetSysClockTo72+0xf8>)
 800210c:	4b08      	ldr	r3, [pc, #32]	; (8002130 <SetSysClockTo72+0xf8>)
 800210e:	685b      	ldr	r3, [r3, #4]
 8002110:	f043 0302 	orr.w	r3, r3, #2
 8002114:	6053      	str	r3, [r2, #4]

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 8002116:	bf00      	nop
 8002118:	4b05      	ldr	r3, [pc, #20]	; (8002130 <SetSysClockTo72+0xf8>)
 800211a:	685b      	ldr	r3, [r3, #4]
 800211c:	f003 030c 	and.w	r3, r3, #12
 8002120:	2b08      	cmp	r3, #8
 8002122:	d1f9      	bne.n	8002118 <SetSysClockTo72+0xe0>
  }
  else
  { /* If HSE fails to start-up, the application will have wrong clock 
         configuration. User can add here some code to deal with this error */
  }
}
 8002124:	bf00      	nop
 8002126:	370c      	adds	r7, #12
 8002128:	46bd      	mov	sp, r7
 800212a:	bc80      	pop	{r7}
 800212c:	4770      	bx	lr
 800212e:	bf00      	nop
 8002130:	40021000 	.word	0x40021000
 8002134:	40022000 	.word	0x40022000

08002138 <__libc_init_array>:
 8002138:	b570      	push	{r4, r5, r6, lr}
 800213a:	2500      	movs	r5, #0
 800213c:	4e0c      	ldr	r6, [pc, #48]	; (8002170 <__libc_init_array+0x38>)
 800213e:	4c0d      	ldr	r4, [pc, #52]	; (8002174 <__libc_init_array+0x3c>)
 8002140:	1ba4      	subs	r4, r4, r6
 8002142:	10a4      	asrs	r4, r4, #2
 8002144:	42a5      	cmp	r5, r4
 8002146:	d109      	bne.n	800215c <__libc_init_array+0x24>
 8002148:	f000 f81a 	bl	8002180 <_init>
 800214c:	2500      	movs	r5, #0
 800214e:	4e0a      	ldr	r6, [pc, #40]	; (8002178 <__libc_init_array+0x40>)
 8002150:	4c0a      	ldr	r4, [pc, #40]	; (800217c <__libc_init_array+0x44>)
 8002152:	1ba4      	subs	r4, r4, r6
 8002154:	10a4      	asrs	r4, r4, #2
 8002156:	42a5      	cmp	r5, r4
 8002158:	d105      	bne.n	8002166 <__libc_init_array+0x2e>
 800215a:	bd70      	pop	{r4, r5, r6, pc}
 800215c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002160:	4798      	blx	r3
 8002162:	3501      	adds	r5, #1
 8002164:	e7ee      	b.n	8002144 <__libc_init_array+0xc>
 8002166:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800216a:	4798      	blx	r3
 800216c:	3501      	adds	r5, #1
 800216e:	e7f2      	b.n	8002156 <__libc_init_array+0x1e>
 8002170:	080022b8 	.word	0x080022b8
 8002174:	080022b8 	.word	0x080022b8
 8002178:	080022b8 	.word	0x080022b8
 800217c:	080022bc 	.word	0x080022bc

08002180 <_init>:
 8002180:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002182:	bf00      	nop
 8002184:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002186:	bc08      	pop	{r3}
 8002188:	469e      	mov	lr, r3
 800218a:	4770      	bx	lr

0800218c <_fini>:
 800218c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800218e:	bf00      	nop
 8002190:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002192:	bc08      	pop	{r3}
 8002194:	469e      	mov	lr, r3
 8002196:	4770      	bx	lr
